1
00: 00: 00.000 -> 00: 00: 04.491
[MÚSICA, TOCANDO]

2
00: 00: 04,491 -> 00: 00: 49.398

3
00: 00: 49,398 -> 00: 00: 50.440
DAVID J MALAN: Tudo bem.

4
00: 00: 50,440 -> 00: 00: 53.560
Este é CS50, Harvard
Introdução da universidade

5
00: 00: 53,560 -> 00: 00: 55.930
para o intelectual
empresas de ciência da computação

6
00: 00: 55,930 -> 00: 00: 57.610
e a arte da programação.

7
00: 00: 57,610 -> 00: 01: 01.840
E normalmente estaríamos todos aqui
no campus neste belo Sanders

8
00: 01: 01,840 -> 00: 01: 02.800
Teatro juntos.

9
00: 01: 02,800 -> 00: 01: 05.560
Isso, claro, é um pouco
um pouco diferente este ano,

10
00: 01: 05,560 -> 00: 01: 07.375
por mais de um motivo.

11
00: 01: 07,375 -> 00: 01: 11.110
Mas estamos aqui, em vez disso, no Loeb
Drama Center da Harvard University.

12
00: 01: 11,110 -> 00: 01: 14.350
Obrigado aos nossos amigos em colaboração
com o American Repertory Theatre,

13
00: 01: 14,350 -> 00: 01: 19.607
temos este novo espaço, incluindo até
comodidades como uma loja de acessórios nos fundos,

14
00: 01: 19.607 -> 00: 01: 21.940
onde temos trabalhado
uma equipe incrivelmente talentosa

15
00: 01: 21,940 -> 00: 01: 25.300
ao longo do verão para
prepare-se para este semestre e CS50.

16
00: 01: 25,300 -> 00: 01: 29.540
E então eu ouso dizer que teremos alguns novos e
demonstrações aprimoradas ao longo do caminho.

17
00: 01: 29,540 -> 00: 01: 32.920
Portanto, nossos agradecimentos aos nossos anfitriões,
o American Repertory Theatre.

18
00: 01: 32,920 -> 00: 01: 35.440
Agora queríamos evocar
memórias, pelo menos,

19
00: 01: 35,440 -> 00: 01: 38.290
ou alguma imagem do
próprio campus, particularmente

20
00: 01: 38,290 -> 00: 01: 41.300
para muitos de vocês que não puderam
esteja aqui pessoalmente neste semestre.

21
00: 01: 41,300 -> 00: 01: 45.040
E então fomos para Harvard
Arquivos, onde entre suas coleções

22
00: 01: 45,040 -> 00: 01: 49.330
era esta pintura em aquarela,
pintado por um estudante graduado de Harvard

23
00: 01: 49,330 -> 00: 01: 52.870
mais de 200 anos atrás no ano de 1794.

24
00: 01: 52,870 -> 00: 01: 56.230
Jonathan Fisher, que sentou em
o que agora é Harvard Square,

25
00: 01: 56,230 -> 00: 01: 59.950
olhando alguns dos primeiros
edifícios do campus de Harvard.

26
00: 01: 59,950 -> 00: 02: 03.700
E graças à tecnologia, pegamos
o que é uma aquarela relativamente pequena

27
00: 02: 03,700 -> 00: 02: 07.420
que este estudante de graduação
pintado há cerca de 200 anos,

28
00: 02: 07,420 -> 00: 02: 10.720
e agora enfeita o palco aqui
no Loeb Drama Center.

29
00: 02: 10,720 -> 00: 02: 14.320
Então, se não for familiar, temos
Capela Holden aqui à esquerda,

30
00: 02: 14,320 -> 00: 02: 17.920
Hollis Hall à sua direita, que é
um dos dormitórios de graduação

31
00: 02: 17,920 -> 00: 02: 20.920
em Harvard Yard, Harvard Hall,
que é um da sala de aula

32
00: 02: 20,920 -> 00: 02: 24.070
edifícios no campus, e
então Massachusetts Hall,

33
00: 02: 24,070 -> 00: 02: 29.720
onde ambos os primeiros anos e Harvard
presidente viver e trabalhar respectivamente.

34
00: 02: 29,720 -> 00: 02: 31.650
Bem-vindo, então, ao CS50.

35
00: 02: 31,650 -> 00: 02: 35.800
E eu posso dizer que
não há tanto tempo,

36
00: 02: 35,800 -> 00: 02: 38.620
mas, no entanto, parece bastante
há muito tempo, cerca de 20 anos atrás,

37
00: 02: 38,620 -> 00: 02: 39.910
eu fiz a mesma aula.

38
00: 02: 39,910 -> 00: 02: 44.530
Mas como você sabe, eu mesmo
teve alguma trepidação

39
00: 02: 44,530 -> 00: 02: 47.710
quando se tratava de estudar CS50, quando
tratava-se de estudar ciência da computação.

40
00: 02: 47,710 -> 00: 02: 49.720
Porque era um campo muito desconhecido.

41
00: 02: 49,720 -> 00: 02: 53.650
Eu tinha seguido um caminho quando cheguei a
faculdade de ficar dentro do meu conforto

42
00: 02: 53,650 -> 00: 02: 56.080
zona, estudando governo cedo
ligado, pensando que me especializaria

43
00: 02: 56,080 -> 00: 02: 57.430
ou concentrar-se no governo.

44
00: 02: 57,430 -> 00: 03: 02.080
E não foi até que eu levantei o
coragem para fazer compras, isto é, sentar-se

45
00: 03: 02,080 -> 00: 03: 06.730
nesta classe CS50, que percebi
esse dever de casa pode ser divertido.

46
00: 03: 06,730 -> 00: 03: 10.840
E descobri que a ciência da computação e
CS50 não é sobre programação em si,

47
00: 03: 10.840 -> 00: 03: 14.660
mesmo que seja quanto de
nós percebemos isso na escola,

48
00: 03: 14,660 -> 00: 03: 17.075
se somos nós ou nosso
colegas fazendo a aula.

49
00: 03: 17,075 -> 00: 03: 18.700
Mas realmente se trata de resolução de problemas.

50
00: 03: 18,700 -> 00: 03: 21.160
E como tal, é tão
muito aplicável não só

51
00: 03: 21,160 -> 00: 03: 23.290
para a ciência da computação e
os campos de engenharia,

52
00: 03: 23,290 -> 00: 03: 27.890
mas realmente para as artes, humanidades,
ciências sociais, ciências e além.

53
00: 03: 27,890 -> 00: 03: 30.160
E então se você está sentindo
um pouco desconfortável

54
00: 03: 30,160 -> 00: 03: 32.500
com a ideia de tomar
uma classe como CS50,

55
00: 03: 32,500 -> 00: 03: 36.910
sei que quase todos os anos, quase dois
terços dos alunos que fazem CS50

56
00: 03: 36,910 -> 00: 03: 40.010
nunca peguei um computador
curso de ciências antes.

57
00: 03: 40,010 -> 00: 03: 45.220
Então, se você olhar para cima, para baixo, para a esquerda, para a direita,
agora, as chances são mais do que muitas

58
00: 03: 45,220 -> 00: 03: 49.720
dos colegas se juntando a você aqui
hoje estão em uma posição muito semelhante.

59
00: 03: 49,720 -> 00: 03: 52.270
Você está realmente em boa companhia.

60
00: 03: 52,270 -> 00: 03: 56.683
E o que é importante no CS50
também, enfatizamos, como no programa,

61
00: 03: 56,683 -> 00: 03: 59.350
que o que importa em última instância em
este curso não é tanto onde

62
00: 03: 59,350 -> 00: 04: 01.750
você acaba em relação ao seu
colegas de classe, mas onde você termina

63
00: 04: 01,750 -> 00: 04: 04.360
em relação a você mesmo quando você começou.

64
00: 04: 04,360 -> 00: 04: 07.242
Na verdade, levando em consideração
onde você está atualmente, talvez

65
00: 04: 07,242 -> 00: 04: 08.950
sem experiência anterior,
e considerando

66
00: 04: 08,950 -> 00: 04: 11.590
onde você estará
apenas três ou mais meses

67
00: 04: 11,590 -> 00: 04: 14.510
em última análise, pretende ser o
medida de seu próprio sucesso.

68
00: 04: 14,510 -> 00: 04: 19.029
E assim, para esse fim, vamos
comece esta aula de programação

69
00: 04: 19,029 -> 00: 04: 20.890
um pouco de antigamente.

70
00: 04: 20,890 -> 00: 04: 23.350
Uma imagem aqui de Super Mario
Irmãos e a pirâmide

71
00: 04: 23,350 -> 00: 04: 24.910
que o personagem tem que subir.

72
00: 04: 24,910 -> 00: 04: 28.780
Vamos recriar uma parte de
este jogo, embora usando texto -

73
00: 04: 28,780 -> 00: 04: 32.920
também conhecido como arte ASCII - mas vamos
faça isso apenas no segundo do curso

74
00: 04: 32,920 -> 00: 04: 33.795
ou assim por semana.

75
00: 04: 33,795 -> 00: 04: 35.920
Então, isso estará entre os
primeiros programas que você escreve.

76
00: 04: 35,920 -> 00: 04: 39.070
E, em seguida, avançar apenas alguns
conjuntos de problemas ou programação

77
00: 04: 39,070 -> 00: 04: 41.950
atribuições mais tarde, ou
várias semanas depois, também,

78
00: 04: 41,950 -> 00: 04: 44.950
e você estará construindo o que
chamamos CS50 Finance, um site

79
00: 04: 44,950 -> 00: 04: 48.250
aplicação própria
que roda na internet,

80
00: 04: 48,250 -> 00: 04: 52.250
puxando para baixo o estoque quase em tempo real
citações de um serviço de terceiros,

81
00: 04: 52,250 -> 00: 04: 57.220
permitindo que seus próprios usuários façam login
e se registrar para comprar e vender ações,

82
00: 04: 57,220 -> 00: 04: 59.260
por assim dizer, usando moeda virtual.

83
00: 04: 59,260 -> 00: 05: 02.440
Então, ao longo do
a aula dura vários meses,

84
00: 05: 02,440 -> 00: 05: 05.335
você irá, verdadeiramente, de
construindo uma pirâmide em Mario

85
00: 05: 05,335 -> 00: 05: 08.050
para construir o seu próprio
aplicativo da web e muito mais,

86
00: 05: 08,050 -> 00: 05: 10.660
seguido pelo curso
experiência culminante, que

87
00: 05: 10,660 -> 00: 05: 13.450
será seu próprio projeto final.

88
00: 05: 13,450 -> 00: 05: 15.700
Mas o que exatamente é ciência da computação?

89
00: 05: 15,700 -> 00: 05: 19.600
O que pensamos que faríamos nesta semana
zero, a primeira semana de aula,

90
00: 05: 19,600 -> 00: 05: 23.200
é considerar exatamente o que
significa resolver problemas.

91
00: 05: 23,200 -> 00: 05: 26.080
E deixe-me propor isso
isso é ciência da computação.

92
00: 05: 26,080 -> 00: 05: 28.000
Esta é a solução de problemas.

93
00: 05: 28.000 -> 00: 05: 30.370
Você tem alguma contribuição, que
é o problema com o qual você se preocupa

94
00: 05: 30,370 -> 00: 05: 33.020
que você quer resolver, e você se preocupa
sobre a solução para esse problema,

95
00: 05: 33,020 -> 00: 05: 34.270
que é a chamada saída.

96
00: 05: 34,270 -> 00: 05: 37.660
E entre essa entrada
e a saída é esta caixa preta

97
00: 05: 37,660 -> 00: 05: 41.230
de tipos, dentro dos quais
é a magia que acontece,

98
00: 05: 41,230 -> 00: 05: 45.310
a magia que você eventualmente será
capaz de controlar e compelir computadores

99
00: 05: 45,310 -> 00: 05: 46.600
para resolver problemas para você.

100
00: 05: 46,600 -> 00: 05: 50.800
Dentro dessa caixa preta, em última análise,
será o código que você escreverá.

101
00: 05: 50,800 -> 00: 05: 53.380
Mas para nós começarmos a fazer
isso, todos nós meio que

102
00: 05: 53,380 -> 00: 05: 56.930
precisamos concordar sobre como vamos
representam essas entradas e saídas.

103
00: 05: 56,930 -> 00: 05: 59.755
Todos nós meio que temos que falar um
linguagem comum, por assim dizer.

104
00: 05: 59,755 -> 00: 06: 02.630
E então precisamos concordar como esses
as entradas serão representadas.

105
00: 06: 02,630 -> 00: 06: 05.050
Então, como podemos tipicamente
representa informação?

106
00: 06: 05,050 -> 00: 06: 08.230
Bem, talvez a coisa mais simples de fazer
na primeira aula, se estamos

107
00: 06: 08,230 -> 00: 06: 10.450
online ou pessoalmente,
é tomar atendimento

108
00: 06: 10,450 -> 00: 06: 13.520
ou para contar o número
de pessoas na sala.

109
00: 06: 13,520 -> 00: 06: 16.340
E então você pode fazer este velho
estilo escolar em suas mãos

110
00: 06: 16,340 -> 00: 06: 18.730
de modo a representar
cada pessoa em uma sala

111
00: 06: 18,730 -> 00: 06: 21.100
com apenas um dedo levantado em suas mãos.

112
00: 06: 21,100 -> 00: 06: 23.260
Então, como podemos representar
informação se resume

113
00: 06: 23,260 -> 00: 06: 25.880
para dígitos muito simples em sua mão.

114
00: 06: 25,880 -> 00: 06: 28.768
Claro, você não pode contar
muito alto apenas com esta mão.

115
00: 06: 28,768 -> 00: 06: 31.060
E há realmente uma fantasia
palavra para o que estamos fazendo,

116
00: 06: 31,060 -> 00: 06: 35.020
velha escola aqui, e isso é unário
notação-- uno, implicando um,

117
00: 06: 35,020 -> 00: 06: 36.920
ou um dedo para cima ou para baixo.

118
00: 06: 36,920 -> 00: 06: 39.128
E então você pode contar,
parece, tão alto quanto cinco.

119
00: 06: 39,128 -> 00: 06: 40.920
E claro, se eu
traga uma segunda mão,

120
00: 06: 40,920 -> 00: 06: 43.960
Eu posso ir tão alto quanto 10, e então
as coisas ficam um pouco mais difíceis.

121
00: 06: 43,960 -> 00: 06: 45.940
Mas é um sistema para
representando informação

122
00: 06: 45,940 -> 00: 06: 49.330
e é bastante universal, certamente
quando somos todos muito jovens.

123
00: 06: 49,330 -> 00: 06: 52.960
Mas você e eu tendemos a
usar um sistema mais útil.

124
00: 06: 52,960 -> 00: 06: 55.870
Não apenas dígitos na mão,
mas outros tipos de dígitos.

125
00: 06: 55,870 -> 00: 06: 58.780
Ou seja, os dígitos decimais
que você e eu sabemos.

126
00: 06: 58,780 -> 00: 07: 02.037
Então, os números que são de outra forma
mais tecnicamente chamado de base 10 -

127
00: 07: 02,037 -> 00: 07: 04.120
e isso é só uma fantasia
maneira de descrever o fato

128
00: 07: 04,120 -> 00: 07: 08.490
que há 10 dígitos que você e eu
como os humanos realmente tendem a usar normalmente.

129
00: 07: 08,490 -> 00: 07: 10.990
Esses dígitos, é claro,
são de zero a nove,

130
00: 07: 10,990 -> 00: 07: 14.710
e usando esses vários dígitos,
podemos representar números como zero

131
00: 07: 14,710 -> 00: 07: 18.220
até nove, mas também 10
e 11 e 12, e tão alto

132
00: 07: 18,220 -> 00: 07: 21.220
como queremos ir usando
vários dígitos ainda.

133
00: 07: 21,220 -> 00: 07: 26.140
Mas os computadores realmente não
fale a mesma língua que nós.

134
00: 07: 26,140 -> 00: 07: 29.570
Eles são, em certo sentido,
muito mais simples do que nós, humanos,

135
00: 07: 29,570 -> 00: 07: 33.760
mesmo que pareçam tão complicados ou
tão sofisticado e certamente tão rápido.

136
00: 07: 33,760 -> 00: 07: 36.430
No final do dia, estes
são todos dispositivos feitos pelo homem,

137
00: 07: 36,430 -> 00: 07: 39.230
e eles são relativamente
simples em seu núcleo.

138
00: 07: 39,230 -> 00: 07: 41.770
Na verdade, mesmo que você não
sei bem o que você está dizendo,

139
00: 07: 41,770 -> 00: 07: 43.870
mas você pelo menos ouviu
este for o caso,

140
00: 07: 43,870 -> 00: 07: 47.920
que lingua voce faz
entende computadores para falar?

141
00: 07: 47,920 -> 00: 07: 52.120
Que língua os computadores falam,
se não for o sistema que você e eu usamos

142
00: 07: 52,120 -> 00: 07: 54.520
de zeros a noves ou decimal?

143
00: 07: 54,520 -> 00: 07: 57.280
Brian, podemos ver
quem pode responder isso?

144
00: 07: 57,280 -> 00: 08: 00.340
Que sistema fazem os computadores
use, até onde você ouviu,

145
00: 08: 00,340 -> 00: 08: 02.800
se você ou não
fez uma aula de CS antes?

146
00: 08: 02,800 -> 00: 08: 04.305
Keith, podemos ir até você primeiro?

147
00: 08: 04,305 -> 00: 08: 04.930
PÚBLICO: Sim.

148
00: 08: 04,930 -> 00: 08: 06.263
Os computadores usam binários.

149
00: 08: 06,263 -> 00: 08: 07.180
DAVID J MALAN: Binário.

150
00: 08: 07,180 -> 00: 08: 08.638
E você pode elaborar um pouco mais?

151
00: 08: 08,638 -> 00: 08: 10.090
O que você quer dizer com binário?

152
00: 08: 10,090 -> 00: 08: 11.380
PÚBLICO: São zeros e uns.

153
00: 08: 11,380 -> 00: 08: 13.798
Então, tipo, enquanto usamos zero
a nove para a base 10,

154
00: 08: 13,798 -> 00: 08: 15.340
eles usam de zero a um para a base 2.

155
00: 08: 15,340 -> 00: 08: 16.548
DAVID J MALAN: Sim, exatamente.

156
00: 08: 16,548 -> 00: 08: 19.630
Portanto, os computadores usam os chamados
sistema binário, bi implicando dois.

157
00: 08: 19,630 -> 00: 08: 23.140
E eles, de fato, só usam, como Keith
notas, zero e um, dois dígitos.

158
00: 08: 23,140 -> 00: 08: 25.480
Então, por um lado, isso é
realmente muito encorajador,

159
00: 08: 25,480 -> 00: 08: 28.420
porque, uau, isso é na verdade um
sistema muito simples, se apenas estivermos

160
00: 08: 28,420 -> 00: 08: 29.830
usando dois desses dígitos.

161
00: 08: 29,830 -> 00: 08: 33.370
Mas, claro, se você
só tem dois dígitos,

162
00: 08: 33,370 -> 00: 08: 37.120
como vamos representar
o número dois ou três ou quatro

163
00: 08: 37,120 -> 00: 08: 38.830
ou qualquer número muito maior?

164
00: 08: 38,830 -> 00: 08: 40.970
Quase pareceria
como um passo para trás.

165
00: 08: 40,970 -> 00: 08: 41.980
Mas não é verdade.

166
00: 08: 41,980 -> 00: 08: 44.710
E acontece que este
chamado sistema, ou base 2 -

167
00: 08: 44,710 -> 00: 08: 47.560
dois porque há dois dígitos em
o vocabulário, também conhecido,

168
00: 08: 47,560 -> 00: 08: 49.000
como diz Keith, como binário -

169
00: 08: 49.000 -> 00: 08: 52.600
usa apenas zeros e uns, e gira
existe outra nomenclatura aqui

170
00: 08: 52,600 -> 00: 08: 53.500
podemos jogar fora.

171
00: 08: 53.500 -> 00: 08: 56.080
Esses zeros e uns são
também conhecido como bits.

172
00: 08: 56,080 -> 00: 09: 00.070
E os bits realmente derivam de
apenas duas palavras, dígitos binários.

173
00: 09: 00,070 -> 00: 09: 02.595
Binário, implicando dois
possibilidades, dígitos,

174
00: 09: 02,595 -> 00: 09: 03.970
sendo apenas símbolos na tela.

175
00: 09: 03,970 -> 00: 09: 05.845
Então, dígitos binários, ou
também conhecido como bits.

176
00: 09: 05,845 -> 00: 09: 09.220
E os computadores falam binário
usando essas coisas chamadas bits.

177
00: 09: 09,220 -> 00: 09: 11.350
Mas o que isso significa
e por que é o caso?

178
00: 09: 11,350 -> 00: 09: 13.480
Tipo, por que eles não
inventar computadores décadas atrás

179
00: 09: 13,480 -> 00: 09: 15.580
que usa apenas zero
até nove, ao invés de

180
00: 09: 15,580 -> 00: 09: 19.330
venha com um sistema totalmente novo para nós
para pensar, quanto mais falar?

181
00: 09: 19,330 -> 00: 09: 22.480
Bem, no final do dia, computadores
estão usando o quê como entrada?

182
00: 09: 22,480 -> 00: 09: 24.100
Na verdade, apenas eletricidade.

183
00: 09: 24,100 -> 00: 09: 28.030
Provavelmente a única coisa que todos nós
faça todos os dias ou a cada dois dias

184
00: 09: 28,030 -> 00: 09: 32.560
com nosso laptop ou desktop ou telefone é
verifique se ele ainda está conectado,

185
00: 09: 32,560 -> 00: 09: 34.780
ou para ligá-lo para carregá-lo.

186
00: 09: 34,780 -> 00: 09: 36.760
Então, o único físico
entrada para nossos dispositivos

187
00: 09: 36,760 -> 00: 09: 38.642
hoje em dia é eletricidade de alguma forma.

188
00: 09: 38,642 -> 00: 09: 41.350
E não temos que entrar no
nuances do que é eletricidade,

189
00: 09: 41,350 -> 00: 09: 45.610
mas eu acho que é sobre elétrons fluindo
no dispositivo para carregá-lo.

190
00: 09: 45,610 -> 00: 09: 48.310
Portanto, é suficiente para o nosso
propósitos de saber que há

191
00: 09: 48,310 -> 00: 09: 51.790
alguma entrada física para o dispositivo,
esses computadores e telefones que usamos.

192
00: 09: 51,790 -> 00: 09: 52.820
Mas é isso.

193
00: 09: 52,820 -> 00: 09: 56.410
E então, se aproveitarmos este
eletricidade, talvez nós

194
00: 09: 56,410 -> 00: 09: 58.510
pode começar a representar
informações com ele.

195
00: 09: 58,510 -> 00: 10: 01.900
Por exemplo, aqui está uma lâmpada,
esta velha luz fantasma no teatro aqui

196
00: 10: 01,900 -> 00: 10: 03.280
que está atualmente desativado.

197
00: 10: 03,280 -> 00: 10: 05.320
Mas tem a capacidade de ligar.

198
00: 10: 05,320 -> 00: 10: 08.750
Só precisamos ligá-lo
ou acione um interruptor.

199
00: 10: 08,750 -> 00: 10: 11.470
E se for esse o caso,
o que é realmente bem

200
00: 10: 11,470 -> 00: 10: 14.013
convincente sobre o
metáfora de usar luzes

201
00: 10: 14,013 -> 00: 10: 16.180
é isso agora, este
a lâmpada está desligada no momento,

202
00: 10: 16,180 -> 00: 10: 18.100
mas assim que eu permitir
eletricidade para fluir

203
00: 10: 18,100 -> 00: 10: 22.510
como ligando-o ou talvez jogando
um interruptor, agora está, é claro, ligado.

204
00: 10: 22,510 -> 00: 10: 25.570
E se eu desligar ou jogar
o interruptor novamente, está desligado.

205
00: 10: 25,570 -> 00: 10: 28.150
Ou se eu ligar novamente, ele está ligado.

206
00: 10: 28,150 -> 00: 10: 31.000
E a implicação de
esta ideia muito simples

207
00: 10: 31.000 -> 00: 10: 34.570
é que podemos fazer um exame físico
dispositivo, como uma única lâmpada,

208
00: 10: 34,570 -> 00: 10: 38.110
e conectando-o ou desconectando-o
isso, podemos representar informações.

209
00: 10: 38,110 -> 00: 10: 39.170
O que eu acabei de fazer?

210
00: 10: 39,170 -> 00: 10: 41.650
Eu representei a luz
lâmpada sendo desligada ou ligada,

211
00: 10: 41,650 -> 00: 10: 43.610
mas podemos simplesmente cancelar
e em outra coisa.

212
00: 10: 43,610 -> 00: 10: 46.250
Podemos chamá-los de zeros e uns.

213
00: 10: 46,250 -> 00: 10: 48.290
E então isso realmente é
o germe de uma ideia

214
00: 10: 48,290 -> 00: 10: 52.550
que nos deu computadores, e com
isso, seu uso do sistema binário.

215
00: 10: 52,550 -> 00: 10: 55.850
Se, no final do dia, todos eles
tem uma entrada física como eletricidade,

216
00: 10: 55,850 -> 00: 10: 59.800
bem, vamos apenas usar isso para aproveitar
e manter o controle das informações.

217
00: 10: 59,800 -> 00: 11: 03.240
Vamos armazenar um pouco de eletricidade
quando queremos representar um,

218
00: 11: 03,240 -> 00: 11: 05.870
e vamos deixar isso de lado
eletricidade em algum sentido

219
00: 11: 05,870 -> 00: 11: 09.060
quando queremos
representam um zero em vez disso.

220
00: 11: 09,060 -> 00: 11: 12.020
E assim porque a entrada
para computadores é tão simples,

221
00: 11: 12,020 -> 00: 11: 15.620
assim nos dá os zeros
e aqueles que agora usamos.

222
00: 11: 15,620 -> 00: 11: 18.050
Mas parece que criamos
um problema para nós.

223
00: 11: 18,050 -> 00: 11: 22.400
Se tivermos apenas uma lâmpada
ou um interruptor, se estiver desligado,

224
00: 11: 22,400 -> 00: 11: 25.760
pode ser zero, se for
ligado, pode ser um,

225
00: 11: 25,760 -> 00: 11: 28.220
mas como faço para contar mais de um?

226
00: 11: 28,220 -> 00: 11: 30.380
Esse problema ainda
permanece fundamentalmente.

227
00: 11: 30,380 -> 00: 11: 32.850
Bem, eu poderia, é claro,
use mais lâmpadas.

228
00: 11: 32,850 -> 00: 11: 33.920
Então, deixe-me perguntar isso.

229
00: 11: 33,920 -> 00: 11: 38.180
Se fôssemos usar três luzes
lâmpadas, quão alto poderíamos contar?

230
00: 11: 38,180 -> 00: 11: 42.740
Então, com uma lâmpada, podemos contar
de zero a um, duas possibilidades.

231
00: 11: 42,740 -> 00: 11: 45.170
Mas com três lâmpadas,
quão alto poderíamos contar?

232
00: 11: 45,170 -> 00: 11: 47.780
Deixe-me ir em frente e perguntar isso
pergunta aqui na tela.

233
00: 11: 47,780 -> 00: 11: 52.730
Em apenas um momento você verá em seu
lado esta questão particular através da qual

234
00: 11: 52,730 -> 00: 11: 56.150
você pode responder em seu dispositivo.

235
00: 11: 56,150 -> 00: 11: 59.820
Quão alto você pode contar
com três lâmpadas?

236
00: 11: 59,820 -> 00: 12: 05.130
Então, em vez de um, eu te dou três,
cada um dos quais pode estar ativado ou desativado.

237
00: 12: 05,130 -> 00: 12: 07.700
Quão alto podemos, talvez, contar?

238
00: 12: 07,700 -> 00: 12: 11.010
Então você verá na tela
aqui as respostas entram.

239
00: 12: 11,010 -> 00: 12: 14.360
Temos muitas pessoas pensando,
Mais de 60 por cento que é

240
00: 12: 14,360 -> 00: 12: 16.523
oito é o máximo que você pode contar.

241
00: 12: 16,523 -> 00: 12: 18.440
Muitos de vocês pensam que é
sete, e alguns de vocês

242
00: 12: 18,440 -> 00: 12: 20.960
também acho que pode ser três ou dois.

243
00: 12: 20,960 -> 00: 12: 23.790
Então isso é realmente um
gama interessante de respostas.

244
00: 12: 23,790 -> 00: 12: 25.980
E vamos ver o que pode
realmente seja o caso.

245
00: 12: 25,980 -> 00: 12: 29.990
Bem, deixe-me voltar para três
lâmpadas reais aqui, todas as quais

246
00: 12: 29,990 -> 00: 12: 30.680
estão desligados.

247
00: 12: 30,680 -> 00: 12: 33.620
E o mais ingenuamente, eu acho, se nós
deviam ligar essas lâmpadas,

248
00: 12: 33,620 -> 00: 12: 36.680
se eles atualmente representam zero,
obviamente, eu poderia ligar um

249
00: 12: 36,680 -> 00: 12: 37.760
e poderíamos chamá-lo de um.

250
00: 12: 37,760 -> 00: 12: 41.990
Então eu poderia ligar o segundo
e chamá-lo de dois, ligue o terceiro,

251
00: 12: 41,990 -> 00: 12: 44.963
e agora com todos os três, poderíamos
digamos que agora estamos representando três.

252
00: 12: 44,963 -> 00: 12: 47.630
Mas não estamos sendo espertos
o suficiente ainda, se nós apenas

253
00: 12: 47,630 -> 00: 12: 49.430
contando até três.

254
00: 12: 49,430 -> 00: 12: 52.340
Porque estou apenas transformando-os
em diante, nesta história, da esquerda para a direita.

255
00: 12: 52,340 -> 00: 12: 54.230
Mas e se nós estivéssemos
um pouco mais esperto?

256
00: 12: 54,230 -> 00: 12: 57.740
Talvez possamos ligá-los da direita para a esquerda,
ou talvez nós meio que os permutamos

257
00: 12: 57.740 -> 00: 12: 58.940
em direções diferentes?

258
00: 12: 58,940 -> 00: 13: 01.790
Ou seja, levamos em consideração
não apenas quantas lâmpadas estão acesas

259
00: 13: 01,790 -> 00: 13: 06.350
ou quantos dedos estão no
ar, mas sim o padrão de

260
00: 13: 06,350 -> 00: 13: 08.523
e fora das lâmpadas que criamos.

261
00: 13: 08,523 -> 00: 13: 09.690
Então, vamos apenas contar isso.

262
00: 13: 09,690 -> 00: 13: 12.680
Então, deixe-me um pouco sistematicamente
ligue algumas dessas lâmpadas aqui,

263
00: 13: 12,680 -> 00: 13: 14.000
embora virtualmente.

264
00: 13: 14.000 -> 00: 13: 18.147
Aqui pode ser um, aqui pode
ser dois, aqui podem ser três.

265
00: 13: 18,147 -> 00: 13: 19.980
Mas então somos meio que
feito com essa história.

266
00: 13: 19,980 -> 00: 13: 21.570
Então, como podemos fazer um pouco melhor?

267
00: 13: 21,570 -> 00: 13: 23.060
Bem, vamos começar de novo do zero.

268
00: 13: 23,060 -> 00: 13: 24.530
Aqui pode ser um.

269
00: 13: 24,530 -> 00: 13: 26.480
Por que não chamamos isso de dois?

270
00: 13: 26,480 -> 00: 13: 28.670
Por que não chamamos isso de três?

271
00: 13: 28,670 -> 00: 13: 30.770
Por que não chamamos isso de quatro?

272
00: 13: 30,770 -> 00: 13: 35.180
Chame isso de cinco, isso
seis, e este sete.

273
00: 13: 35,180 -> 00: 13: 38.030
Agora, está tudo bem se você não
veja qual padrão eu estava seguindo,

274
00: 13: 38,030 -> 00: 13: 42.800
mas acredite na minha palavra que
era um padrão único de lâmpadas,

275
00: 13: 42,800 -> 00: 13: 44.300
oito vezes no total.

276
00: 13: 44,300 -> 00: 13: 47.495
Comecei em off, off, off,
e terminei em on, on, on.

277
00: 13: 47,495 -> 00: 13: 49.370
Mas ao longo do caminho, lá
eram, de fato, oito.

278
00: 13: 49,370 -> 00: 13: 50.573
Mas até onde posso contar?

279
00: 13: 50,573 -> 00: 13: 53.240
Bem, isso depende do que
número a partir do qual você começa a contar,

280
00: 13: 53,240 -> 00: 13: 57.560
e assim como temos feito até agora,
os cientistas da computação fazem o tempo todo.

281
00: 13: 57.560 -> 00: 13: 59.900
Cientistas da computação e,
por sua vez, programas de computador,

282
00: 13: 59,900 -> 00: 14: 03.020
normalmente começa a contar a partir de
zero, só porque faz sentido

283
00: 14: 03,020 -> 00: 14: 05.900
porque quando tudo está desligado,
você também pode chamar isso de zero.

284
00: 14: 05,900 -> 00: 14: 09.800
Então, se começarmos a contar do zero,
e temos oito padrões possíveis

285
00: 14: 09,800 -> 00: 14: 12.320
que acabamos de ver
pictoricamente, bem, isso seria

286
00: 14: 12,320 -> 00: 14: 14.330
nos permite contar até sete.

287
00: 14: 14,330 -> 00: 14: 17.450
Então, de zero a sete,
então sete é o mais alto

288
00: 14: 17,450 -> 00: 14: 19.320
podemos contar com três lâmpadas.

289
00: 14: 19,320 -> 00: 14: 22.760
Então, aqueles de vocês que propõem que
sete foi a resposta, 36% de vocês

290
00: 14: 22,760 -> 00: 14: 24.410
estavam realmente corretos.

291
00: 14: 24,410 -> 00: 14: 29.510
57% de vocês que disseram que oito estão corretos
se você assumir que começamos a contar em um,

292
00: 14: 29,510 -> 00: 14: 30.360
e tudo bem.

293
00: 14: 30,360 -> 00: 14: 33.388
Mas pelo menos no mundo da computação
agora, geralmente, por convenção,

294
00: 14: 33,388 -> 00: 14: 34.430
comece a contar do zero.

295
00: 14: 34,430 -> 00: 14: 37.660
Mas você está correto em dizer que
existem oito dessas possibilidades.

296
00: 14: 37,660 -> 00: 14: 39.410
Certo, bem, isso
está tudo bem e bom

297
00: 14: 39,410 -> 00: 14: 41.460
representar coisas com
padrões de lâmpadas.

298
00: 14: 41,460 -> 00: 14: 44.270
Mas como é que agora
chegar aos zeros e uns

299
00: 14: 44,270 -> 00: 14: 45.920
que um computador está realmente usando?

300
00: 14: 45,920 -> 00: 14: 48.650
Porque o que está dentro de um
computador, no final do dia,

301
00: 14: 48,650 -> 00: 14: 52.070
não são lâmpadas, mas
minúsculos interruptores minúsculos,

302
00: 14: 52,070 -> 00: 14: 57.320
milhões de pequenos interruptores que podem
seja ligado, ou um, ou desligado, ou zero.

303
00: 14: 57,320 -> 00: 14: 59.780
Essas mudanças acontecem a
ser chamados de transistores.

304
00: 14: 59,780 -> 00: 15: 02.348
E hoje em dia os computadores
tem milhões

305
00: 15: 02,348 -> 00: 15: 04.890
dessas coisas que podem estar em
e fora em padrões diferentes.

306
00: 15: 04,890 -> 00: 15: 08.030
Então, se você tiver a capacidade de ligar
e desligar todos esses interruptores, bem,

307
00: 15: 08,030 -> 00: 15: 14.000
o que podemos todos concordar sobre representação
quando se trata de usar esses interruptores?

308
00: 15: 14.000 -> 00: 15: 16.250
Como vamos representar
informações com eles?

309
00: 15: 16,250 -> 00: 15: 19.700
Bem, maravilhosamente, nós não
realmente preciso pensar muito

310
00: 15: 19,700 -> 00: 15: 22.700
ou vá além do nosso
raízes confortáveis ​​quando crianças.

311
00: 15: 22,700 -> 00: 15: 25.320
Se considerarmos por um momento
não apenas zero e um,

312
00: 15: 25,320 -> 00: 15: 27.320
mas o decimal inteiro
sistema, zero a nove,

313
00: 15: 27,320 -> 00: 15: 30.000
que você e eu começamos
nosso dia com hoje.

314
00: 15: 30.000 -> 00: 15: 31.310
Como funciona esse sistema?

315
00: 15: 31,310 -> 00: 15: 34.340
Bem, aqui na tela está 123.

316
00: 15: 34,340 -> 00: 15: 37.130
Então, sim, você provavelmente está pensando
isso é cento e vinte e três,

317
00: 15: 37,130 -> 00: 15: 38.180
mas não exatamente.

318
00: 15: 38,180 -> 00: 15: 40.280
Tudo que eu mostrei no
tela é um padrão

319
00: 15: 40,280 -> 00: 15: 43.010
de símbolos, 123 ou três dígitos.

320
00: 15: 43,010 -> 00: 15: 45.817
E todos nós provavelmente somos
apenas dizendo instintivamente, obviamente,

321
00: 15: 45,817 -> 00: 15: 47.150
é cento e vinte e três.

322
00: 15: 47,150 -> 00: 15: 49.192
Mas provavelmente tem sido
anos desde que você considerou

323
00: 15: 49,192 -> 00: 15: 51.340
porque é cento e vinte e três.

324
00: 15: 51,340 -> 00: 15: 55.180
Bem, vamos considerar o que cada um
esses dígitos ou símbolos representam.

325
00: 15: 55,180 -> 00: 15: 58.600
Se você é como eu, você cresceu aprendendo
que o dígito mais à direita são aqueles

326
00: 15: 58,600 -> 00: 16: 03.230
lugar, o meio é o lugar das dezenas,
o da esquerda é a casa das centenas.

327
00: 16: 03,230 -> 00: 16: 06.250
E então, como saímos de
esses três símbolos ou dígitos,

328
00: 16: 06,250 -> 00: 16: 09.970
123, para a ideia matemática que nós
conhecido como cento e vinte e três?

329
00: 16: 09,970 -> 00: 16: 14.860
Bem, todos nós instantaneamente, estes
dias, fez 100 vezes 1 mais 10 vezes

330
00: 16: 14,860 -> 00: 16: 19.690
2 mais 1 vezes 3, que, de
claro, é apenas 100 mais 20 mais 3,

331
00: 16: 19,690 -> 00: 16: 23.290
ou o valor matemático que todos nós
conhecido como cento e vinte e três.

332
00: 16: 23,290 -> 00: 16: 26.380
Então, um pouco circular
argumento, mas apenas para nos lembrar

333
00: 16: 26,380 -> 00: 16: 30.280
como passamos de 123 para
123.

334
00: 16: 30,280 -> 00: 16: 34.300
Bem, acontece que no
mundo dos computadores, o sistema

335
00: 16: 34,300 -> 00: 16: 38.240
que eles usam é exatamente,
fundamentalmente o mesmo.

336
00: 16: 38,240 -> 00: 16: 41.680
A única diferença é que os computadores
só tem acesso a zeros e uns,

337
00: 16: 41,680 -> 00: 16: 43.150
não zeros a noves.

338
00: 16: 43,150 -> 00: 16: 46.990
Então, se considerarmos agora no
abstrato, apenas três dígitos possíveis

339
00: 16: 46,990 -> 00: 16: 51.610
representado aqui, vamos considerar para
um momento porque essas colunas são lugares

340
00: 16: 51,610 -> 00: 16: 54.923
onde um, 10 e 100 e assim por diante.

341
00: 16: 54,923 -> 00: 16: 56.090
Bem, por que foi esse o caso?

342
00: 16: 56,090 -> 00: 16: 58.048
Bem, havia um padrão,
na verdade, e apenas

343
00: 16: 58,048 -> 00: 16: 59.900
tem a ver com expoentes ou poderes.

344
00: 16: 59,900 -> 00: 17: 03.490
Portanto, a coluna mais à direita, tecnicamente,
se realmente entrarmos nas ervas daninhas,

345
00: 17: 03,490 -> 00: 17: 06.069
é 10 elevado à potência zero,
que se você se lembra,

346
00: 17: 06,069 -> 00: 17: 09.410
significa apenas um, 10 para o
primeira potência, que é apenas 10,

347
00: 17: 09,410 -> 00: 17: 12.766
e 10 à segunda potência,
ou 10 ao quadrado, é 100.

348
00: 17: 12,766 -> 00: 17: 15.099
Mas o que é interessante sobre
representando-o desta forma

349
00: 17: 15,099 -> 00: 17: 18.339
é que salta para fora
que 10 está envolvido.

350
00: 17: 18,339 -> 00: 17: 24.230
Existem 10 dígitos, de zero a nove, então
as colunas estão usando essa base de 10.

351
00: 17: 24,230 -> 00: 17: 26.230
Então você pode talvez agora
fique ainda à minha frente

352
00: 17: 26,230 -> 00: 17: 29.380
aqui, considerando, bem, se em
o sistema binário que os computadores

353
00: 17: 29,380 -> 00: 17: 31.810
usar, você só tem dois
dígitos, zeros e uns,

354
00: 17: 31,810 -> 00: 17: 35.990
as probabilidades são a única coisa que vai
mudança é o significado dessas colunas.

355
00: 17: 35,990 -> 00: 17: 39.880
Agora ainda temos aqueles lugares,
porque 2 elevado a zero é um,

356
00: 17: 39,880 -> 00: 17: 43.278
mas então temos 2 para o primeiro,
2 ao segundo e assim por diante.

357
00: 17: 43,278 -> 00: 17: 45.070
E claro, se nós
apenas faça essa matemática,

358
00: 17: 45,070 -> 00: 17: 47.500
no mundo do binário
que os computadores usam,

359
00: 17: 47,500 -> 00: 17: 52.400
nós temos um lugar, dois
lugar, lugar de quatro e assim por diante.

360
00: 17: 52,400 -> 00: 17: 53.980
E agora estamos prontos para ir.

361
00: 17: 53,980 -> 00: 17: 57.340
Mesmo que tenhamos que pensar agora
em um sistema de base diferente,

362
00: 17: 57,340 -> 00: 17: 59.200
agora podemos começar a contar mais corretamente.

363
00: 17: 59,200 -> 00: 18: 01.840
E agora podemos nos afastar de
a metáfora das lâmpadas

364
00: 18: 01,840 -> 00: 18: 04.660
e considere que se tudo de
aquelas lâmpadas estão desligadas,

365
00: 18: 04,660 -> 00: 18: 07.720
vamos, de novo, apenas começar
pensando nessas coisas como zeros.

366
00: 18: 07,720 -> 00: 18: 12.040
Então isso seria um padrão de símbolos
ou dígitos que são 000 em binário.

367
00: 18: 12,040 -> 00: 18: 14.580
Mas em nosso mundo humano,
a matemática mental você

368
00: 18: 14,580 -> 00: 18: 17.380
provavelmente faria agora
instantaneamente depois de hoje

369
00: 18: 17,380 -> 00: 18: 22.030
seria, bem, isso é obviamente 4
vezes 0 mais 2 vezes 0 mais 1 vezes 0,

370
00: 18: 22,030 -> 00: 18: 24.730
ou, é claro, zero em decimal.

371
00: 18: 24,730 -> 00: 18: 28.540
Mas como um computador representa
o número um, por exemplo?

372
00: 18: 28,540 -> 00: 18: 33.430
Bem, isso só vai mudar isso
bit mais à direita de zero a um,

373
00: 18: 33,430 -> 00: 18: 37.270
ou, mais metaforicamente, vai
para ligar esse interruptor e iluminar

374
00: 18: 37,270 -> 00: 18: 40.060
aquela lâmpada mais à direita
assim como eu fiz antes.

375
00: 18: 40,060 -> 00: 18: 41.560
Como eu represento dois?

376
00: 18: 41,560 -> 00: 18: 44.140
Vai ser 010 em binário.

377
00: 18: 44,140 -> 00: 18: 45.700
Como eu represento três?

378
00: 18: 45,700 -> 00: 18: 47.270
É aqui que estamos prestes a divergir.

379
00: 18: 47,270 -> 00: 18: 49.648
Agora estou colocando
duas dessas opções,

380
00: 18: 49,648 -> 00: 18: 52.690
porque eu preciso de algo nos dois
lugar e os lugares para me dar,

381
00: 18: 52,690 -> 00: 18: 54.340
matematicamente, três.

382
00: 18: 54,340 -> 00: 18: 57.250
Em seguida, se formos em frente e escolhermos -

383
00: 18: 57,250 -> 00: 19: 00.220
conte até quatro,
isso vai ser 100.

384
00: 19: 00,220 -> 00: 19: 02.950
se eu quiser contar até
cinco, isso vai ser 101,

385
00: 19: 02,950 -> 00: 19: 10.840
seis vai ser 110 e, finalmente,
o número sete será 111.

386
00: 19: 10.840 -> 00: 19: 14.850
Então, parece que usando três bits,
cada um dos quais pode ser zero ou um,

387
00: 19: 14,850 -> 00: 19: 17.980
sim, você pode permutá-los
de oito maneiras diferentes.

388
00: 19: 17,980 -> 00: 19: 20.950
Duas possibilidades para o primeiro
vezes dois pela segunda vezes dois

389
00: 19: 20,950 -> 00: 19: 22.360
pois o terceiro nos dá oito.

390
00: 19: 22,360 -> 00: 19: 26.110
Mas de acordo com esta matemática e a intuição
de começar a contar do zero,

391
00: 19: 26,110 -> 00: 19: 30.560
nós só podemos contar como
alto como sete no total.

392
00: 19: 30,560 -> 00: 19: 33.100
Bem, vamos em frente e realmente
tire isso para dar uma volta.

393
00: 19: 33,100 -> 00: 19: 38.875
Quando não temos apenas, digamos, digamos,
uma lâmpada ou três lâmpadas,

394
00: 19: 38,875 -> 00: 19: 40.750
temos, na verdade, o
sorte de ter gosto

395
00: 19: 40,750 -> 00: 19: 42.350
um palco inteiro de lâmpadas.

396
00: 19: 42,350 -> 00: 19: 46.060
64 lâmpadas enfeitam o palco aqui.

397
00: 19: 46,060 -> 00: 19: 47.050
E sabe de uma coisa?

398
00: 19: 47,050 -> 00: 19: 51.170
Sumner, podemos ir em frente e colocar
um número aleatório na tela aqui?

399
00: 19: 51,170 -> 00: 19: 54.490
Tudo bem, então se você pode ver estes
lâmpadas da sua perspectiva,

400
00: 19: 54,490 -> 00: 19: 57.640
temos oito lâmpadas
além de outro grupo deles,

401
00: 19: 57,640 -> 00: 19: 59.420
e todos os outros estão desligados.

402
00: 19: 59,420 -> 00: 20: 01.660
Então vamos em frente e
faça uma pergunta então.

403
00: 20: 01,660 -> 00: 20: 07.720
Se essas lâmpadas agora representam não
apenas uma lâmpada ou duas ou três,

404
00: 20: 07,720 -> 00: 20: 10.750
mas vários mais - neste
caso, pelo menos seis lâmpadas,

405
00: 20: 10,750 -> 00: 20: 12.400
que valor realmente obtemos?

406
00: 20: 12,400 -> 00: 20: 15.260
Bem, deixe-me ir em frente e colocar
uma pergunta na tela aqui,

407
00: 20: 15,260 -> 00: 20: 18.080
que deve aparecer em
o seu em apenas um momento.

408
00: 20: 18,080 -> 00: 20: 22.010
E você deve ver agora em
seu fim esta mesma pergunta.

409
00: 20: 22,010 -> 00: 20: 26.260
Em termos binários, qual número -

410
00: 20: 26,260 -> 00: 20: 33.790
em decimal, binário
número 110010 representa?

411
00: 20: 33,790 -> 00: 20: 40.460
Qual número decimal é o número binário
110010 representam, da esquerda para a direita?

412
00: 20: 40,460 -> 00: 20: 42.710
Então aqui temos um
esmagadora resposta.

413
00: 20: 42,710 -> 00: 20: 45.300
50 é de fato a resposta correta.

414
00: 20: 45,300 -> 00: 20: 46.030
Agora, por que isso?

415
00: 20: 46,030 -> 00: 20: 48.450
Bem, se eu for para o
lâmpadas físicas aqui, vamos

416
00: 20: 48,450 -> 00: 20: 51.210
apenas considere por um momento
qual é o padrão realmente.

417
00: 20: 51,210 -> 00: 20: 58.110
Este aqui é o único lugar, o
dois lugares, quatro, oito, 16, 32,

418
00: 20: 58,110 -> 00: 20: 59.110
e poderíamos continuar.

419
00: 20: 59,110 -> 00: 21: 01.318
Mas não vai importar
porque estão todos desligados.

420
00: 21: 01,318 -> 00: 21: 05.250
Portanto, temos 32 mais 16 mais
2, o que de fato nos dá

421
00: 21: 05,250 -> 00: 21: 07.770
o número você e eu
conhecido em decimal como 50.

422
00: 21: 07,770 -> 00: 21: 11.250
E imagine o quão alto poderíamos
conte com todas as outras lâmpadas

423
00: 21: 11,250 -> 00: 21: 12.700
também.

424
00: 21: 12,700 -> 00: 21: 13.230
Tudo bem.

425
00: 21: 13,230 -> 00: 21: 15.450
Então começamos com o
história com eletricidade.

426
00: 21: 15,450 -> 00: 21: 18.090
Em seguida, passamos para os números
e representando coisas,

427
00: 21: 18,090 -> 00: 21: 19.950
em decimal ou em binário.

428
00: 21: 19,950 -> 00: 21: 22.050
Mas nós meio que pintamos
nós mesmos em um canto,

429
00: 21: 22,050 -> 00: 21: 26.160
porque se apenas tivermos à nossa disposição
interruptores ou a luz metafórica

430
00: 21: 26,160 -> 00: 21: 28.830
lâmpadas, que podemos pensar
de zeros e uns,

431
00: 21: 28,830 -> 00: 21: 32.280
parece que as únicas coisas
os computadores podem fazer é computar.

432
00: 21: 32,280 -> 00: 21: 33.930
Ou seja, comportem-se como calculadoras.

433
00: 21: 33,930 -> 00: 21: 37.590
E, na verdade, no início, é exatamente
o que os computadores foram projetados para fazer,

434
00: 21: 37,590 -> 00: 21: 41.220
foi realmente uma facilitação matemática
cálculos que de outra forma eram bastante

435
00: 21: 41,220 -> 00: 21: 43.110
tedioso ou impossível para os humanos.

436
00: 21: 43,110 -> 00: 21: 45.390
Mas, claro, o que você
e estou usando agora,

437
00: 21: 45,390 -> 00: 21: 49.290
o que usamos todos os dias em nossos telefones e
nossos laptops e desktops são muito mais

438
00: 21: 49,290 -> 00: 21: 50.140
sofisticado.

439
00: 21: 50,140 -> 00: 21: 53.940
Então, vamos considerar como um
computador representa não apenas números,

440
00: 21: 53,940 -> 00: 21: 56.700
mas letras do alfabeto.

441
00: 21: 56,700 -> 00: 21: 58.620
Brian, podemos ligar
alguém para este?

442
00: 21: 58,620 -> 00: 22: 00.810
Se você gostaria de aumentar
sua mão virtual,

443
00: 22: 00,810 -> 00: 22: 03.870
como poderia um computador funcionar
representando letras de um alfabeto

444
00: 22: 03,870 -> 00: 22: 10.190
como o inglês se, novamente, todos nós
temos à nossa disposição é interruptores?

445
00: 22: 10,190 -> 00: 22: 13.550
PÚBLICO: Podemos atribuir os números
que estamos obtendo do binário

446
00: 22: 13,550 -> 00: 22: 15.777
a letras específicas do alfabeto.

447
00: 22: 15,777 -> 00: 22: 16.610
DAVID J MALAN: Sim.

448
00: 22: 16,610 -> 00: 22: 20.047
Podemos atribuir os números específicos
em binário para letras do alfabeto.

449
00: 22: 20,047 -> 00: 22: 22.130
Isso é muito nosso
única opção, ao que parece.

450
00: 22: 22,130 -> 00: 22: 26.060
Se apenas tivermos a capacidade de permutar
esses interruptores ou lâmpadas ou bits,

451
00: 22: 26,060 -> 00: 22: 29.743
bem, nós apenas temos que concordar como
para representar as letras da mesma maneira.

452
00: 22: 29,743 -> 00: 22: 32.660
Agora, talvez a maneira mais simples para nós
fazer isso seria, sabe de uma coisa?

453
00: 22: 32,660 -> 00: 22: 36.230
Vamos todos concordar que uma capital
A vai ser o número um.

454
00: 22: 36,230 -> 00: 22: 40.280
Então você liga uma lâmpada, ou
representam o número binário um.

455
00: 22: 40,280 -> 00: 22: 42.890
Bem, que tal para B, nós
poderia usar o número dois.

456
00: 22: 42,890 -> 00: 22: 45.950
Para C, poderíamos usar o número três.

457
00: 22: 45,950 -> 00: 22: 47.510
D pode ser quatro e assim por diante.

458
00: 22: 47,510 -> 00: 22: 51.930
Todos nós apenas temos que concordar com
numere as letras dessa forma.

459
00: 22: 51,930 -> 00: 22: 54.240
Mas acontece que os humanos
fez exatamente isso,

460
00: 22: 54,240 -> 00: 22: 56.150
mas um pouco diferente anos atrás.

461
00: 22: 56,150 -> 00: 22: 59.450
Eles decidiram por razões que
não vamos entrar agora,

462
00: 22: 59,450 -> 00: 23: 01.730
que, na verdade, a capital
a letra A é na verdade

463
00: 23: 01,730 -> 00: 23: 05.930
vai ser representado pelo
número decimal que você e eu conhecemos como 65.

464
00: 23: 05,930 -> 00: 23: 08.850
Agora, na forma bit a bit, isso é
vai ficar assim.

465
00: 23: 08,850 -> 00: 23: 11.600
Portanto, este é o padrão de
bits que um computador faria

466
00: 23: 11,600 -> 00: 23: 15.660
use para representar o decimal
número que agora conhecemos como 65,

467
00: 23: 15,660 -> 00: 23: 18.980
e agora o que o computador está fazendo
fazer é apenas estar atento ao que

468
00: 23: 18,980 -> 00: 23: 20.730
tipo de programa que você está usando.

469
00: 23: 20,730 -> 00: 23: 24.380
Então, sim, se você estiver usando uma calculadora
ou talvez usando algo como o Excel

470
00: 23: 24,380 -> 00: 23: 28.190
para processar números, bem, nesse
contexto ao executar o software,

471
00: 23: 28,190 -> 00: 23: 32.030
como uma calculadora ou uma planilha
programa fazendo análise numérica,

472
00: 23: 32,030 -> 00: 23: 36.260
o programa vai ver
dentro do hardware do computador

473
00: 23: 36,260 -> 00: 23: 40.490
o padrão de interruptores que
representa o número decimal 65.

474
00: 23: 40,490 -> 00: 23: 43.340
E porque está no contexto de
uma calculadora ou planilha, o que

475
00: 23: 43,340 -> 00: 23: 47.750
você, o humano, pode ver na tela
é literalmente o número decimal 65.

476
00: 23: 47,750 -> 00: 23: 50.873
Mas se você e eu estivermos usando texto
mensagem ou e-mail ou qualquer número

477
00: 23: 50,873 -> 00: 23: 52.790
de aplicativos de mídia social
onde estamos nos comunicando

478
00: 23: 52,790 -> 00: 23: 56.150
não numericamente, mas em
letras, digamos, letras inglesas,

479
00: 23: 56,150 -> 00: 23: 59.360
nesse contexto, seu computador
vai ser inteligente o suficiente

480
00: 23: 59,360 -> 00: 24: 03.260
conhecer, bem, esse mesmo padrão
de bits que representam 65,

481
00: 24: 03,260 -> 00: 24: 07.190
no contexto de uma mensagem de texto
ou em um e-mail ou algo parecido

482
00: 24: 07,190 -> 00: 24: 11.208
na verdade representa a capital
letra A. Portanto, o padrão é o mesmo.

483
00: 24: 11,208 -> 00: 24: 12.500
A representação é a mesma.

484
00: 24: 12,500 -> 00: 24: 14.270
Mas o contexto é o que difere.

485
00: 24: 14,270 -> 00: 24: 20.360
E o sistema que os humanos criaram
anos atrás que mapeia 65 a A, 66 a B,

486
00: 24: 20,360 -> 00: 24: 23.570
67 a C, é chamado ASCII,
o padrão americano

487
00: 24: 23,570 -> 00: 24: 25.670
Código para intercâmbio de informações.

488
00: 24: 25,670 -> 00: 24: 28.640
E isso significa apenas que existe
um mapeamento bem definido que muitos

489
00: 24: 28,640 -> 00: 24: 33.650
de humanos há décadas decidiram, em
a fim de mapear as letras do alfabeto -

490
00: 24: 33,650 -> 00: 24: 34.830
Inglês neste caso -

491
00: 24: 34,830 -> 00: 24: 36.650
para números começando com 65.

492
00: 24: 36,650 -> 00: 24: 39.950
E há todo um mapeamento, também para
pontuação, para letras minúsculas,

493
00: 24: 39,950 -> 00: 24: 41.076
e similar.

494
00: 24: 41,076 -> 00: 24: 47.480
Portanto, suponha que você
receber uma mensagem de texto contendo

495
00: 24: 47,480 -> 00: 24: 52.250
um padrão de bits, ou, realmente, apenas
uma sequência de números decimais que

496
00: 24: 52,250 -> 00: 24: 53.720
aconteceu de ser isso.

497
00: 24: 53.720 -> 00: 24: 57.500
72, 73, 33.

498
00: 24: 57.500 -> 00: 25: 02.930
Suponha que você tenha recebido uma mensagem de texto
contendo esses padrões de números.

499
00: 25: 02,930 -> 00: 25: 05.240
72, 73, 33.

500
00: 25: 05,240 -> 00: 25: 07.860
Que mensagem você pode
acabou de receber?

501
00: 25: 07,860 -> 00: 25: 10.520
Deixe-me ir em frente e puxar para cima
o gráfico abreviado aqui

502
00: 25: 10,520 -> 00: 25: 13.670
considerar exatamente o que
mensagem que você recebeu.

503
00: 25: 13,670 -> 00: 25: 15.710
72, 73, 33.

504
00: 25: 15,710 -> 00: 25: 19.400
E Sumner, podemos ir em frente e
jogue esta mesma palavra de três letras

505
00: 25: 19,400 -> 00: 25: 21.710
nas luzes?

506
00: 25: 21,710 -> 00: 25: 24.910
Se você gostaria de ver em
forma bit a bit, por assim dizer,

507
00: 25: 24,910 -> 00: 25: 29.870
vai aparecer aqui nestes
lâmpadas agora também.

508
00: 25: 29,870 -> 00: 25: 31.910
Que padrão isso representa?

509
00: 25: 31,910 -> 00: 25: 33.920
Lanham, podemos ir até você?

510
00: 25: 33,920 -> 00: 25: 36.563
PÚBLICO: Isso seria HI com
um ponto de exclamação, correto?

511
00: 25: 36,563 -> 00: 25: 39.230
DAVID J MALAN: Sim, é verdade
HI com um ponto de exclamação.

512
00: 25: 39,230 -> 00: 25: 41.272
E provavelmente é bonito
fácil agora, em retrospecto,

513
00: 25: 41,272 -> 00: 25: 45.230
para colher isso, sim, o 72 e
os 73 eram H e I, respectivamente.

514
00: 25: 45,230 -> 00: 25: 49.070
Mas Lanham também notou a exclamação
ponto, que não está neste gráfico,

515
00: 25: 49,070 -> 00: 25: 51.530
mas pelos pontos, pontos, pontos,
há um mapeamento bem definido

516
00: 25: 51,530 -> 00: 25: 54.690
por todas as letras do
alfabeto com o qual podemos nos preocupar.

517
00: 25: 54,690 -> 00: 25: 57.260
E então HI é talvez mais
mais óbvio do que o outro.

518
00: 25: 57,260 -> 00: 25: 59.098
Esse 33, precisamos de um gráfico maior.

519
00: 25: 59,098 -> 00: 26: 00.890
E então se você realmente
vá em seus computadores

520
00: 26: 00,890 -> 00: 26: 04.905
agora para asciichart.com,
asciichart.com, você

521
00: 26: 04,905 -> 00: 26: 06.280
veja algo assim.

522
00: 26: 06,280 -> 00: 26: 08.280
Embora você também possa apenas
google ASCII em geral

523
00: 26: 08,280 -> 00: 26: 09.660
e obter cópias do mesmo gráfico.

524
00: 26: 09,660 -> 00: 26: 13.550
Você verá aqui que H é
de fato 72, eu realmente tenho 73,

525
00: 26: 13,550 -> 00: 26: 17.010
mas se olharmos para a esquerda, 33 é,
aparentemente, um ponto de exclamação.

526
00: 26: 17,010 -> 00: 26: 19.760
E você só saberia disso por
tendo procurado ou apenas tendo

527
00: 26: 19,760 -> 00: 26: 20.718
gravou na memória.

528
00: 26: 20,718 -> 00: 26: 23.630
Mas os computadores que você e eu usamos
e os telefones que você e eu usamos apenas

529
00: 26: 23,630 -> 00: 26: 24.710
saber disso intrinsecamente.

530
00: 26: 24,710 -> 00: 26: 26.510
É assim que eles são programados.

531
00: 26: 26,510 -> 00: 26: 29.870
Mas também acontece
que devemos considerar

532
00: 26: 29,870 -> 00: 26: 32.420
quantos zeros
e aqueles que estamos usando agora

533
00: 26: 32,420 -> 00: 26: 35.660
para representar o 72, o 73 e o 33.

534
00: 26: 35,660 -> 00: 26: 38.840
Então, vamos olhar uma última vez em
a representação binária, que,

535
00: 26: 38,840 -> 00: 26: 42.390
de acordo com as lâmpadas, são
esses padrões de bits aqui.

536
00: 26: 42,390 -> 00: 26: 45.410
Então, quando você recebe um texto
mensagem de um amigo dizendo HI!

537
00: 26: 45,410 -> 00: 26: 47.930
HI ponto de exclamação,
em maiúsculas, você é

538
00: 26: 47,930 -> 00: 26: 51.470
tecnicamente recebendo um padrão
de bits, algum tipo de frequência,

539
00: 26: 51,470 -> 00: 26: 54.920
se for sem fio, isso
representa esse padrão de bits.

540
00: 26: 54,920 -> 00: 26: 58.910
E normalmente, computadores
hoje em dia usam oito bits

541
00: 26: 58,910 -> 00: 27: 00.892
para representar cada um desses personagens.

542
00: 27: 00,892 -> 00: 27: 02.600
Quando o ASCII veio pela primeira vez
para fora, eles normalmente

543
00: 27: 02,600 -> 00: 27: 06.830
usou sete por razões de eficiência,
porque o espaço era caro naquela época.

544
00: 27: 06,830 -> 00: 27: 09.470
Mas aqui usamos oito,
e, de fato, isso é agora

545
00: 27: 09,470 -> 00: 27: 12.470
a norma quando se trata de representar
caracteres em múltiplos de oito.

546
00: 27: 12,470 -> 00: 27: 15.690
Portanto, temos oito bits aqui,
oito bits aqui, oito bits aqui,

547
00: 27: 15,690 -> 00: 27: 20.210
que significa receber a mensagem HI!
você está enviando ou recebendo 24 bits

548
00: 27: 20,210 -> 00: 27: 20.840
total.

549
00: 27: 20,840 -> 00: 27: 23.300
Agora, francamente, os bits não são um
unidade de medida muito útil,

550
00: 27: 23,300 -> 00: 27: 24.800
normalmente, porque eles são tão pequenos.

551
00: 27: 24,800 -> 00: 27: 26.300
Apenas um zero ou um.

552
00: 27: 26,300 -> 00: 27: 29.330
Mas cada um desses padrões
de oito bits, na verdade

553
00: 27: 29,330 -> 00: 27: 32.540
tem uma palavra de vocabulário, se
você vai, que é bytes.

554
00: 27: 32,540 -> 00: 27: 35.840
E as probabilidades são, todos nós temos
usou este termo em algum contexto,

555
00: 27: 35,840 -> 00: 27: 39.180
mas geralmente no contexto
de megabytes ou mesmo gigabytes.

556
00: 27: 39,180 -> 00: 27: 41.870
Na verdade, quando você fala sobre o
tamanhos de seus arquivos hoje em dia,

557
00: 27: 41,870 -> 00: 27: 46.580
você está falando em bytes em alguns
forma, tanto milhões ou bilhões de bytes.

558
00: 27: 46,580 -> 00: 27: 51.410
Mas cada um desses bytes, simplesmente,
é um padrão de oito zeros e uns.

559
00: 27: 51,410 -> 00: 27: 55.160
Então, na verdade, se tivermos tantos
como 64 lâmpadas à nossa disposição,

560
00: 27: 55,160 -> 00: 27: 56.800
isso é 64 dividido por 8.

561
00: 27: 56,800 -> 00: 27: 57.800
São oito personagens.

562
00: 27: 57,800 -> 00: 28: 01.310
Então, parece que poderíamos soletrar
nesta fase, mesmo uma palavra de oito letras -

563
00: 28: 01,310 -> 00: 28: 03.920
se, Sumner, pudéssemos colocar
uma palavra aleatória de oito letras,

564
00: 28: 03,920 -> 00: 28: 05.720
que vamos acompanhar agora -

565
00: 28: 05,720 -> 00: 28: 09.230
agora você pode soletrar de
esquerda para direita, sua esquerda

566
00: 28: 09,230 -> 00: 28: 14.780
à sua direita, uma palavra de oito letras
usando o sistema conhecido como ASCII.

567
00: 28: 14,780 -> 00: 28: 17.120
Mas, claro, estamos sendo
um pouco tendencioso aqui,

568
00: 28: 17,120 -> 00: 28: 20.780
como ASCII é o padrão americano
Código para intercâmbio de informações.

569
00: 28: 20,780 -> 00: 28: 24.320
E em um teclado típico de inglês americano,
há mais personagens, certamente,

570
00: 28: 24,320 -> 00: 28: 27.410
do que letras maiúsculas,
como A a H e I.

571
00: 28: 27,410 -> 00: 28: 30.860
Há também alguma pontuação e alguns
números, mas também há um pouco

572
00: 28: 30,860 -> 00: 28: 32.070
faltando também.

573
00: 28: 32,070 -> 00: 28: 34.910
E qualquer um de vocês que está em outro lugar
no mundo, as probabilidades são,

574
00: 28: 34,910 -> 00: 28: 41.210
encontraria usando um teclado como este
especialmente limitante ou frustrante.

575
00: 28: 41,210 -> 00: 28: 41.840
Por que é que?

576
00: 28: 41,840 -> 00: 28: 44.440
O que parece estar faltando no ASCII?

577
00: 28: 44,440 -> 00: 28: 46.415
O que parece estar faltando no ASCII?

578
00: 28: 46,415 -> 00: 28: 49.670
Bem, deixe-me perguntar isso
uma outra pergunta aqui.

579
00: 28: 49,670 -> 00: 28: 56.150
Se usarmos ASCII e, portanto,
nos dar oito bits ou um byte,

580
00: 28: 56,150 -> 00: 29: 03.620
quantos personagens diferentes poderíamos
potencialmente exibir, na verdade

581
00: 29: 03,620 -> 00: 29: 04.160
representa?

582
00: 29: 04,160 -> 00: 29: 06.350
Então, na sua tela, você
deve ver esta questão agora.

583
00: 29: 06,350 -> 00: 29: 09.930
Quantos símbolos você pode
representa com oito bits?

584
00: 29: 09,930 -> 00: 29: 14.660
Quantos símbolos você pode
representa com oito bits?

585
00: 29: 14,660 -> 00: 29: 17.480
E isso fala, realmente,
no final do dia, como

586
00: 29: 17,480 -> 00: 29: 20.180
muitas cartas do
alfabeto mais pontuação,

587
00: 29: 20,180 -> 00: 29: 23.930
além de maiúsculas e minúsculas, pode
ASCII, ou realmente, os computadores podem suportar?

588
00: 29: 23,930 -> 00: 29: 28.080
Bem, parece que cerca de 72% de
você acha que a resposta é 256.

589
00: 29: 28,080 -> 00: 29: 32.270
E é realmente o caso de você
pode representar 256 possibilidades.

590
00: 29: 32,270 -> 00: 29: 32.780
Porque?

591
00: 29: 32,780 -> 00: 29: 34.155
Você pode realmente fazer a matemática.

592
00: 29: 34,155 -> 00: 29: 37.460
Se você tem oito bits, cada um
dos quais pode ser zero ou um,

593
00: 29: 37,460 -> 00: 29: 39.720
isso significa que você tem dois
possibilidades para o primeiro,

594
00: 29: 39,720 -> 00: 29: 43.280
vezes duas possibilidades para o
segundo, vezes duas vezes duas vezes dois.

595
00: 29: 43,280 -> 00: 29: 46.650
Isso passa a ser 2
até o oitavo, ou 256.

596
00: 29: 46,650 -> 00: 29: 48.560
Tudo bem se não for
imediatamente óbvio,

597
00: 29: 48,560 -> 00: 29: 52.310
mas se você tiver oito bits, cada um
dos quais pode ser um de dois valores,

598
00: 29: 52,310 -> 00: 29: 55.650
você pode chegar a 256 possibilidades.

599
00: 29: 55,650 -> 00: 29: 59.510
Aqueles de vocês que entraram na conversa para dizer
que a resposta é 255 neste caso,

600
00: 29: 59,510 -> 00: 30: 02.960
estão errados, só porque agora estamos
falando sobre o número total

601
00: 30: 02,960 -> 00: 30: 05.270
de padrões, que é de fato 256.

602
00: 30: 05,270 -> 00: 30: 10.010
Mas o maior valor que poderíamos representar
com oito bits ou oito lâmpadas,

603
00: 30: 10,010 -> 00: 30: 13.198
parece ser, de fato, 255.

604
00: 30: 13,198 -> 00: 30: 15.990
E isso é por causa de todos os
diferentes padrões que podemos permutar.

605
00: 30: 15,990 -> 00: 30: 18.590
Mas deixe-me abrir a questão
para o público agora.

606
00: 30: 18,590 -> 00: 30: 21.590
Por que um teclado em inglês americano
ser especialmente limitante,

607
00: 30: 21,590 -> 00: 30: 26.330
e por sua vez, porque é ASCII
realmente não é muito apropriado

608
00: 30: 26,330 -> 00: 30: 29.060
quando se trata de
representando a linguagem humana,

609
00: 30: 29,060 -> 00: 30: 33.110
mesmo que isso seja o que
computadores começaram com anos atrás?

610
00: 30: 33,110 -> 00: 30: 35.945
O que está faltando no ASCII?

611
00: 30: 35,945 -> 00: 30: 41.420
Por que 256 no total
possibilidades não são suficientes?

612
00: 30: 41,420 -> 00: 30: 42.440
Kevin, podemos ir com você?

613
00: 30: 42,440 -> 00: 30: 43.700
PÚBLICO: Claro.

614
00: 30: 43,700 -> 00: 30: 47.310
Quer dizer, por um lado, faltando muito
dos sotaques em outras línguas.

615
00: 30: 47,310 -> 00: 30: 49.310
Mas se você apenas considerar,
como, idiomas asiáticos,

616
00: 30: 49,310 -> 00: 30: 51.442
tem muito mais
de 256 caracteres.

617
00: 30: 51,442 -> 00: 30: 52.400
DAVID J MALAN: Exatamente.

618
00: 30: 52,400 -> 00: 30: 55.370
Então, não só estamos perdendo
caracteres acentuados

619
00: 30: 55,370 -> 00: 30: 57.230
que você pode precisar em
alguns idiomas, nós somos

620
00: 30: 57,230 -> 00: 30: 59.960
também faltando os personagens que
você pode precisar em idiomas asiáticos,

621
00: 30: 59,960 -> 00: 31: 01.543
em idiomas como árabe e similares.

622
00: 31: 01,543 -> 00: 31: 05.630
Existem muito mais símbolos que nós
os humanos usam para se comunicar na mídia impressa

623
00: 31: 05,630 -> 00: 31: 08.565
e eletronicamente do que 256.

624
00: 31: 08,565 -> 00: 31: 10.940
Inglês, podemos fugir com
encaixando neste teclado,

625
00: 31: 10.940 -> 00: 31: 13.280
mas não uma vez que apresentamos
coisas como esses personagens,

626
00: 31: 13,280 -> 00: 31: 15.360
muito menos outros símbolos também.

627
00: 31: 15,360 -> 00: 31: 18.710
E acontece que há outras coisas
nós, humanos, gostamos de dizer hoje em dia

628
00: 31: 18,710 -> 00: 31: 23.390
e expressar usando personagens que têm
entrar em voga, que é, a saber,

629
00: 31: 23,390 -> 00: 31: 24.020
essas coisas.

630
00: 31: 24,020 -> 00: 31: 26.510
As probabilidades são, provavelmente
algum dia hoje você tem

631
00: 31: 26,510 -> 00: 31: 30.230
enviou ou recebeu uma dessas coisas
aqui, também conhecido como emoji.

632
00: 31: 30,230 -> 00: 31: 33.890
Agora, embora esses emojis pareçam
como fotos, eles se parecem com imagens -

633
00: 31: 33,890 -> 00: 31: 37.760
e eles são, tecnicamente - o caminho
eles são implementados em computadores

634
00: 31: 37,760 -> 00: 31: 40.190
é na verdade como padrões
de zeros e uns.

635
00: 31: 40,190 -> 00: 31: 44.570
Na verdade, são apenas personagens
em um alfabeto, o alfabeto emoji.

636
00: 31: 44,570 -> 00: 31: 47.030
O que quer dizer que há alguns
padrão de zeros e uns

637
00: 31: 47,030 -> 00: 31: 50.630
que representa cada um desses
rostos, e muitos outros emojis que

638
00: 31: 50,630 -> 00: 31: 51.860
hoje em dia existe.

639
00: 31: 51,860 -> 00: 31: 55.640
E isso é porque o mundo tem
fez a transição ao longo dos anos do ASCII,

640
00: 31: 55,640 -> 00: 31: 57.950
que usou apenas sete,
e em certo sentido,

641
00: 31: 57,950 -> 00: 32: 01.250
oito bits no total para representar
todos os personagens possíveis,

642
00: 32: 01,250 -> 00: 32: 07.100
a usar qualquer um dos oito
ou 16 ou 24 ou mesmo 32.

643
00: 32: 07,100 -> 00: 32: 11.340
Bits hoje em dia existe um sistema chamado
Unicode, que os humanos surgiram

644
00: 32: 11,340 -> 00: 32: 17.550
com esse suporte não só o inglês,
mas também todas as línguas humanas,

645
00: 32: 17,550 -> 00: 32: 24.570
é o objetivo aspiracional, ambos escritos
impressa ou eletronicamente é o objetivo.

646
00: 32: 24,570 -> 00: 32: 28.240
E além disso, é para
digamos que podemos representar coisas assim.

647
00: 32: 28,240 -> 00: 32: 30.810
Portanto, este é o assim chamado
rosto com lágrimas de alegria.

648
00: 32: 30,810 -> 00: 32: 32.940
E esta cara de lágrimas
de alegria, desde o ano passado,

649
00: 32: 32,940 -> 00: 32: 37.240
foi o emoji mais popular
enviado por mensagens de texto, e-mails,

650
00: 32: 37,240 -> 00: 32: 38.720
mídia social e assim por diante.

651
00: 32: 38,720 -> 00: 32: 40.170
Mas no final do
dia, tudo que você está recebendo

652
00: 32: 40,170 -> 00: 32: 41.500
é, tipo, uma tecla de um teclado.

653
00: 32: 41,500 -> 00: 32: 44.320
Então, na verdade, você não
saiba olhar para ele.

654
00: 32: 44,320 -> 00: 32: 48.750
Mas, na verdade, o decimal
número que representa este rosto

655
00: 32: 48,750 -> 00: 32: 52.980
com lágrimas de alegria passa a ser 128.514.

656
00: 32: 52,980 -> 00: 32: 56.220
Então, para o ponto de Kevin, para representar
não apenas certas línguas humanas,

657
00: 32: 56,220 -> 00: 33: 00.910
mas certamente esses emojis, nós
precisa de mais de 256 caracteres

658
00: 33: 00,910 -> 00: 33: 05.010
então podemos usar não apenas oito
bits, mas 16 ou 24 ou 32.

659
00: 33: 05,010 -> 00: 33: 06.955
Isso é uma grande quantidade
de possibilidades agora.

660
00: 33: 06,955 -> 00: 33: 09.330
Na verdade, agora, para realmente levar
a diversão dessas coisas,

661
00: 33: 09,330 -> 00: 33: 12.600
se você receber aquele rosto
com lágrimas de alegria ou mande-as,

662
00: 33: 12,600 -> 00: 33: 16.702
você está tecnicamente apenas enviando um
padrão de bits que se parece com este.

663
00: 33: 16,702 -> 00: 33: 18.660
Isso é tudo que vai
por baixo do capô,

664
00: 33: 18,660 -> 00: 33: 20.300
toda vez que você usa essas coisas.

665
00: 33: 20,300 -> 00: 33: 20.800
Tudo bem.

666
00: 33: 20,800 -> 00: 33: 22.620
Então, começamos novamente com eletricidade.

667
00: 33: 22,620 -> 00: 33: 24.402
Em seguida, representamos os números.

668
00: 33: 24,402 -> 00: 33: 26.610
Agora temos a capacidade de
representam letras e até

669
00: 33: 26,610 -> 00: 33: 28.470
emoções na forma de emojis.

670
00: 33: 28,470 -> 00: 33: 30.397
O que mais existe lá fora?

671
00: 33: 30,397 -> 00: 33: 33.480
Bem, os próprios emojis, é claro,
pelo menos os que vimos,

672
00: 33: 33,480 -> 00: 33: 35.652
são pictóricos por natureza.

673
00: 33: 35,652 -> 00: 33: 37.860
E então isso convida o
questão, como é que um computador

674
00: 33: 37,860 -> 00: 33: 39.210
representam coisas como cores?

675
00: 33: 39,210 -> 00: 33: 42.150
Tipo, aquele rosto com lágrimas de
a alegria tinha muito amarelo.

676
00: 33: 42,150 -> 00: 33: 46.140
Então, como é amarelo ou qualquer cor, para
que importa, representado em um computador?

677
00: 33: 46,140 -> 00: 33: 48.180
Bem, deixe-me perguntar ao público novamente.

678
00: 33: 48,180 -> 00: 33: 52.800
Se tudo que você tem à sua disposição
são bits, zeros e uns,

679
00: 33: 52,800 -> 00: 33: 55.800
e nós, como humanos, precisamos
concordar em como representar cores,

680
00: 33: 55,800 -> 00: 33: 57.510
o que pode ser uma possibilidade?

681
00: 33: 57.510 -> 00: 33: 59.440
Não precisa ser a resposta.

682
00: 33: 59,440 -> 00: 34: 03.360
Mas qual pode ser o seu próprio instinto
se estiver projetando isso pela primeira vez

683
00: 34: 03,360 -> 00: 34: 05.010
você mesmo?

684
00: 34: 05,010 -> 00: 34: 09.980
Como pode um computador
representam cores agora?

685
00: 34: 09,980 -> 00: 34: 12.110
Yasmin, o que você acha?

686
00: 34: 12,110 -> 00: 34: 14.989
PÚBLICO: Você gostaria de membros
para diferentes cores e formas

687
00: 34: 14,989 -> 00: 34: 16.602
e apenas fazer o mesmo sistema.

688
00: 34: 16,602 -> 00: 34: 17.810
DAVID J MALAN: Sim, exatamente.

689
00: 34: 17,810 -> 00: 34: 18.560
Instintos perfeitos.

690
00: 34: 18,560 -> 00: 34: 21.020
Você apenas atribuiria números
para as diferentes cores,

691
00: 34: 21,020 -> 00: 34: 24.677
e todos nós apenas temos que concordar sobre o que
esse mapeamento realmente vai ser.

692
00: 34: 24,677 -> 00: 34: 26.760
Acontece que há
maneiras diferentes de fazer isso.

693
00: 34: 26,760 -> 00: 34: 30.530
E se algum de vocês é artístico e
use o Photoshop ou algo semelhante digitalmente,

694
00: 34: 30,530 -> 00: 34: 34.010
você provavelmente está familiarizado com
siglas como RGB, vermelho, verde, azul.

695
00: 34: 34,010 -> 00: 34: 36.199
Mas tem outros
siglas e outras formas

696
00: 34: 36,199 -> 00: 34: 39.590
para implementar a ideia de Yasmin
onde nós apenas mapeamos de alguma forma

697
00: 34: 39,590 -> 00: 34: 41.780
zeros e uns para as cores reais.

698
00: 34: 41,780 -> 00: 34: 45.120
Bem, RGB apenas acontece com
representam vermelho, verde e azul.

699
00: 34: 45,120 -> 00: 34: 48.320
E este é um sistema que os humanos criaram
com anos atrás que diz, quer saber?

700
00: 34: 48,320 -> 00: 34: 50.510
Podemos realmente obter todos
cor do arco-íris

701
00: 34: 50,510 -> 00: 34: 55.370
misturando alguma quantidade de vermelho
e luz verde e azul, essencialmente.

702
00: 34: 55,370 -> 00: 34: 58.730
Então isso apenas convida à questão, bem,
como representamos a quantidade de vermelho,

703
00: 34: 58,730 -> 00: 35: 00.980
como representamos o
quantidade de verde, e como nós

704
00: 35: 00,980 -> 00: 35: 02.720
representa a quantidade de azul?

705
00: 35: 02,720 -> 00: 35: 05.760
E nós temos, como Yasmin
diz, bits à nossa disposição.

706
00: 35: 05,760 -> 00: 35: 07.470
Então nós só temos que
decidir como fazer isso.

707
00: 35: 07,470 -> 00: 35: 12.320
Então, suponha que recebamos um padrão
de bits, que 72, 73, 33 novamente,

708
00: 35: 12,320 -> 00: 35: 13.940
mas desta vez não é um e-mail.

709
00: 35: 13,940 -> 00: 35: 15.320
Não está em uma mensagem de texto.

710
00: 35: 15,320 -> 00: 35: 19.020
Está no contexto de um arquivo
que abri no Photoshop.

711
00: 35: 19,020 -> 00: 35: 21.650
Então é como se eu tivesse aberto
uma fotografia que alguém

712
00: 35: 21,650 -> 00: 35: 26.030
me enviou e eu quero fazer algumas edições
e eu vejo esse padrão de números,

713
00: 35: 26,030 -> 00: 35: 27.170
ou, por sua vez, bits.

714
00: 35: 27,170 -> 00: 35: 29.420
Bem o que é isso
representando neste caso?

715
00: 35: 29,420 -> 00: 35: 32.300
No contexto de um e-mail ou
uma mensagem de texto, ainda é o HI!

716
00: 35: 32,300 -> 00: 35: 34.670
Mas no contexto de
Photoshop ou Instagram

717
00: 35: 34,670 -> 00: 35: 37.190
ou qualquer coisa que seja
orientado em torno de imagens,

718
00: 35: 37,190 -> 00: 35: 40.730
na verdade vai representar alguns
quantidade de vermelho, alguma quantidade de verde,

719
00: 35: 40,730 -> 00: 35: 41.870
alguma quantidade de azul.

720
00: 35: 41,870 -> 00: 35: 45.230
E como descobrimos
antes, o número total

721
00: 35: 45,230 -> 00: 35: 49.340
de possibilidades que você pode representar
com oito bits passa a ser 256.

722
00: 35: 49,340 -> 00: 35: 54.200
O maior valor que você pode representar
é 255 se começarmos a contar do zero.

723
00: 35: 54,200 -> 00: 35: 56.660
Então, isso quer dizer que
cada um desses três números

724
00: 35: 56,660 -> 00: 35: 59.340
é um número entre zero e 255.

725
00: 35: 59,340 -> 00: 36: 04.640
Então 72 parece uma quantidade média de vermelho,
73 é como uma quantidade média de verde, 33

726
00: 36: 04,640 -> 00: 36: 06.090
é um pouco azul.

727
00: 36: 06,090 -> 00: 36: 10.610
E se você combinar esses três valores
de cor, oito bits mais oito

728
00: 36: 10,610 -> 00: 36: 13.460
bits mais oito bits,
usando 24 bits no total,

729
00: 36: 13,460 -> 00: 36: 16.880
usando o primeiro terço para representar
vermelhidão, o segundo terço verde,

730
00: 36: 16,880 -> 00: 36: 20.540
e o terceiro terceiro azul,
você consegue, ao que parece,

731
00: 36: 20,540 -> 00: 36: 24.540
um ponto que parece
este, um ponto amarelo.

732
00: 36: 24,540 -> 00: 36: 27.800
E então, de fato, aquele emoji, quando
está sendo exibido na tela,

733
00: 36: 27,800 -> 00: 36: 30.380
é o resultado do
interpretação de computador -

734
00: 36: 30,380 -> 00: 36: 35.120
o valor de 128.514 é
sabendo oh, esse é o emoji

735
00: 36: 35,120 -> 00: 36: 36.770
com o rosto de lágrimas de alegria.

736
00: 36: 36,770 -> 00: 36: 39.470
Mas quando se trata de exibir
as informações em sua tela,

737
00: 36: 39,470 -> 00: 36: 42.860
agora seu computador vai ser
usando diferentes padrões de bits

738
00: 36: 42,860 -> 00: 36: 45.428
para controlar as cores de
os pontos na tela.

739
00: 36: 45,428 -> 00: 36: 46.970
E esse termo você já deve conhecer.

740
00: 36: 46,970 -> 00: 36: 50.240
Os pontos que você e eu vemos em nosso computador
telas ou mesmo TVs nos dias de hoje

741
00: 36: 50,240 -> 00: 36: 51.230
são chamados de pixels.

742
00: 36: 51,230 -> 00: 36: 55.250
Eles são pequenos quadrados minúsculos
que representam alguma cor

743
00: 36: 55,250 -> 00: 36: 56.600
como este amarelo aqui.

744
00: 36: 56,600 -> 00: 36: 58.860
E você pode realmente ver
em alguns contextos.

745
00: 36: 58,860 -> 00: 37: 02.930
Se eu for em frente e puxar o mesmo rosto
com lágrimas de alegria e amplie um pouco,

746
00: 37: 02,930 -> 00: 37: 05.420
amplie um pouco mais e
realmente amplie um pouco mais,

747
00: 37: 05,420 -> 00: 37: 07.857
agora você pode realmente ver
o que chamamos de pixelização.

748
00: 37: 07,857 -> 00: 37: 10.190
E as probabilidades são, você viu
isso no Facebook, Instagram,

749
00: 37: 10,190 -> 00: 37: 13.790
onde quer que você esteja redimensionando ou
edição de fotos que não chegam a

750
00: 37: 13,790 -> 00: 37: 15.210
tem resolução suficiente.

751
00: 37: 15,210 -> 00: 37: 18.740
A resolução de uma imagem é
quantos pixels ou pontos lá

752
00: 37: 18,740 -> 00: 37: 21.000
são horizontalmente e verticalmente.

753
00: 37: 21.000 -> 00: 37: 25.380
Então, se você realmente aumentar o zoom em uma imagem,
você eventualmente verá esses pixels.

754
00: 37: 25,380 -> 00: 37: 29.510
E isso quer dizer que mesmo
neste rosto feliz ampliado,

755
00: 37: 29,510 -> 00: 37: 32.090
há um grande número de
pontos amarelos e um monte

756
00: 37: 32,090 -> 00: 37: 34.880
de preto e cinza e
pontos acastanhados também

757
00: 37: 34,880 -> 00: 37: 38.210
que compõem esta imagem tão colorida.

758
00: 37: 38,210 -> 00: 37: 41.450
E para que você possa vê-los nesse caso,
e cada um desses pontos agora,

759
00: 37: 41,450 -> 00: 37: 47.070
um pixel, está usando, eu afirmo,
como 24 bits ou três bytes.

760
00:37:47 , 070 -> 00: 37: 51.320
Agora, você pode imaginar, provavelmente há
o que, centenas, talvez milhares de pontos

761
00: 37: 51,320 -> 00: 37: 54.740
nessa imagem se diminuirmos
e olhe para todos eles novamente.

762
00: 37: 54,740 -> 00: 37: 58.140
Então, se cada um desses pontos
ou pixels são três bytes,

763
00: 37: 58,140 -> 00: 38: 00.890
é por isso que o
fotos que você e eu tiramos

764
00: 38: 00,890 -> 00: 38: 03.050
e as imagens você e eu
baixar da internet

765
00: 38: 03,050 -> 00: 38: 06.590
são normalmente medidos nem mesmo em
bytes, por si só, mas em kilobytes,

766
00: 38: 06,590 -> 00: 38: 09.830
por milhares de bytes, ou
megabytes por milhões de bytes,

767
00: 38: 09,830 -> 00: 38: 14.120
ou se for um arquivo de vídeo, pode obter
ainda maior, bilhões ou gigabytes.

768
00: 38: 14,120 -> 00: 38: 17.330
Mas isso é tudo que é
acontecendo debaixo do capô.

769
00: 38: 17,330 -> 00: 38: 20.240
Estamos apenas representando
informações dessa forma.

770
00: 38: 20,240 -> 00: 38: 22.040
Bem, deixe-me perguntar um
Acompanhe a pergunta agora.

771
00: 38: 22,040 -> 00: 38: 26.360
Se tivermos agora, graças a
Yasmin, cores representadas,

772
00: 38: 26,360 -> 00: 38: 30.680
e por sua vez, imagens, porque todos
uma imagem é uma grade de pixels.

773
00: 38: 30,680 -> 00: 38: 32.960
Você pega o mesmo
princípio proposto por Yasmin,

774
00: 38: 32,960 -> 00: 38: 36.710
onde você representa cada cor de um ponto
e você tem um monte de pontos que

775
00: 38: 36,710 -> 00: 38: 41.750
nos dá imagens, como você propõe
computadores representam arquivos de vídeo?

776
00: 38: 41,750 -> 00: 38: 44.630
Novamente, mesmo se você não
sabe a resposta, como pode

777
00: 38: 44,630 -> 00: 38: 50.030
um computador representa arquivos de vídeo
agora usando, novamente, apenas bits

778
00: 38: 50,030 -> 00: 38: 52.630
à disposição deles?

779
00: 38: 52,630 -> 00: 38: 55.030
Quem gostaria de colocar este aqui?

780
00: 38: 55.030 -> 00: 38: 59.110
Como um computador pode representar um vídeo?

781
00: 38: 59,110 -> 00: 39: 01.240
Justin, o que você acha?

782
00: 39: 01,240 -> 00: 39: 04.802
PÚBLICO: Eu - talvez apenas, tipo,
mudando rapidamente as mordidas?

783
00: 39: 04,802 -> 00: 39: 06.760
DAVID J MALAN: Apenas
mudando rapidamente as mordidas.

784
00: 39: 06,760 -> 00: 39: 08.680
Eu ouvi - você pode elaborar um pouco mais?

785
00: 39: 08,680 -> 00: 39: 11.350
O que você quer dizer com mudar as mordidas?

786
00: 39: 11,350 -> 00: 39: 17.582
PÚBLICO: Como mudar rapidamente
o RGB de pixels individuais -

787
00: 39: 17,582 -> 00: 39: 18.540
DAVID J MALAN: Exatamente.

788
00: 39: 18,540 -> 00: 39: 22.680
PÚBLICO: - para combinar
a imagem daquele segundo

789
00: 39: 22,680 -> 00: 39: 24.570
do vídeo ou parte do vídeo.

790
00: 39: 24,570 -> 00: 39: 25.060
DAVID J MALAN: Perfeito.

791
00: 39: 25,060 -> 00: 39: 27.520
Então, se você pensar sobre o
tela retangular que é o seu telefone,

792
00: 39: 27,520 -> 00: 39: 29.910
ou seu laptop, ou seu
monitor de mesa, se você apenas

793
00: 39: 29,910 -> 00: 39: 33.420
continue mudando as cores de
aqueles pontos uma vez por segundo

794
00: 39: 33,420 -> 00: 39: 35.460
ou um monte de
vezes por segundo, nós vamos

795
00: 39: 35,460 -> 00: 39: 39.690
tenha a ilusão de que realmente há
movimento na tela, logo, vídeo.

796
00: 39: 39,690 -> 00: 39: 43.950
Então, realmente, um vídeo, em certo sentido,
é apenas um monte de imagens,

797
00: 39: 43,950 -> 00: 39: 47.750
na definição de Yasmin, voar
na tela muito rapidamente.

798
00: 39: 47,750 -> 00: 39: 49.680
E então você pode ver isso
até o estilo da velha escola.

799
00: 39: 49,680 -> 00: 39: 52.170
Por exemplo, deixe-me ir em frente
e abre na minha tela

800
00: 39: 52,170 -> 00: 39: 54.940
um pequeno vídeo que
representa um flipbook.

801
00: 39: 54,940 -> 00: 39: 57.690
Então você pode ter feito um destes
como uma criança ou talvez seu professor

802
00: 39: 57,690 -> 00: 40: 00.510
fez ou você os viu, em
pelo menos, pessoalmente em algum lugar.

803
00: 40: 00,510 -> 00: 40: 04.380
Onde se você pegar um monte
de pedaços de papel e grampos

804
00: 40: 04,380 -> 00: 40: 08.190
ou junte-os de alguma forma, desenhe
um monte de fotos, todas as quais

805
00: 40: 08,190 -> 00: 40: 11.650
são semelhantes, mas ligeiramente
diferente em cada página,

806
00: 40: 11,650 -> 00: 40: 14.910
você pode criar uma animação,
ou, realmente, um vídeo.

807
00: 40: 14,910 -> 00: 40: 17.450
E isso é tudo que um vídeo é
em um mundo puramente eletrônico.

808
00: 40: 17,450 -> 00: 40: 19.200
Mesmo que isso aconteça
ser implementado

809
00: 40: 19,200 -> 00: 40: 22.200
no papel, o que acontece
no mundo da informática

810
00: 40: 22,200 -> 00: 40: 24.330
é de fato apenas um todo
sequência de imagens

811
00: 40: 24,330 -> 00: 40: 26.830
voando pela tela em alguma taxa.

812
00: 40: 26,830 -> 00: 40: 30.797
E é isso que realmente nos dá a
arquivos de vídeo que você e eu conhecemos hoje.

813
00: 40: 30,797 -> 00: 40: 32.880
E tem ainda mais
buracos de coelho podemos descer.

814
00: 40: 32,880 -> 00: 40: 34.860
Por exemplo, como pode
você representa a música?

815
00: 40: 34,860 -> 00: 40: 37.350
Bem, música, poderia ser representada,
Deus, de maneiras diferentes.

816
00: 40: 37,350 -> 00: 40: 39.470
Tipo, se você jogar o
piano, por exemplo, você

817
00: 40: 39,470 -> 00: 40: 41.553
pode saber que existem
notas, como A a G.

818
00: 40: 41,553 -> 00: 40: 43.740
Mas também há cortantes
e apartamentos e assim por diante.

819
00: 40: 43,740 -> 00: 40: 44.490
Mas você sabe o que?

820
00: 40: 44,490 -> 00: 40: 48.510
Talvez precisemos apenas de um número para
representam cada uma dessas notas possíveis.

821
00: 40: 48,510 -> 00: 40: 51.660
E talvez também pudéssemos
use outro número,

822
00: 40: 51,660 -> 00: 40: 55.020
assim como as imagens usam vários
números para representar pontos,

823
00: 40: 55.020 -> 00: 40: 57.780
poderíamos usar um número para
representam as notas de uma música,

824
00: 40: 57,780 -> 00: 41: 01.560
mas também outro número para
representam a duração dessa nota.

825
00: 41: 01,560 -> 00: 41: 05.147
Quantos segundos ou milissegundos ou
batidas que você deve ouvir essa nota.

826
00: 41: 05,147 -> 00: 41: 07.230
Então você pode vir com
outras formulações, também,

827
00: 41: 07,230 -> 00: 41: 11.250
mas a música, realmente, pode ser
quantizado no mundo dos computadores

828
00: 41: 11,250 -> 00: 41: 13.330
em apenas pequenos pedaços de informação.

829
00: 41: 13,330 -> 00: 41: 16.110
E enquanto você e eu
concordar em como representá-lo,

830
00: 41: 16,110 -> 00: 41: 17.640
é assim que todas essas coisas funcionam.

831
00: 41: 17,640 -> 00: 41: 23.400
E se você já se perguntou por que há
são JPEGs e PNGs e GIFs e Word

832
00: 41: 23,400 -> 00: 41: 27.750
documentos e arquivos do Excel e todos os
esses diferentes formatos de arquivo ou arquivo

833
00: 41: 27,750 -> 00: 41: 32.640
extensões em computadores, aqueles
extensões ou formatos de arquivo apenas

834
00: 41: 32,640 -> 00: 41: 35.250
representam um grupo inteiro
de humanos concordando

835
00: 41: 35,250 -> 00: 41: 38.430
como armazenar padrões de
zeros e uns em um arquivo

836
00: 41: 38,430 -> 00: 41: 43.530
de modo que quando esses zeros e uns são
carregado em um computador para exibição

837
00: 41: 43,530 -> 00: 41: 47.460
ou para interpretação, ele sabe
o que esses padrões representam.

838
00: 41: 47,460 -> 00: 41: 49.572
As imagens são representadas
ligeiramente diferente,

839
00: 41: 49,572 -> 00: 41: 51.780
som e vídeo são representados
ligeiramente diferente,

840
00: 41: 51,780 -> 00: 41: 54.820
mas são todos zeros e
uns no final do dia.

841
00: 41: 54,820 -> 00: 41: 59.400
Então, isso é tudo para dizer, contanto que nós
todos concordam, de preferência em todo o mundo,

842
00: 41: 59,400 -> 00: 42: 03.180
como representar informação, agora
podemos representar entradas para problemas

843
00: 42: 03,180 -> 00: 42: 05.790
e esperançosamente resolver
problemas e obter resultados.

844
00: 42: 05,790 -> 00: 42: 09.960
Então, tudo o que resta na resolução de problemas,
ou realmente, ciência da computação em geral,

845
00: 42: 09,960 -> 00: 42: 14.950
é olhar dentro desta caixa preta
e considerar como você recebe informações,

846
00: 42: 14,950 -> 00: 42: 18.810
sejam números,
letras, imagens, vídeo, som,

847
00: 42: 18,810 -> 00: 42: 21.930
e convertê-los em soluções reais.

848
00: 42: 21,930 -> 00: 42: 24.420
E então dentro deste preto
caixa é o que normalmente

849
00: 42: 24,420 -> 00: 42: 26.100
descrever como algoritmos.

850
00: 42: 26,100 -> 00: 42: 30.250
Os algoritmos são passo a passo
instruções para resolver problemas.

851
00: 42: 30,250 -> 00: 42: 32.010
Eles nem têm
envolver computadores.

852
00: 42: 32,010 -> 00: 42: 36.630
Nós, humanos, podemos executar algoritmos apenas por
seguindo as instruções de outra pessoa.

853
00: 42: 36,630 -> 00: 42: 40.350
Se você já preparou algo
de um livro de receitas, seguindo uma receita,

854
00: 42: 40,350 -> 00: 42: 43.170
você está executando um
algoritmo passo a passo.

855
00: 42: 43,170 -> 00: 42: 46.170
Mas ao contrário de muitos
receitas ou muito diferente

856
00: 42: 46,170 -> 00: 42: 48.880
de instruções que nós
os humanos dão uns aos outros,

857
00: 42: 48,880 -> 00: 42: 51.330
não há espaço para
ambigüidade em computadores.

858
00: 42: 51,330 -> 00: 42: 54.360
Algoritmos de computadores, quando
implementado por máquinas,

859
00: 42: 54,360 -> 00: 42: 56.910
eles realmente têm que
não seja apenas correto então

860
00: 42: 56,910 -> 00: 42: 59.070
que você acertou
saídas de seu interesse,

861
00: 42: 59,070 -> 00: 43: 01.170
mas também precisam ser precisos.

862
00: 43: 01,170 -> 00: 43: 04.590
Você precisa ser muito preciso, porque
ao contrário de nós, humanos, que podemos gostar

863
00: 43: 04,590 -> 00: 43: 06.990
ler nas entrelinhas e,
sim, entendi o que você quis dizer,

864
00: 43: 06,990 -> 00: 43: 09.070
computadores estão indo
para te levar literalmente.

865
00: 43: 09,070 -> 00: 43: 13.320
E então, ao programar um computador,
isto é, traduzir um algoritmo,

866
00: 43: 13,320 -> 00: 43: 16.290
instruções passo a passo, em alguns
linguagem que o computador entende,

867
00: 43: 16,290 -> 00: 43: 20.910
a responsabilidade recai sobre você para garantir que o
o computador não pode interpretar mal o que você

868
00: 43: 20,910 -> 00: 43: 21.460
quer.

869
00: 43: 21,460 -> 00: 43: 23.170
Portanto, vamos considerar um desses algoritmos.

870
00: 43: 23,170 -> 00: 43: 26.190
Então, em todos os nossos telefones, seja
iOS ou Android ou similar,

871
00: 43: 26,190 -> 00: 43: 28.217
você tem algum aplicativo de contatos.

872
00: 43: 28,217 -> 00: 43: 31.050
E esse aplicativo de contatos
provavelmente armazenando todos os seus amigos

873
00: 43: 31,050 -> 00: 43: 33.810
e familiares e colegas,
provavelmente em ordem alfabética.

874
00: 43: 33,810 -> 00: 43: 36.450
Talvez pelo primeiro nome, talvez
pelo sobrenome, ou como

875
00: 43: 36,450 -> 00: 43: 37.980
você organizou esse dispositivo.

876
00: 43: 37,980 -> 00: 43: 40.590
Bem, a velha escola
versão disso acontece

877
00: 43: 40,590 -> 00: 43: 44.170
estar em papel, que parece um
algo assim, um telefone

878
00: 43: 44,170 -> 00: 43: 44.670
livro.

879
00: 43: 44,670 -> 00: 43: 48.280
E dentro de um telefone da velha escola
livro realmente é exatamente a mesma ideia.

880
00: 43: 48,280 -> 00: 43: 49.060
É muito maior.

881
00: 43: 49,060 -> 00: 43: 51.020
É muito mais muito mais impresso.

882
00: 43: 51,020 -> 00: 43: 52.020
Mas é a mesma coisa.

883
00: 43: 52,020 -> 00: 43: 54.812
Há um monte de nomes e
números em uma lista telefônica típica,

884
00: 43: 54,812 -> 00: 43: 59.280
classificados em ordem alfabética como
seu próprio telefone Android ou iOS

885
00: 43: 59,280 -> 00: 44: 00.697
telefone também pode ser.

886
00: 44: 00,697 -> 00: 44: 02.280
Suponha que queremos resolver um problema.

887
00: 44: 02,280 -> 00: 44: 05.340
E a entrada para esse problema é
não só esta lista telefônica, mas também

888
00: 44: 05,340 -> 00: 44: 07.710
o nome de alguém para
procure o número de.

889
00: 44: 07,710 -> 00: 44: 08.980
Então, meu próprio nome, por exemplo.

890
00: 44: 08,980 -> 00: 44: 12.660
Se eu quiser procurar meu número de telefone,
ou você faz, você pode abrir este livro

891
00: 44: 12,660 -> 00: 44: 14.710
e comece a procurar
David, por exemplo,

892
00: 44: 14,710 -> 00: 44: 16.770
se assumirmos que é
classificado pelo primeiro nome.

893
00: 44: 16,770 -> 00: 44: 20.020
Eu não vejo David no primeiro
página, então eu passo para a segunda.

894
00: 44: 20,020 -> 00: 44: 22.390
Eu não me vejo lá,
então, passo para o terceiro.

895
00: 44: 22,390 -> 00: 44: 25.120
Eu não me vejo lá
então, passo para o quarto.

896
00: 44: 25,120 -> 00: 44: 29.350
E assim por diante, uma página de cada vez,
procurando meu nome e, por sua vez,

897
00: 44: 29,350 -> 00: 44: 30.680
meu numero.

898
00: 44: 30,680 -> 00: 44: 34.120
Bem, se a correção é importante -
deixe-me fazer essa pergunta primeiro.

899
00: 44: 34,120 -> 00: 44: 37.060
É este algoritmo, virando
as páginas, passo a passo,

900
00: 44: 37,060 -> 00: 44: 40.730
procurando David correto?

901
00: 44: 40,730 -> 00: 44: 41.480
O que você acha?

902
00: 44: 41,480 -> 00: 44: 45.680
Dentro do Zoom, você deve ver alguns
ícones sob os participantes

903
00: 44: 45,680 -> 00: 44: 47.820
janela rotulada sim e não.

904
00: 44: 47,820 -> 00: 44: 53.480
Se você gostaria de ir em frente e
vote virtualmente, sim ou não,

905
00: 44: 53,480 -> 00: 44: 55.670
este algoritmo está correto?

906
00: 44: 55,670 -> 00: 44: 59.390
Uma página de cada vez, procurando por mim mesmo.

907
00: 44: 59,390 -> 00: 45: 01.370
Não importa o fato de que
estas são as páginas amarelas,

908
00: 45: 01,370 -> 00: 45: 03.980
e então eu não vou ser
em qualquer lugar da lista telefônica,

909
00: 45: 03,980 -> 00: 45: 07.830
mas, na verdade, vamos assumir
ele contém humanos também.

910
00: 45: 07,830 -> 00: 45: 08.480
Tudo bem.

911
00: 45: 08,480 -> 00: 45: 13.430
Então, parece que o
algoritmo está realmente correto,

912
00: 45: 13,430 -> 00: 45: 15.560
mas é terrivelmente lento.

913
00: 45: 15,560 -> 00: 45: 18.170
E tudo bem, porque
uma das ideias que somos

914
00: 45: 18,170 -> 00: 45: 21.590
vamos considerar no CS50 e
por sua vez, ciência da computação,

915
00: 45: 21,590 -> 00: 45: 25.040
não é apenas a correção de um
algoritmo, mas também a eficiência.

916
00: 45: 25,040 -> 00: 45: 27.320
Quão bem projetado é o algoritmo?

917
00: 45: 27,320 -> 00: 45: 28.070
Isto está correto.

918
00: 45: 28,070 -> 00: 45: 31.040
É simplesmente incrível,
incrivelmente tedioso e lento.

919
00: 45: 31,040 -> 00: 45: 32.035
Mas eu vou me encontrar.

920
00: 45: 32,035 -> 00: 45: 33.410
Mas, é claro, podemos fazer melhor.

921
00: 45: 33,410 -> 00: 45: 37.190
Em vez de procurar uma página para mim
de cada vez, por que não faço uma página,

922
00: 45: 37,190 -> 00: 45: 40.790
deixe-me fazer dois, quatro, seis, oito, 10.

923
00: 45: 40,790 -> 00: 45: 42.260
Parece mais rápido e é mais rápido.

924
00: 45: 42,260 -> 00: 45: 45.320
Estou indo duas vezes mais rápido
a lista telefônica procurando por mim.

925
00: 45: 45,320 -> 00: 45: 46.640
Este algoritmo está correto?

926
00: 45: 46,640 -> 00: 45: 48.710
Deixe-me ir para alguém em
o público desta vez.

927
00: 45: 48,710 -> 00: 45: 52.550
Este é um algoritmo de busca por
o nome de alguém duas páginas por vez

928
00: 45: 52,550 -> 00: 45: 53.300
correto?

929
00: 45: 53,300 -> 00: 45: 55.070
Porque eu afirmo que é mais eficiente.

930
00: 45: 55.070 -> 00: 45: 59.630
Eu afirmo que é melhor projetado porque
Vou resolver o problema duas vezes mais rápido.

931
00: 45: 59,630 -> 00: 46: 00.800
Aneka, o que você acha?

932
00: 46: 00,800 -> 00: 46: 03.373
PÚBLICO: Não, porque você
pode pular seu nome em uma página.

933
00: 46: 03,373 -> 00: 46: 05.540
DAVID J MALAN: Sim, posso
pule meu nome em uma página.

934
00: 46: 05,540 -> 00: 46: 07.290
E deixe-me fazer uma pergunta complementar.

935
00: 46: 07,290 -> 00: 46: 07.930
Posso consertar isso?

936
00: 46: 07,930 -> 00: 46: 09.680
Eu tenho que jogar fora
todo o algoritmo

937
00: 46: 09,680 -> 00: 46: 11.780
ou podemos pelo menos consertar
esse problema, você acha?

938
00: 46: 11,780 -> 00: 46: 15.285
PÚBLICO: Acho que qualquer página
você acessa, ajudaria a ver,

939
00: 46: 15,285 -> 00: 46: 17.660
tipo, que nome tem lá e
talvez veja se o seu nome seria

940
00: 46: 17,660 -> 00: 46: 18.890
venha antes ou depois.

941
00: 46: 18,890 -> 00: 46: 19.340
DAVID J MALAN: Legal.

942
00: 46: 19,340 -> 00: 46: 20.850
Então essa é exatamente a intuição certa.

943
00: 46: 20,850 -> 00: 46: 23.725
Eu não acho que temos que completamente
sacrificar a ideia de acelerar

944
00: 46: 23,725 -> 00: 46: 25.680
este algoritmo movendo-se duas vezes mais rápido.

945
00: 46: 25,680 -> 00: 46: 29.570
Mas como você propõe, se eu for também
agora - talvez eu chegue à seção E,

946
00: 46: 29,570 -> 00: 46: 30.920
que é uma carta atrasada -

947
00: 46: 30,920 -> 00: 46: 33.110
Devo pelo menos dobrar uma página para trás.

948
00: 46: 33,110 -> 00: 46: 35.210
Porque eu poderia conseguir
azarado e talvez David

949
00: 46: 35,210 -> 00: 46: 37.863
é uma espécie de imprensado entre
duas páginas, em que ponto

950
00: 46: 37,863 -> 00: 46: 41.030
Eu posso voar, chegar ao final do
lista telefônica, digamos, não, não há nenhum David,

951
00: 46: 41,030 -> 00: 46: 43.910
e eu apenas tive azar
com 50% de probabilidade.

952
00: 46: 43,910 -> 00: 46: 47.360
Mas como você propõe, eu posso pelo menos
recuperar e meio que condicionalmente

953
00: 46: 47,360 -> 00: 46: 50.270
me pergunte, espere um minuto, talvez
Eu apenas perdi e voltei.

954
00: 46: 50,270 -> 00: 46: 52.830
Para que eu possa obter o geral
melhoria de velocidade,

955
00: 46: 52,830 -> 00: 46: 55.700
mas então pelo menos conserte isso
tipo de erro ou bug.

956
00: 46: 55,700 -> 00: 46: 57.920
E bug, um termo nosso -
na programação, um bug

957
00: 46: 57,920 -> 00: 47: 00.080
é apenas um erro em um
programa, ou um erro, mais

958
00: 47: 00,080 -> 00: 47: 01.205
geralmente, em um algoritmo.

959
00: 47: 01,205 -> 00: 47: 03.122
Mas, honestamente, nenhum dos
nós vamos fazer isso.

960
00: 47: 03,122 -> 00: 47: 05.600
Quando realmente vamos pesquisar
para alguém em uma lista telefônica,

961
00: 47: 05,600 -> 00: 47: 09.290
assim como nossos telefones, eles
normalmente não comece no topo

962
00: 47: 09,290 -> 00: 47: 10.430
e vá para o fundo.

963
00: 47: 10,430 -> 00: 47: 13.160
E os computadores fazem exatamente o que
você pode fazer de forma mais intuitiva.

964
00: 47: 13,160 -> 00: 47: 14.930
Eles provavelmente irão
aproximadamente no meio.

965
00: 47: 14,930 -> 00: 47: 16.640
Talvez eles vejam um pouco
para a esquerda, se você sabe

966
00: 47: 16,640 -> 00: 47: 18.230
D está próximo do início de um alfabeto.

967
00: 47: 18,230 -> 00: 47: 21.980
Mas, não, eu abro para o meio
desleixadamente, e estou na seção M.

968
00: 47: 21,980 -> 00: 47: 25.130
Então o que eu sei quando estou em
a seção M sobre este problema?

969
00: 47: 25,130 -> 00: 47: 26.990
Deixe-me chamar mais uma pessoa.

970
00: 47: 26,990 -> 00: 47: 28.160
Estou na seção M.

971
00: 47: 28,160 -> 00: 47: 31.970
O que você faria como humano agora, tomando
isso como entrada para resolver esse problema?

972
00: 47: 31,970 -> 00: 47: 39.530
O que eu sei sobre a localização, de
claro, do meu nome na lista telefônica?

973
00: 47: 39,530 -> 00: 47: 43.040
Que decisão posso tomar aqui?

974
00: 47: 43,040 -> 00: 47: 44.560
Que decisão posso tomar?

975
00: 47: 44,560 -> 00: 47: 45.560
Kyle, o que você acha?

976
00: 47: 45,560 -> 00: 47: 46.185
PÚBLICO: Sim.

977
00: 47: 46,185 -> 00: 47: 49.370
Então, do M em diante, você sabe que
seu nome não estará lá com certeza.

978
00: 47: 49,370 -> 00: 47: 51.380
DAVID J MALAN: Sim, então meu nome é
não vai estar na seção M.

979
00: 47: 51,380 -> 00: 47: 53.780
Mas graças à alfabetização
da lista telefônica, eu pelo menos sei,

980
00: 47: 53,780 -> 00: 47: 54.650
Você sabe o que?

981
00: 47: 54,650 -> 00: 47: 57.170
Eu posso dar uma mordida enorme
fora deste problema

982
00: 47: 57,170 -> 00: 48: 01.043
e rasgar o problema pela metade, ambos
metaforicamente e também literalmente,

983
00: 48: 01,043 -> 00: 48: 02.210
no caso de uma lista telefônica.

984
00: 48: 02,210 -> 00: 48: 05.540
E eu posso literalmente jogar
metade do problema afastado.

985
00: 48: 05,540 -> 00: 48: 08.690
E então, se eu começar com algo
como 1.000 páginas nesta lista telefônica

986
00: 48: 08,690 -> 00: 48: 12.050
ou 1.000 contatos em meu telefone,
apenas indo para o meio,

987
00: 48: 12,050 -> 00: 48: 14.990
aproximadamente, e dando uma olhada no
esquerda e direita, posso decidir,

988
00: 48: 14,990 -> 00: 48: 18.330
como você nota, bem, não é
na página que procuro.

989
00: 48: 18,330 -> 00: 48: 20.480
Mas posso decidir que é para
à esquerda ou à direita.

990
00: 48: 20,480 -> 00: 48: 24.110
Eu sei que D vem antes de M. E
então agora posso ir para a esquerda.

991
00: 48: 24,110 -> 00: 48: 26.210
E você sabe o que é
interessante aqui, é que eu

992
00: 48: 26,210 -> 00: 48: 28.057
pode usar exatamente o mesmo algoritmo.

993
00: 48: 28,057 -> 00: 48: 29.640
Eu não tenho que pensar diferente.

994
00: 48: 29,640 -> 00: 48: 33.530
Posso aplicar a mesma lógica, aberta ao
meio desta metade do telefone, livro

995
00: 48: 33,530 -> 00: 48: 35.450
e agora vejo que estou na seção G.

996
00: 48: 35,450 -> 00: 48: 37.070
Ainda estou um pouco longe demais.

997
00: 48: 37,070 -> 00: 48: 40.880
Mas, novamente, eu posso rasgar metade do
problema fora, jogue-o no chão

998
00: 48: 40,880 -> 00: 48: 45.050
e agora passei de cerca de 1.000
páginas para 500 páginas para 250 páginas.

999
00: 48: 45,050 -> 00: 48: 49.040
Se eu fizer isso de novo, posso me encontrar,
oh, eu cheguei à seção C agora.

1000
00: 48: 49,040 -> 00: 48: 52.370
Eu posso rasgar o problema pela metade
de novo, jogue a metade esquerda fora,

1001
00: 48: 52,370 -> 00: 48: 54.920
e agora estou com apenas 125 páginas.

1002
00: 48: 54,920 -> 00: 48: 56.840
Agora, isso ainda é muito, mas meu Deus.

1003
00: 48: 56,840 -> 00: 49: 00.020
Eu fui de 1.000
a 500 a 250 a 125.

1004
00: 49: 00,020 -> 00: 49: 05.150
Isso é muito mais rápido do que ir
de 1.000 a 999 a 998,

1005
00: 49: 05,150 -> 00: 49: 11.300
e é ainda mais rápido do que ir
de 1.000 a 998 a 996 a 994.

1006
00: 49: 11,300 -> 00: 49: 15.030
Ambos os algoritmos vão
para me levar muito mais tempo também.

1007
00: 49: 15,030 -> 00: 49: 17.840
Temos esta visualização
feito por Brian, maravilhosamente,

1008
00: 49: 17,840 -> 00: 49: 23.870
que representa uma lista telefônica de 1.024 páginas
com uma página sendo virada de cada vez.

1009
00: 49: 23,870 -> 00: 49: 26.665
E agora caímos para 996, 995.

1010
00: 49: 26,665 -> 00: 49: 28.790
Quero dizer, honestamente, este
não é tão esclarecedor.

1011
00: 49: 28,790 -> 00: 49: 31.970
Vai demorar uma eternidade para encontrar
David ou qualquer nome em uma lista telefônica

1012
00: 49: 31,970 -> 00: 49: 35.060
quando começar nesse tipo
de ritmo com esse algoritmo.

1013
00: 49: 35,060 -> 00: 49: 37.070
Mas e se, em vez disso,
Eu sou um pouco mais esperto

1014
00: 49: 37,070 -> 00: 49: 38.450
e sou um pouco mais intuitivo?

1015
00: 49: 38,450 -> 00: 49: 40.970
E eu aproveito a intuição
que provavelmente você tinha e eu

1016
00: 49: 40,970 -> 00: 49: 44.390
comece com 1.024 páginas
de novo, e desta vez

1017
00: 49: 44,390 -> 00: 49: 48.620
dividir e conquistar, meio de cada vez,
dividindo o problema pela metade?

1018
00: 49: 48,620 -> 00: 49: 51.900
Rasgando a lista telefônica pela metade,
Eu desço para apenas uma página.

1019
00: 49: 51,900 -> 00: 49: 55.610
E se realmente fizermos as contas,
se você começar com mais de 1.000 páginas,

1020
00: 49: 55,610 -> 00: 50: 01.070
só vou levar 10 lágrimas no total de
aquela lista telefônica para descer

1021
00: 50: 01,070 -> 00: 50: 05.690
para o meu número, 949-468-2750.

1022
00: 50: 05,690 -> 00: 50: 10.010
Isso quer dizer que o terceiro
algoritmo não é apenas correto, apenas

1023
00: 50: 10,010 -> 00: 50: 14.600
como o primeiro definitivamente foi e o
o segundo poderia ser com a correção do bug,

1024
00: 50: 14,600 -> 00: 50: 16.610
mas também é muito melhor projetado.

10: 25h
00: 50: 16,610 -> 00: 50: 17.670
É muito mais eficiente.

1026
00: 50: 17,670 -> 00: 50: 20.040
E então podemos ver este
pouco graficamente também.

1027
00: 50: 20,040 -> 00: 50: 23.200
Deixe-me ir em frente e não propor
uma análise numérica ou qualquer coisa

1028
00: 50: 23,200 -> 00: 50: 23.700
Curtiu isso.

1029
00: 50: 23,700 -> 00: 50: 26.550
Mas apenas algo que é
um pouco visual como este.

1030
00: 50: 26,550 -> 00: 50: 28.640
Então, se eu tiver um eixo x
aqui isso representa

1031
00: 50: 28,640 -> 00: 50: 32.300
horizontalmente, o tamanho do problema,
o número de páginas em uma lista telefônica,

1032
00: 50: 32,300 -> 00: 50: 36.030
e verticalmente no eixo y, a quantidade
de tempo necessário para resolver um problema.

1033
00: 50: 36,030 -> 00: 50: 38.840
Como esses algoritmos se parecem,
se apenas fizermos um gráfico deles?

1034
00: 50: 38,840 -> 00: 50: 42.410
Bem, o primeiro algoritmo, descrito
aqui em vermelho, é apenas uma linha reta.

1035
00: 50: 42,410 -> 00: 50: 45.710
É uma inclinação de um porque
existe este um para um

1036
00: 50: 45,710 -> 00: 50: 48.560
relação entre o número de
páginas e a quantidade de tempo

1037
00: 50: 48,560 -> 00: 50: 49.670
preciso de mim para resolver.

1038
00: 50: 49,670 -> 00: 50: 52.730
Para cada nova página desse telefone
livro, talvez ano após ano,

1039
00: 50: 52,730 -> 00: 50: 54.710
se a lista telefônica crescer,
vai me levar

1040
00: 50: 54,710 -> 00: 50: 57.560
mais um passo para procurar
eu ou qualquer outra pessoa,

1041
00: 50: 57.560 -> 00: 50: 59.120
potencialmente, naquela lista telefônica.

1042
00: 50: 59,120 -> 00: 51: 02.060
A menos que eu tenha sorte e eles cheguem cedo
na lista telefônica, mas mais um

1043
00: 51: 02,060 -> 00: 51: 04.460
página significa mais uma virada de página.

1044
00: 51: 04,460 -> 00: 51: 06.980
O segundo algoritmo é realmente melhor.

1045
00: 51: 06,980 -> 00: 51: 08.580
Ainda é uma linha reta.

1046
00: 51: 08,580 -> 00: 51: 11.540
Portanto, ainda é uma relação linear.

1047
00: 51: 11,540 -> 00: 51: 15.020
Mas para cada duas páginas do telefone
livro isso me dá mais um passo.

1048
00: 51: 15,020 -> 00: 51: 16.400
Duas páginas, uma volta.

1049
00: 51: 16,400 -> 00: 51: 17.750
Duas páginas, uma volta.

1050
00: 51: 17,750 -> 00: 51: 20.040
Então é estritamente melhor
do que o primeiro algoritmo.

1051
00: 51: 20,040 -> 00: 51: 20.540
Porque?

1052
00: 51: 20,540 -> 00: 51: 22.957
Bem, se considerarmos isso -
se o tamanho do problema for,

1053
00: 51: 22,957 -> 00: 51: 24.240
talvez, aqui, por exemplo.

1054
00: 51: 24,240 -> 00: 51: 26.420
Então, se assumirmos, para o
questão de discussão, talvez

1055
00: 51: 26,420 -> 00: 51: 29.780
a lista telefônica tem tantas páginas
representado com esta linha pontilhada.

1056
00: 51: 29,780 -> 00: 51: 32.540
Bem, quanto tempo está passando
para pegar o segundo algoritmo

1057
00: 51: 32,540 -> 00: 51: 34.553
encontrar alguém na lista telefônica?

1058
00: 51: 34,553 -> 00: 51: 36.470
Vai levar isso
quantidade de tempo, certo?

1059
00: 51: 36,470 -> 00: 51: 37.910
Onde essas duas linhas se cruzam.

1060
00: 51: 37,910 -> 00: 51: 40.850
Se você estiver usando o primeiro algoritmo,
embora, indo uma página de cada vez,

1061
00: 51: 40,850 -> 00: 51: 45.210
vai demorar muito
tempo, que é literalmente o dobro.

1062
00: 51: 45,210 -> 00: 51: 47.820
Então, eles estão corretos,
assumindo que dobramos de volta conforme necessário

1063
00: 51: 47,820 -> 00: 51: 50.030
se eu for muito além de um nome.

1064
00: 51: 50,030 -> 00: 51: 52.400
Mas ambos são tipo
de fundamentalmente o mesmo.

1065
00: 51: 52,400 -> 00: 51: 54.400
Eles têm a mesma forma,
e, honestamente, ambos

1066
00: 51: 54,400 -> 00: 51: 56.990
parecia lento para dizer e agir.

1067
00: 51: 56,990 -> 00: 51: 59.210
O terceiro algoritmo,
se fôssemos fazer um gráfico,

1068
00: 51: 59,210 -> 00: 52: 01.700
tem um fundamentalmente
relacionamento diferente

1069
00: 52: 01,700 -> 00: 52: 05.480
entre o tamanho do problema e
o tempo necessário para resolver o problema.

1070
00: 52: 05,480 -> 00: 52: 07.953
A linha sobe, sobe,
para cima, para cima, como deveria,

1071
00: 52: 07,953 -> 00: 52: 11.120
porque quanto mais páginas houver, o
mais tempo vai demorar para resolver,

1072
00: 52: 11,120 -> 00: 52: 14.360
mas observe o quanto
mais devagar ele sobe.

1073
00: 52: 14,360 -> 00: 52: 18.320
Essa coisa mal começa a
aumentar conforme o tamanho do problema

1074
00: 52: 18,320 -> 00: 52: 19.880
fica cada vez maior e maior.

1075
00: 52: 19,880 -> 00: 52: 21.618
E por que isso, intuitivamente?

1076
00: 52: 21,618 -> 00: 52: 24.410
Bem, aqui, o que é poderoso é,
suponha que a lista telefônica, no próximo ano,

1077
00: 52: 24,410 -> 00: 52: 26.630
por alguma razão, dobrou de tamanho.

1078
00: 52: 26,630 -> 00: 52: 29.930
Talvez Cambridge e Allston,
Massachusetts se fundiu em um

1079
00: 52: 29,930 -> 00: 52: 33.530
grande lista telefônica, então há
2.000 páginas ímpares agora.

1080
00: 52: 33,530 -> 00: 52: 35.660
Quantos passos mais
levaria no próximo ano

1081
00: 52: 35,660 -> 00: 52: 37.970
procurar por alguém
na lista telefônica?

1082
00: 52: 37,970 -> 00: 52: 38.770
1.

1083
00: 52: 38,770 -> 00: 52: 39.920
Mais um passo.

1084
00: 52: 39,920 -> 00: 52: 42.920
E então, se você olhar para longe
aqui ao longo desta linha verde,

1085
00: 52: 42,920 -> 00: 52: 45.050
dobrando o tamanho de
a lista telefônica, a linha

1086
00: 52: 45,050 -> 00: 52: 48.170
em si só vai subir sempre
tão ligeiramente porque não é grande coisa.

1087
00: 52: 48,170 -> 00: 52: 52.410
Com esse terceiro algoritmo, você está pegando
muito maior fora do problema.

1088
00: 52: 52,410 -> 00: 52: 56.120
E isso também fala sobre o que
ciência da computação e que programação

1089
00: 52: 56,120 -> 00: 52: 57.110
são afinal semelhantes.

1090
00: 52: 57,110 -> 00: 52: 59.765
Aproveitando as ideias que você
entrar na aula com

1091
00: 52: 59,765 -> 00: 53: 01.640
e que você pode usar
em sua vida cotidiana,

1092
00: 53: 01,640 -> 00: 53: 05.720
mas você não necessariamente pensa sobre
como você pode representar problemas

1093
00: 53: 05,720 -> 00: 53: 10.250
usando esses algoritmos e como você
pode traduzi-los para a linguagem do computador.

1094
00: 53: 10,250 -> 00: 53: 13.037
E, de fato, uma maneira de nós
comece a pensar sobre algoritmos

1095
00: 53: 13,037 -> 00: 53: 15.620
não é apenas sua correção,
mas como eles são bem projetados.

1096
00: 53: 15,620 -> 00: 53: 17.540
E então por exemplo
aqui, eu deliberadamente

1097
00: 53: 17,540 -> 00: 53: 21.800
rotulado essas três linhas n, n
sobre 2, e base de log 2 sobre n.

1098
00: 53: 21,800 -> 00: 53: 25.250
Isso significa apenas que se usarmos n como
número - então os cientistas da computação tendem

1099
00: 53: 25,250 -> 00: 53: 30.140
para usar n como uma variável, bem como um
matemático pode dizer x ou y ou z,

1100
00: 53: 30,140 -> 00: 53: 31.220
n para número.

1101
00: 53: 31,220 -> 00: 53: 34.603
E então o primeiro vermelho
linha é o tempo de execução,

1102
00: 53: 34,603 -> 00: 53: 36.770
o número de passos que pode
levar para resolver um problema

1103
00: 53: 36,770 -> 00: 53: 38.150
pode ser, no pior dos casos, n.

1104
00: 53: 38,150 -> 00: 53: 41.368
Se houver n páginas na lista telefônica,
talvez eu esteja procurando por alguém assim

1105
00: 53: 41,368 -> 00: 53: 43.160
no final do telefone
livro e está indo

1106
00: 53: 43,160 -> 00: 53: 45.105
para me seguir todos os n passos para encontrá-los.

1107
00: 53: 45,105 -> 00: 53: 47.480
O segundo algoritmo está indo
para dar metade dos passos.

1108
00: 53: 47,480 -> 00: 53: 50.720
Então, expressamos isso como n
dividido por 2, porque se nós formos

1109
00: 53: 50,720 -> 00: 53: 54.020
fazendo duas páginas por vez, vamos
chegue ao final da lista telefônica -

1110
00: 53: 54,020 -> 00: 53: 57.200
se estamos procurando por alguém cujo
nome começa com Z, por exemplo -

1111
00: 53: 57,200 -> 00: 53: 58.520
duas vezes mais rápido.

1112
00: 53: 58,520 -> 00: 54: 01.490
Mas o terceiro algoritmo, se você
um pouco enferrujado na matemática,

1113
00: 54: 01,490 -> 00: 54: 04.730
é representado como um
logaritmo com uma base de 2.

1114
00: 54: 04,730 -> 00: 54: 08.540
E isso significa apenas que
este gráfico, a linha verde

1115
00: 54: 08,540 -> 00: 54: 14.840
descreve quanto tempo leva para
resolver um problema quando em cada passagem,

1116
00: 54: 14,840 -> 00: 54: 19.220
em cada etapa, você está dividindo o
problema, neste caso, pela metade.

1117
00: 54: 19,220 -> 00: 54: 22.740
Os outros dois algoritmos estão levando
uma ou duas mordidas fora do problema.

1118
00: 54: 22,740 -> 00: 54: 27.540
O terceiro algoritmo estava levando metade
de todo o problema de uma vez.

1119
00: 54: 27,540 -> 00: 54: 29.850
E foi isso que o fez
ainda mais poderoso.

1120
00: 54: 29,850 -> 00: 54: 32.240
Então, quando se trata de
programando agora, precisamos

1121
00: 54: 32,240 -> 00: 54: 35.120
traduzir essas coisas
chamados algoritmos para codificar.

1122
00: 54: 35,120 -> 00: 54: 36.920
Ou, neste caso, vamos
chame-o de pseudocódigo.

1123
00: 54: 36,920 -> 00: 54: 40.160
E em breve, vamos nos concentrar em
uma linguagem de programação real,

1124
00: 54: 40,160 -> 00: 54: 41.330
embora gráfico.

11: 25h
00: 54: 41,330 -> 00: 54: 44.350
Mas, por agora, vamos apenas considerar
algumas das construções ou classificação

1126
00: 54: 44,350 -> 00: 54: 46.850
de ideias fundamentais que são
vai ser útil para alavancar

1127
00: 54: 46,850 -> 00: 54: 48.680
aqui fora nesta classe.

1128
00: 54: 48,680 -> 00: 54: 51.440
Então, deixe-me propor que
Eu realmente acabei de fazer verbalmente

1129
00: 54: 51,440 -> 00: 54: 55.580
pode ser traduzido em pseudocódigo,
que é como um algoritmo implementado

1130
00: 54: 55,580 -> 00: 54: 58.168
em inglês, ou qualquer que seja o seu
linguagem falada ou escrita é.

1131
00: 54: 58,168 -> 00: 54: 59.960
Mas a chave é que
tem que estar correto,

1132
00: 54: 59,960 -> 00: 55: 03.410
e idealmente é melhor ser preciso
para que não haja ambigüidade.

1133
00: 55: 03,410 -> 00: 55: 05.150
O primeiro passo foi, de fato, o que eu fiz.

1134
00: 55: 05,150 -> 00: 55: 06.260
Pegue a lista telefônica.

1135
00: 55: 06,260 -> 00: 55: 08.810
Etapa dois, abrir no meio da lista telefônica.

1136
00: 55: 08,810 -> 00: 55: 10.580
Etapa três, olhe a página.

1137
00: 55: 10,580 -> 00: 55: 11.780
E de fato eu fiz isso.

1138
00: 55: 11,780 -> 00: 55: 14.000
E agora as coisas ficaram interessantes.

1139
00: 55: 14.000 -> 00: 55: 15.740
Etapa quatro, se a pessoa -

1140
00: 55: 15,740 -> 00: 55: 19.430
David, no meu caso - está no
página, o que eu quero fazer?

1141
00: 55: 19,430 -> 00: 55: 21.290
Bem, eu provavelmente deveria
ligue para essa pessoa.

1142
00: 55: 21,290 -> 00: 55: 22.280
O problema está resolvido.

1143
00: 55: 22,280 -> 00: 55: 24.620
Eu obtive minha saída,
o número da pessoa.

1144
00: 55: 24,620 -> 00: 55: 27.800
Mas há outra possibilidade,
não se a pessoa estiver na página

1145
00: 55: 27,800 -> 00: 55: 29.930
mas, sim, se a pessoa
está no início do livro -

1146
00: 55: 29,930 -> 00: 55: 31.555
e foi isso que aconteceu há pouco.

1147
00: 55: 31,555 -> 00: 55: 34.820
Se eu acabasse no M, mas estou procurando
para David, que é à esquerda,

1148
00: 55: 34,820 -> 00: 55: 36.890
Devo então fazer o quê?

1149
00: 55: 36,890 -> 00: 55: 39.830
Aberto no meio do
metade esquerda do livro.

1150
00: 55: 39,830 -> 00: 55: 41.083
E foi isso mesmo que eu fiz.

1151
00: 55: 41,083 -> 00: 55: 43.250
E eu meio que gratuitamente
rasgou o problema pela metade.

1152
00: 55: 43,250 -> 00: 55: 47.810
Mas, algoritmicamente, eu apenas olhei
na metade esquerda do livro a seguir.

1153
00: 55: 47,810 -> 00: 55: 48.560
O que eu faço em seguida?

1154
00: 55: 48,560 -> 00: 55: 50.268
Bem, realmente, isso é
o ponto em que eu

1155
00: 55: 50,268 -> 00: 55: 53.120
propôs que o algoritmo é agora
apenas repetível, de novo e de novo,

1156
00: 55: 53,120 -> 00: 55: 54.860
e então vamos voltar para a linha três.

1157
00: 55: 54,860 -> 00: 55: 55.460
Porque?

1158
00: 55: 55,460 -> 00: 55: 58.125
Bem, começando na linha
três, eu tenho um algoritmo

1159
00: 55: 58,125 -> 00: 55: 59.750
por procurar alguém em uma lista telefônica.

1160
00: 55: 59,750 -> 00: 56: 02.728
Acontece que o telefone
o livro agora tem metade do tamanho.

1161
00: 56: 02,728 -> 00: 56: 03.770
Mas há outro caso.

1162
00: 56: 03,770 -> 00: 56: 05.437
E se a pessoa estiver mais tarde no livro?

1163
00: 56: 05,437 -> 00: 56: 07.700
Eu não estava procurando por
David, que começa com D,

1164
00: 56: 07,700 -> 00: 56: 10.640
mas o nome de outra pessoa é
no final do alfabeto.

1165
00: 56: 10,640 -> 00: 56: 13.698
Bem, então se essa pessoa é
mais tarde no livro, a mesma ideia.

1166
00: 56: 13,698 -> 00: 56: 15.740
Aberto no meio do
metade direita do livro,

1167
00: 56: 15,740 -> 00: 56: 18.350
e, novamente, volte para a etapa três.

1168
00: 56: 18,350 -> 00: 56: 20.900
Mas por último, há
uma quarta possibilidade.

1169
00: 56: 20,900 -> 00: 56: 22.160
Existe uma quarta possibilidade.

1170
00: 56: 22,160 -> 00: 56: 24.950
Ou a pessoa está no telefone
livro, ou eles estão à esquerda

1171
00: 56: 24,950 -> 00: 56: 29.820
ou eles estão à direita, ou, francamente,
eles simplesmente não estão lá.

1172
00: 56: 29,820 -> 00: 56: 32.480
E este último ponto, embora
um pouco sutil, é tão importante.

1173
00: 56: 32,480 -> 00: 56: 34.520
As probabilidades são todos nós em nossos Macs, PCs.

1174
00: 56: 34,520 -> 00: 56: 38.910
Talvez até telefones,
experiência muito frustrante onde

1175
00: 56: 38,910 -> 00: 56: 43.130
seu computador trava, você pega o
estúpida bola de praia giratória ou ampulheta,

1176
00: 56: 43,130 -> 00: 56: 46.430
a coisa congela ou apenas reinicia,
você sabe, algo deu errado

1177
00: 56: 46,430 -> 00: 56: 48.050
e é meio inexplicável.

1178
00: 56: 48,050 -> 00: 56: 50.270
E você pode pensar que é
sua culpa, mas realmente é

1179
00: 56: 50,270 -> 00: 56: 54.200
geralmente a culpa do programador
quem escreveu o software que você

1180
00: 56: 54,200 -> 00: 56: 56.610
usando em seu computador ou dispositivo.

1181
00: 56: 56,610 -> 00: 56: 57.260
Porque?

1182
00: 56: 57,260 -> 00: 57: 00.960
Muitas vezes, aquele programador,
Por qualquer motivo,

1183
00: 57: 00,960 -> 00: 57: 03.935
não antecipou um cenário possível.

1184
00: 57: 03,935 -> 00: 57: 05.810
Neste caso, há
quatro cenários, mas você

1185
00: 57: 05,810 -> 00: 57: 09.230
poderia imaginar esquecer o
fato de que, oh, bem, talvez David

1186
00: 57: 09,230 -> 00: 57: 11.000
nem mesmo nesta lista telefônica.

1187
00: 57: 11.000 -> 00: 57: 12.720
Mas é melhor você lidar com esse cenário.

1188
00: 57: 12,720 -> 00: 57: 14.930
E quando você tem um computador
que congela ou trava

1189
00: 57: 14,930 -> 00: 57: 17.120
ou reinicia ou apenas
algo dá errado, que

1190
00: 57: 17,120 -> 00: 57: 20.270
muitas vezes é muito simples
porque um humano não

1191
00: 57: 20,270 -> 00: 57: 23.280
código para algum cenário possível.

1192
00: 57: 23,280 -> 00: 57: 25.610
Então, quais são os fundamentos
constrói que nós

1193
00: 57: 25,610 -> 00: 57: 28.430
visto aqui que estamos indo
continuar vendo na aula?

1194
00: 57: 28,430 -> 00: 57: 32.030
Bem, destacado em amarelo agora
são realmente alguns verbos ou ações

1195
00: 57: 32,030 -> 00: 57: 33.870
que exercitamos com aquela lista telefônica.

1196
00: 57: 33,870 -> 00: 57: 36.560
Estes são, em geral, em
programação chamadas funções.

1197
00: 57: 36,560 -> 00: 57: 39.130
Uma função é uma ação ou um verbo.

1198
00: 57: 39,130 ​​-> 00: 57: 41.820
É uma declaração que consegue
o computador para fazer algo.

1199
00: 57: 41,820 -> 00: 57: 45.725
Em seguida, destacados aqui estão o que
chamaremos de condições ou ramos.

1200
00: 57: 45,725 -> 00: 57: 47.850
Estes são os
proverbiais bifurcações na estrada.

1201
00: 57: 47,850 -> 00: 57: 50.890
Você pode fazer isso ou
isso ou talvez essa outra coisa.

1202
00: 57: 50,890 -> 00: 57: 53.730
E você pode ter uma decisão
para fazer ou dois ou três ou quatro,

1203
00: 57: 53,730 -> 00: 57: 55.800
quantas condições
faz sentido logicamente.

1204
00: 57: 55,800 -> 00: 57: 57.210
Chamaremos essas condições.

1205
00: 57: 57,210 -> 00: 58: 00.790
Mas como você decide qual
bifurcação no caminho a percorrer?

1206
00: 58: 00,790 -> 00: 58: 03.030
Quer fazer isso ou
isso ou essa outra coisa?

1207
00: 58: 03,030 -> 00: 58: 06.030
Para isso precisamos de algo
chamadas expressões booleanas.

1208
00: 58: 06,030 -> 00: 58: 09.150
Uma expressão booleana
é só uma pergunta

1209
00: 58: 09,150 -> 00: 58: 14.700
cuja resposta é sim ou não, ou verdadeira
ou falso, ou, francamente, um ou zero.

1210
00: 58: 14,700 -> 00: 58: 16.990
Todos aqueles seriam
equivalente para nossos propósitos.

1211
00: 58: 16,990 -> 00: 58: 18.270
Então, pessoa na página.

1212
00: 58: 18,270 -> 00: 58: 19.590
Essa é uma pergunta sim ou não.

1213
00: 58: 19,590 -> 00: 58: 20.730
Pessoa no início do livro?

1214
00: 58: 20,730 -> 00: 58: 21.690
Isso também é uma questão.

1215
00: 58: 21,690 -> 00: 58: 24.280
A pessoa mais tarde no livro é
uma terceira pergunta também.

1216
00: 58: 24,280 -> 00: 58: 28.860
Então, se você pode imaginar uma resposta sim-não,
uma resposta verdadeiro-falso, uma resposta um-zero,

1217
00: 58: 28,860 -> 00: 58: 31.708
isso é o que nos dá estes
coisas chamadas expressões booleanas.

1218
00: 58: 31,708 -> 00: 58: 33.750
E por último, em amarelo
aqui estão essas coisas.

1219
00: 58: 33,750 -> 00: 58: 35.490
Volte para a linha três.

1220
00: 58: 35,490 -> 00: 58: 38.490
Isso vai induzir o que vamos
chame um loop ou um ciclo,

1221
00: 58: 38,490 -> 00: 58: 42.232
que é apenas uma construção de programação
ou princípio de um algoritmo que

1222
00: 58: 42,232 -> 00: 58: 44.190
te leva a fazer algo
de novo e de novo para você

1223
00: 58: 44,190 -> 00: 58: 46.620
não precisa escrever um algoritmo de 100 linhas.

1224
00: 58: 46,620 -> 00: 58: 51.630
Você pode escrever um algoritmo de 13 linhas e
reutilize partes dele repetidamente.

12: 25h
00: 58: 51,630 -> 00: 58: 55.890
E então vamos começar agora, e
vamos começar CS50 com um olhar

1226
00: 58: 55,890 -> 00: 58: 59.400
em uma linguagem de programação real,
um que você pode ter usado recentemente

1227
00: 58: 59,400 -> 00: 59: 03.120
ou como crianças mais novas, conhecido como Scratch,
que é uma programação gráfica

1228
00: 59: 03,120 -> 00: 59: 07.860
linguagem que, embora possa
ser muito familiar para alguns de vocês,

1229
00: 59: 07,860 -> 00: 59: 10.770
na verdade representa muito
esses fundamentos de programação

1230
00: 59: 10,770 -> 00: 59: 13.980
que usaremos como base para
transição em apenas uma semana

1231
00: 59: 13,980 -> 00: 59: 16.440
para um mais tradicional
linguagem mais velha da escola,

1232
00: 59: 16,440 -> 00: 59: 19.260
conhecido como C, que é inteiramente
baseado em texto e teclado.

1233
00: 59: 19,260 -> 00: 59: 21.720
Mas veremos em todos os
linguagens que olhamos no CS50,

1234
00: 59: 21,720 -> 00: 59: 25.230
essas coisas chamadas funções e
condições, expressões booleanas

1235
00: 59: 25,230 -> 00: 59: 27.300
e loops, e hoje,
em apenas um momento, nós vamos

1236
00: 59: 27,300 -> 00: 59: 31.230
também ver alguns outros recursos que nós
descrever como variáveis, não ao contrário de x, y,

1237
00: 59: 31,230 -> 00: 59: 35.350
e z em matemática, tópicos, que permitem
um computador para fazer, ao que parece,

1238
00: 59: 35,350 -> 00: 59: 40.270
várias coisas ao mesmo tempo, eventos,
e ainda outros recursos também.

1239
00: 59: 40,270 -> 00: 59: 46.350
E assim, a partir daqui, fazemos a transição
do pseudocódigo para o código real.

1240
00: 59: 46,350 -> 00: 59: 49.095
E o que você vê no
tela aqui é um exemplo

1241
00: 59: 49,095 -> 00: 59: 51.720
de uma linguagem chamada C, onde
vamos passar uma boa quantidade de tempo

1242
00: 59: 51,720 -> 00: 59: 52.303
esse semestre.

1243
00: 59: 52,303 -> 00: 59: 54.810
Esta é a escola mais velha
linguagem baseada em texto e teclado

1244
00: 59: 54,810 -> 00: 59: 56.130
ao qual me referi anteriormente.

1245
00: 59: 56,130 -> 00: 59: 58.050
Mas essa linguagem é um pouco enigmática.

1246
00: 59: 58,050 -> 01: 00: 01.650
E certamente à primeira vista, você pode
pergunto por que o símbolo de hash está lá,

1247
01: 00: 01,650 -> 01: 00: 05.220
os colchetes angulares, os parênteses,
as chaves, o ponto e vírgula,

1248
01: 00: 05,220 -> 01: 00: 10.020
as citações, quer dizer, meu Deus, há
tanta sintaxe para o que está na tela

1249
01: 00: 10,020 -> 01: 00: 10.590
agora.

1250
01: 00: 10.590 -> 01: 00: 12.690
E você provavelmente pode adivinhar
o que este programa faz.

1251
01: 00: 12,690 -> 01: 00: 14.315
Deixe-me ir rapidamente para a audiência.

1252
01: 00: 14,315 -> 01: 00: 17.310
O que, qualquer pessoa, faz este programa
provavelmente sim, mesmo que você nunca

1253
01: 00: 17.310 -> 01: 00: 19.470
programou um computador antes?

1254
01: 00: 19.470 -> 01: 00: 21.552
PÚBLICO: Apenas imprime
Olá, vírgula, mundo.

1255
01: 00: 21.552 -> 01: 00: 22.510
DAVID J MALAN: Exatamente.

1256
01: 00: 22.510 -> 01: 00: 23.820
Apenas imprime olá, mundo.

1257
01: 00: 23,820 -> 01: 00: 26.850
E meu deus, tipo, olha para todos os
a sintaxe e todas as teclas

1258
01: 00: 26,850 -> 01: 00: 29.560
tivemos que digitar apenas para comandar
o computador para fazer isso.

1259
01: 00: 29.560 -> 01: 00: 31.888
Em contraste, hoje é o Scratch.

1260
01: 00: 31.888 -> 01: 00: 34.680
Nós nos permitiremos apenas
hoje para olhar para algo muito mais

1261
01: 00: 34,680 -> 01: 00: 39.210
amigável, muito mais gráfico, que irá
nos permite explorar essas mesmas ideias

1262
01: 00: 39,210 -> 01: 00: 42.810
e preparar o terreno para mais
sofisticado, mais tradicional

1263
01: 00: 42,810 -> 01: 00: 45.648
línguas na próxima semana e
além, mas no contexto

1264
01: 00: 45,648 -> 01: 00: 48.690
onde não temos que nos preocupar
parênteses, ponto e vírgula, chaves,

1265
01: 00: 48,690 -> 01: 00: 51.520
e onde mesmo estes
as teclas estão no teclado.

1266
01: 00: 51,520 -> 01: 00: 53.553
Então, deixe-me apresentar
você, então, para Scratch,

1267
01: 00: 53.553 -> 01: 00: 55.470
desenvolvido por alguns de nossos
amigos no futuro

1268
01: 00: 55.470 -> 01: 00: 58.020
aqui em Cambridge, no Media Lab do MIT.

1269
01: 00: 58,020 -> 01: 01: 02.490
Você pode jogar junto em casa aqui no out
se desejar em scratch.mit.edu.

1270
01: 01: 02.490 -> 01: 01: 05.760
É baseado na web, mas há
também uma versão offline

1271
01: 01: 05,760 -> 01: 01: 07.770
se você tende a não ter
o melhor da internet.

1272
01: 01: 07,770 -> 01: 01: 10.170
Mas a interface do usuário iria
normalmente se parece com isso.

1273
01: 01: 10,170 -> 01: 01: 11.190
E um tour rápido.

1274
01: 01: 11,190 -> 01: 01: 15.390
Então aqui em scratch.mit.edu,
quando você vai criar

1275
01: 01: 15,390 -> 01: 01: 20.400
um projeto através do botão no
interface, você verá primeiro Scratch,

1276
01: 01: 20.400 -> 01: 01: 22.920
o homônimo do
programa, este gato que

1277
01: 01: 22.920 -> 01: 01: 25.630
mora neste pequeno retangular
mundo no qual você pode subir,

1278
01: 01: 25.630 -> 01: 01: 26.505
para baixo, para a esquerda ou para a direita.

1279
01: 01: 26.505 -> 01: 01: 29.310
Mas o gato pode ser transformado em
qualquer número de outros personagens,

1280
01: 01: 29,310 -> 01: 01: 32.850
ou o que chamaremos de sprites,
suas representações visuais.

1281
01: 01: 32.850 -> 01: 01: 37.230
À esquerda aqui, agora, estão todos os
blocos de construção que vêm com o Scratch.

1282
01: 01: 37,230 -> 01: 01: 39.780
Toda a programação
construções disponíveis para você

1283
01: 01: 39,780 -> 01: 01: 41.310
na forma de peças de puzzle.

1284
01: 01: 41,310 -> 01: 01: 43.477
E você vai notar que
eles são categorizados de acordo

1285
01: 01: 43.477 -> 01: 01: 46.650
a cor e descrição e há
um monte de peças de quebra-cabeça

1286
01: 01: 46.650 -> 01: 01: 48.120
que sim dizem o que eles fazem.

1287
01: 01: 48,120 -> 01: 01: 52.080
E hoje o objetivo não é entrar
as ervas daninhas de todos esses vários quebra-cabeças

1288
01: 01: 52.080 -> 01: 01: 55.980
peças, mas para destacar algumas das
ideias fundamentais que são possíveis.

1289
01: 01: 55.980 -> 01: 01: 58.695
E vamos explorar essas ideias por meio de
no meio da tela aqui.

1290
01: 01: 58.695 -> 01: 02: 01.320
Seremos capazes, em apenas um momento,
para começar a arrastar e soltar

1291
01: 02: 01,320 -> 01: 02: 04.110
essas peças do quebra-cabeça
nesta tela maior

1292
01: 02: 04,110 -> 01: 02: 09.450
e interligá-los, se
faz sentido lógico fazer isso.

1293
01: 02: 09.450 -> 01: 02: 11.790
Finalmente, para a maioria
programas sofisticados,

1294
01: 02: 11,790 -> 01: 02: 14.700
nós podemos realmente criar ainda
mais personagens ou sprites

1295
01: 02: 14.700 -> 01: 02: 18.580
e realmente tem um monte de
interações na tela também.

1296
01: 02: 18.580 -> 01: 02: 21.630
Mas vamos seguir em frente e mergulhar
com apenas um exemplo muito rapidamente.

1297
01: 02: 21.630 -> 01: 02: 27.630
Vou seguir em frente na minha tela
e vá, de fato, para scratch.mit.edu.

1298
01: 02: 27.630 -> 01: 02: 30.430
E você é bem-vindo para jogar
junto em casa também.

1299
01: 02: 30.430 -> 01: 02: 33.900
E vou clicar em Criar em ordem
para entrar exatamente nessa interface.

1300
01: 02: 33.900 -> 01: 02: 37.140
Você não precisa fazer uma conta
desde o início, a menos que você gostaria.

1301
01: 02: 37,140 -> 01: 02: 39.450
E deixe-me ir em frente e
comece a criar um programa.

1302
01: 02: 39.450 -> 01: 02: 42.300
O primeiro programa que
já foi escrito, pela tradição,

1303
01: 02: 42,300 -> 01: 02: 46.170
foi simplesmente o que Iris propôs
como "Hello World", um programa que

1304
01: 02: 46,170 -> 01: 02: 47.850
imprime na tela olá, mundo.

1305
01: 02: 47.850 -> 01: 02: 49.000
Bem, como podemos fazer isso?

1306
01: 02: 49.000 -> 01: 02: 51.360
Bem, provavelmente posso
faça isso bem rápido

1307
01: 02: 51,360 -> 01: 02: 53.698
porque eu usei o
interface antes, mas o objetivo

1308
01: 02: 53.698 -> 01: 02: 55.740
para você à mão, se você tiver
nunca usei isso antes,

1309
01: 02: 55,740 -> 01: 02: 58.860
com o primeiro conjunto de problemas do curso
ou atribuição de programação, realmente

1310
01: 02: 58,860 -> 01: 03: 01.740
é só sujar as mãos
e explorar e fuçar.

1311
01: 03: 01,740 -> 01: 03: 05.790
E as probabilidades são, as ideias que você está procurando
pois, você descobrirá que eventualmente aparecerá.

1312
01: 03: 05,790 -> 01: 03: 08.730
E o primeiro eu vou
para experimentar é este aqui.

1313
01: 03: 08,730 -> 01: 03: 12.030
Esta peça do quebra-cabeça que é um
pouco amarelo ou laranja na cor.

1314
01: 03: 12.030 -> 01: 03: 16.200
Está na categoria Eventos, e
é chamado quando a bandeira verde é clicada.

1315
01: 03: 16,200 -> 01: 03: 19.440
Isso é interessante, porque se eu
vá para o palco do Scratch aqui,

1316
01: 03: 19.440 -> 01: 03: 24.810
você verá no canto superior esquerdo, há um
bandeira verde que vai significar vá,

1317
01: 03: 24.810 -> 01: 03: 27.630
e um sinal vermelho de pare que é
vai significar parar.

1318
01: 03: 27.630 -> 01: 03: 31.170
Então, se eu quiser que algo aconteça
quando clico na bandeira verde,

1319
01: 03: 31,170 -> 01: 03: 33.520
Vou começar com
esta peça do puzzle aqui.

1320
01: 03: 33.520 -> 01: 03: 35.852
Agora eu vou passar por cima
na categoria Looks.

1321
01: 03: 35.852 -> 01: 03: 38.310
E na categoria Looks,
há um monte de blocos.

1322
01: 03: 38,310 -> 01: 03: 39.935
Mas vamos mantê-lo simples aqui.

1323
01: 03: 39,935 -> 01: 03: 44.670
Eu vou prosseguir e apenas dizer o
canônico, como observou Iris, olá, vírgula,

1324
01: 03: 44.670 -> 01: 03: 45.390
mundo.

13: 25h
01: 03: 45,390 -> 01: 03: 46.837
Vou diminuir o zoom.

1326
01: 03: 46.837 -> 01: 03: 49.920
Vou passar para o Scratch aqui, e
Vou clicar agora na bandeira verde.

1327
01: 03: 49,920 -> 01: 03: 52.150
E voila, olá, mundo.

1328
01: 03: 52,150 -> 01: 03: 55.410
Então esse é o meu - e talvez,
em breve, seu primeiro programa,

1329
01: 03: 55.410 -> 01: 03: 57.480
usando nesta linguagem Scratch.

1330
01: 03: 57.480 -> 01: 03: 59.880
Mas, claro, isso não é
terrivelmente interessante.

1331
01: 03: 59,880 -> 01: 04: 01.723
Pode ser gratificante para
logo na primeira vez.

1332
01: 04: 01,723 -> 01: 04: 04.140
Mas não é algo que você
quero jogar novamente e novamente.

1333
01: 04: 04,140 -> 01: 04: 06.152
Mas podemos fazer isso
muito mais interativo

1334
01: 04: 06,152 -> 01: 04: 08.110
e podemos começar a camada
esses blocos de construção

1335
01: 04: 08,110 -> 01: 04: 10.980
e ter um algoritmo mais
como pesquisar na lista telefônica,

1336
01: 04: 10.980 -> 01: 04: 12.460
que tem várias etapas.

1337
01: 04: 12.460 -> 01: 04: 14.380
Então deixe-me ir em frente
e pare esse programa.

1338
01: 04: 14.380 -> 01: 04: 16.320
E deixe-me explorar um pouco em vez disso.

1339
01: 04: 16,320 -> 01: 04: 19.860
Deixe-me ir em Sentindo isso
vez, esta categoria azul.

1340
01: 04: 19.860 -> 01: 04: 21.540
E você verá este bloco aqui.

1341
01: 04: 21.540 -> 01: 04: 23.940
Pergunte qual é o seu nome e espere.

1342
01: 04: 23.940 -> 01: 04: 26.570
Mas observe que qual é o seu
o nome está neste oval branco,

1343
01: 04: 26.570 -> 01: 04: 29.320
e isso implica que posso mudar
qual é a pergunta se eu quiser,

1344
01: 04: 29,320 -> 01: 04: 31.120
mas estou bem com essa pergunta por agora.

1345
01: 04: 31,120 -> 01: 04: 34.620
E deixe-me ir em frente e primeiro
livre-se desses blocos,

1346
01: 04: 34.620 -> 01: 04: 39.720
e me entrego quando a bandeira verde clica,
e desta vez comece em Sensing

1347
01: 04: 39,720 -> 01: 04: 41.700
com pergunte qual é o seu nome e aguarde.

1348
01: 04: 41,700 -> 01: 04: 43.860
Mas note que isso é
uma espécie de bloco especial.

1349
01: 04: 43,860 -> 01: 04: 46.920
Vem com um segundo
bloco, uma chamada variável.

1350
01: 04: 46.920 -> 01: 04: 50.070
Acontece que esta pergunta
peça do quebra-cabeça é literalmente

1351
01: 04: 50.070 -> 01: 04: 52.950
vai perguntar ao humano quem é
jogar este jogo uma pergunta,

1352
01: 04: 52.950 -> 01: 04: 57.150
e vai armazenar a resposta para
aquela pergunta em uma variável, representada

1353
01: 04: 57,150 -> 01: 04: 59.370
aqui como este oval azul, chamado de resposta.

1354
01: 04: 59,370 -> 01: 05: 02.280
Assim como na matemática, um x, ay ou um z.

1355
01: 05: 02.280 -> 01: 05: 03.970
Então, o que eu poderia fazer com isso.

1356
01: 05: 03,970 -> 01: 05: 05.730
Bem, deixe-me voltar para Looks.

1357
01: 05: 05,730 -> 01: 05: 09.480
Deixa eu ir dar um alô, mas
dessa vez sabe o que mais?

1358
01: 05: 09.480 -> 01: 05: 13.410
Deixe-me ir em frente e dizer olá,
vírgula, e então - tudo bem,

1359
01: 05: 13.410 -> 01: 05: 15.490
deixe-me dar a mim mesmo um segundo bloqueio de palavra.

1360
01: 05: 15.490 -> 01: 05: 16.990
Mas não quero dizer olá de novo.

1361
01: 05: 16,990 -> 01: 05: 18.460
Vou deletar isso.

1362
01: 05: 18.460 -> 01: 05: 22.200
Mas vou voltar ao Sensing
e vou arrastar e soltar a resposta.

1363
01: 05: 22,200 -> 01: 05: 24.990
Agora parece um pouco grande,
mas observe se eu chegar perto disso,

1364
01: 05: 24.990 -> 01: 05: 27.000
é meio que magneticamente
deseja se conectar.

1365
01: 05: 27.000 -> 01: 05: 30.490
E, de fato, o Scratch vai crescer
para preencher a peça do quebra-cabeça para mim.

1366
01: 05: 30.490 -> 01: 05: 34.850
Então, agora eu tenho um programa,
parece, um programa escrito em Scratch,

1367
01: 05: 34.850 -> 01: 05: 38.100
um software escrito em Scratch
que vai, quando a bandeira verde é

1368
01: 05: 38,100 -> 01: 05: 41.100
clicado, pergunte qual é o seu nome,
e espere - essa é a nossa função -

1369
01: 05: 41,100 -> 01: 05: 42.060
diga olá--

1370
01: 05: 42.060 -> 01: 05: 43.935
essa é outra função -
e então vai

1371
01: 05: 43.935 -> 01: 05: 45.840
para dizer a resposta, tanto faz
o humano digitou.

1372
01: 05: 45.840 -> 01: 05: 48.990
Bem, deixe-me ir para o Scratch's
mundo aqui e clique na bandeira verde.

1373
01: 05: 48,990 -> 01: 05: 50.940
Observe que o gato está perguntando
me qual é o seu nome.

1374
01: 05: 50,940 -> 01: 05: 53.550
Eu digito David e entro.

1375
01: 05: 53.550 -> 01: 05: 55.040
Huh.

1376
01: 05: 55.040 -> 01: 05: 55.843
Eu só vejo David.

1377
01: 05: 55,843 -> 01: 05: 57.260
Bem, talvez eu tenha feito algo errado.

1378
01: 05: 57.260 -> 01: 05: 58.052
Deixe-me fazer de novo.

1379
01: 05: 58,052 -> 01: 06: 00.720
Bandeira verde, DAVID, entre.

1380
01: 06: 00,720 -> 01: 06: 02.370
Hmm.

1381
01: 06: 02,370 -> 01: 06: 04.290
O que está acontecendo?

1382
01: 06: 04,290 -> 01: 06: 08.430
Isso parece ser um bug, porque eu estou
tenho certeza de que tenho três funções,

1383
01: 06: 08,430 -> 01: 06: 10.680
pergunte, diga e diga.

1384
01: 06: 10.680 -> 01: 06: 13.680
Mas eu sinto que estou perdendo
a segunda instrução.

1385
01: 06: 13,680 -> 01: 06: 17.880
Alguma ideia sobre o bug que eu fiz?

1386
01: 06: 17.880 -> 01: 06: 19.185
O que pode explicar isso?

1387
01: 06: 19,185 -> 01: 06: 22.030


1388
01: 06: 22,030 -> 01: 06: 23.860
Natalie, não é?

1389
01: 06: 23,860 -> 01: 06: 26.957
PÚBLICO: Então você substituiu o
saída com a mesma função.

1390
01: 06: 26,957 -> 01: 06: 27.790
DAVID J MALAN: Sim.

1391
01: 06: 27,790 -> 01: 06: 29.665
Eu substituí a saída
com a mesma função.

1392
01: 06: 29,665 -> 01: 06: 33.070
E, honestamente, embora estejamos usando
um programa bastante simples, Scratch,

1393
01: 06: 33.070 -> 01: 06: 34.900
meu Mac é realmente muito rápido.

1394
01: 06: 34,900 -> 01: 06: 37.600
E seu PC ou Mac ou
seu telefone é muito rápido.

1395
01: 06: 37.600 -> 01: 06: 42.130
E mesmo que Scratch esteja dizendo olá
e dizendo a resposta, como observa Natalie,

1396
01: 06: 42,130 -> 01: 06: 46.030
a resposta é meio esmagadora para
dizer, porque eu nem sequer parei.

1397
01: 06: 46.030 -> 01: 06: 48.220
Então eu poderia entrar e
encontre um bloco - há

1398
01: 06: 48,220 -> 01: 06: 50.950
um bloco de espera que poderia permitir
me inserir uma pausa arbitrária.

1399
01: 06: 50,950 -> 01: 06: 52.790
Mas eu realmente quero que isso seja uma respiração.

1400
01: 06: 52,790 -> 01: 06: 55.450
Eu quero que seja olá,
vírgula, David, tudo de uma vez.

1401
01: 06: 55.450 -> 01: 06: 56.540
Então, como posso fazer isso?

1402
01: 06: 56.540 -> 01: 06: 58.028
Bem, deixe-me ir em Operações.

1403
01: 06: 58,028 -> 01: 07: 00.820
E acontece que há todo um
monte de coisas relacionadas à matemática aqui,

1404
01: 07: 00,820 -> 01: 07: 04.930
mas também um pouco de inglês ou
coisas relacionadas com a linguagem aqui.

1405
01: 07: 04,930 -> 01: 07: 06.135
Junte-se à maçã e banana.

1406
01: 07: 06,135 -> 01: 07: 08.260
Agora, isso não tem nada a ver
com maçãs e bananas.

1407
01: 07: 08,260 -> 01: 07: 10.885
Esses são apenas marcadores de posição, mas
há esta peça do quebra-cabeça aqui

1408
01: 07: 10.885 -> 01: 07: 12.160
que posso arrastar e soltar.

1409
01: 07: 12,160 -> 01: 07: 12.910
E sabe de uma coisa?

1410
01: 07: 12.910 -> 01: 07: 14.077
Deixe-me ir em frente e fazer isso.

1411
01: 07: 14.077 -> 01: 07: 19.870
Deixe-me substituir a primeira entrada para dizer,
e deixe-me entrar, vírgula, e então

1412
01: 07: 19,870 -> 01: 07: 22.102
não banana, mas deixe-me arrastar a resposta -

1413
01: 07: 22,102 -> 01: 07: 23.560
e observe que cairá no lugar.

1414
01: 07: 23.560 -> 01: 07: 24.880
Deixe-me jogar este outro bloco fora.

1415
01: 07: 24,880 -> 01: 07: 27.755
Para excluir coisas, você pode simplesmente arrastar
eles para a esquerda e solte.

1416
01: 07: 27.755 -> 01: 07: 31.300
E agora observe que tenho um programa
que está perguntando qual é o seu nome

1417
01: 07: 31,300 -> 01: 07: 35.110
e então direi o
resultado de juntar hello and answer.

1418
01: 07: 35,110 -> 01: 07: 37.972
E deixe-me ir em frente e jogar isso
agora, depois de parar o antigo.

1419
01: 07: 37.972 -> 01: 07: 38.680
Qual o seu nome?

1420
01: 07: 38,680 -> 01: 07: 41.230
Eu digito David, entro e voila.

1421
01: 07: 41,230 -> 01: 07: 44.710
Como Natalie observa, agora é
não tropeçando em si mesmo,

1422
01: 07: 44,710 -> 01: 07: 46.270
derrotando o que estava anteriormente lá.

1423
01: 07: 46.270 -> 01: 07: 48.070
Agora estou entendendo tudo de uma vez.

1424
01: 07: 48.070 -> 01: 07: 50.320
Agora o programa está obtendo
um pouco mais interessante,

14: 25h
01: 07: 50,320 -> 01: 07: 52.880
mas o paradigma é não
diferente de antes.

1426
01: 07: 52,880 -> 01: 07: 56.230
Na verdade, deixe-me propor que
tudo que acabamos de fazer

1427
01: 07: 56,230 -> 01: 08: 00.340
está se encaixando perfeitamente nisso
modelo mental completo do que

1428
01: 08: 00,340 -> 01: 08: 03.140
significa resolver problemas e
o que a própria ciência da computação é.

1429
01: 08: 03,140 -> 01: 08: 06.670
Então, por exemplo, se este
é o problema a ser resolvido

1430
01: 08: 06,670 -> 01: 08: 10.070
e eu tenho entradas e saídas são
meu objetivo e um algoritmo intermediário,

1431
01: 08: 10.070 -> 01: 08: 12.580
vamos considerar como o Scratch até
se encaixa neste modelo mental.

1432
01: 08: 12.580 -> 01: 08: 15.580
Minha entrada desde o primeiro
programa que escrevemos um momento atrás

1433
01: 08: 15.580 -> 01: 08: 18.220
foi literalmente olá,
mundo em seu próprio oval.

1434
01: 08: 18,220 -> 01: 08: 23.680
O algoritmo foi implementado como
uma função no Scratch chamada say.

1435
01: 08: 23.680 -> 01: 08: 25.569
Portanto, um algoritmo, passo
por instruções passo a passo,

1436
01: 08: 25,569 -> 01: 08: 28.630
uma função é do computador
implementação de um algoritmo.

1437
01: 08: 28.630 -> 01: 08: 30.399
Nesse caso, uma função chamada say.

1438
01: 08: 30,399 -> 01: 08: 33.010
O resultado, é claro, foi
o gato dizendo olá, mundo.

1439
01: 08: 33.010 -> 01: 08: 37.300
Mas as coisas ficaram mais interessantes agora
após a observação de Natalie, pelo que quando eu

1440
01: 08: 37,300 -> 01: 08: 41.170
introduza algo como perguntar
qual é o seu nome e então espere,

1441
01: 08: 41,170 -> 01: 08: 43.460
observe o que acontece
desta vez no modelo.

1442
01: 08: 43.460 -> 01: 08: 46.420
Agora, a entrada para o problema
é qual é o seu nome -

1443
01: 08: 46.420 -> 01: 08: 49.630
essa é a string que vem por padrão,
e eu poderia mudá-lo, mas não o fiz.

1444
01: 08: 49.630 -> 01: 08: 52.330
Isso está sendo alimentado agora no bloco ask.

1445
01: 08: 52,330 -> 01: 08: 55.600
E o propósito do bloco ask
na vida é pegar o gato

1446
01: 08: 55.600 -> 01: 08: 58.359
para me dar uma resposta como esta.

1447
01: 08: 58,359 -> 01: 09: 02.080
Agora, essa resposta é interessante
porque agora posso entrar

1448
01: 09: 02.080 -> 01: 09: 04.580
com a palavra hello como prefixo.

1449
01: 09: 04.580 -> 01: 09: 07.000
Então este bloco é interessante
porque observe, a entrada,

1450
01: 09: 07.000 -> 01: 09: 10.930
o oval branco para o bloco dizer, na verdade
tem outra peça do quebra-cabeça e então

1451
01: 09: 10.930 -> 01: 09: 12.760
mais duas peças do quebra-cabeça em cima dele.

1452
01: 09: 12,760 -> 01: 09: 16.090
E o que é legal aqui é que
ao programar funções,

1453
01: 09: 16.090 -> 01: 09: 20.529
você pode ter as saídas de uma função
tornar-se a entrada para outra função.

1454
01: 09: 20.529 -> 01: 09: 22.660
E assim o fluxo aqui
é simplesmente isso.

1455
01: 09: 22,660 -> 01: 09: 26.560
Agora eu tenho duas entradas para o
função, tanto olá, que escrevi,

1456
01: 09: 26.560 -> 01: 09: 30.010
e resposta, que veio
do bloco ask.

1457
01: 09: 30,010 -> 01: 09: 34.359
O algoritmo em questão agora é o
função join, que acabei de usar.

1458
01: 09: 34,359 -> 01: 09: 37.540
E sua saída é, esperançosamente,
vai ser olá, vírgula, David.

1459
01: 09: 37.540 -> 01: 09: 40.960
Mas eu não quero ver um oval branco em
a tela dizendo olá, vírgula, David.

1460
01: 09: 40,960 -> 01: 09: 43.359
Eu quero que o gato diga
olá, vírgula, David.

1461
01: 09: 43,359 -> 01: 09: 46.120
Então deixe-me ir em frente e
concentre-se apenas na saída.

1462
01: 09: 46,120 -> 01: 09: 50.410
Faça com que se torne a entrada para uma final
função, que é, digamos, bloco,

1463
01: 09: 50.410 -> 01: 09: 54.170
e voila, agora o gato
diz o que eu quero.

1464
01: 09: 54,170 -> 01: 09: 58.570
Então, novamente, mesmo quando você começa a aninhar,
isto é, coloque essas peças do quebra-cabeça

1465
01: 09: 58.570 -> 01: 10: 02.170
um em cima do outro, todos
que estamos fazendo é passando entradas

1466
01: 10: 02,170 -> 01: 10: 03.040
e obter resultados.

1467
01: 10: 03.040 -> 01: 10: 06.040
Fazer algo com essas saídas
e torná-los entradas, e assim por diante.

1468
01: 10: 06.040 -> 01: 10: 10.030
Esse é realmente o paradigma,
em última análise, do que significa programar.

1469
01: 10: 10.030 -> 01: 10: 12.190
Mas podemos fazer o gato fazer
coisas mais interessantes.

1470
01: 10: 12,190 -> 01: 10: 14.148
E só para ter um pouco
um pouco de diversão com isso,

1471
01: 10: 14,148 -> 01: 10: 16.360
deixe-me ir em frente e cavar
neste ícone inferior

1472
01: 10: 16,360 -> 01: 10: 17.740
na parte inferior esquerda da tela.

1473
01: 10: 17.740 -> 01: 10: 20.530
Scratch tem esses chamados
extensões, onde você pode realmente

1474
01: 10: 20.530 -> 01: 10: 22.460
faça com que ele faça coisas mais sofisticadas também.

1475
01: 10: 22.460 -> 01: 10: 25.030
E deixe-me ir para o texto para
Fala no canto superior direito.

1476
01: 10: 25.030 -> 01: 10: 27.100
Então, isso está usando um serviço baseado em nuvem -

1477
01: 10: 27,100 -> 01: 10: 29.260
isso é algum serviço baseado na Internet -

1478
01: 10: 29.260 -> 01: 10: 32.860
isso vai enviar as palavras
que eu digito na internet.

1479
01: 10: 32.860 -> 01: 10: 37.030
A internet, algum servidor lá, é
vai responder com uma verbalização

1480
01: 10: 37.030 -> 01: 10: 39.067
agora do que acabei de digitar.

1481
01: 10: 39,067 -> 01: 10: 40.400
Então, deixe-me tentar isso.

1482
01: 10: 40.400 -> 01: 10: 42.610
Deixe-me me livrar do
roxo dizer função

1483
01: 10: 42.610 -> 01: 10: 45.550
e substitua-o por este bloco de fala.

1484
01: 10: 45.550 -> 01: 10: 48.190
E deixe-me ir em frente e arrastar
na peça do puzzle de junção

1485
01: 10: 48,190 -> 01: 10: 49.900
aqui - observe que é
vai crescer para preencher,

1486
01: 10: 49,900 -> 01: 10: 51.860
e eu não vou
use este mais.

1487
01: 10: 51,860 -> 01: 10: 54.640
Desta vez eu vou acertar
Pare e eu vou em frente

1488
01: 10: 54.640 -> 01: 10: 56.800
e aperte Play mais uma vez
e digite meu nome.

1489
01: 10: 56,800 -> 01: 10: 57.780
E--

1490
01: 10: 57.780 -> 01: 10: 59.530
COMPUTADOR: (FEMININO
ROBÓTICO) Olá, David.

1491
01: 10: 59.530 -> 01: 11: 01.530
DAVID J MALAN: OK, não um
som de gato muito natural,

1492
01: 11: 01.530 -> 01: 11: 03.560
mas observe que podemos definir
a voz de forma diferente.

1493
01: 11: 03,560 -> 01: 11: 05.350
Então observe que posso arrastar esta peça do quebra-cabeça

1494
01: 11: 05,350 -> 01: 11: 07.690
E você pode até apertar
blocos dentro de outros.

1495
01: 11: 07.690 -> 01: 11: 09.490
Observe que ele pode ir aonde você quiser.

1496
01: 11: 09.490 -> 01: 11: 10.870
Vou colocá-lo no topo aqui.

1497
01: 11: 10.870 -> 01: 11: 12.953
Então, eu poderia colocá-lo em um
alguns lugares diferentes.

1498
01: 11: 12.953 -> 01: 11: 15.220
No momento, a voz padrão é alto.

1499
01: 11: 15,220 -> 01: 11: 16.840
Squeak parece apropriado.

1500
01: 11: 16,840 -> 01: 11: 18.790
Vamos tentar isso.

1501
01: 11: 18,790 -> 01: 11: 20.587
Digitando meu nome, David.

1502
01: 11: 20.587 -> 01: 11: 22.170
COMPUTADOR: (ALTAMENTE ALTAMENTE) Olá, David.

1503
01: 11: 22,170 -> 01: 11: 22.530
DAVID J MALAN: Tudo bem.

1504
01: 11: 22.530 -> 01: 11: 23.610
Ainda não é muito felino.

1505
01: 11: 23,610 -> 01: 11: 27.720
Ironicamente, há uma voz de gatinho,
que se eu mudar para gatinho,

1506
01: 11: 27,720 -> 01: 11: 29.520
agora vamos ouvir isso.

1507
01: 11: 29.520 -> 01: 11: 31.482
Digite meu nome e entre.

1508
01: 11: 31,482 -> 01: 11: 32.940
COMPUTADOR: (ALTO PITCHED) Miau miau.

1509
01: 11: 32.940 -> 01: 11: 35.250
DAVID J MALAN: OK, então realmente não
importa nesse ponto o que eu digito.

1510
01: 11: 35,250 -> 01: 11: 36.750
Mas agora isso é incrível.

1511
01: 11: 36,750 -> 01: 11: 39.570
Tipo, nós passamos de apenas
dizendo olá, mundo para olá,

1512
01: 11: 39.570 -> 01: 11: 41.220
David, que está mudando dinamicamente.

1513
01: 11: 41,220 -> 01: 11: 42.600
Se você fosse digitar
seu nome, obviamente,

1514
01: 11: 42.600 -> 01: 11: 43.950
em vez disso, diria seu nome.

1515
01: 11: 43.950 -> 01: 11: 47.580
E agora, graças à nuvem,
ou seja, servidores na internet,

1516
01: 11: 47.580 -> 01: 11: 51.090
estamos convertendo automaticamente
texto que o humano acabou de

1517
01: 11: 51.090 -> 01: 11: 53.190
fornecido em um arquivo de som -

1518
01: 11: 53,190 -> 01: 11: 55.740
notas e durações e tudo isso -

1519
01: 11: 55,740 -> 01: 11: 57.700
em algo que meu computador agora pode reproduzir.

1520
01: 11: 57.700 -> 01: 12: 00.450
Bem, vamos realmente fazer este gato
soa um pouco mais como um gato.

1521
01: 12: 00,450 -> 01: 12: 02.242
Deixe-me ir em frente e
livre-se desses blocos

1522
01: 12: 02,242 -> 01: 12: 07.080
aqui, e deixe-me ir e dar
eu agora da categoria de som,

1523
01: 12: 07.080 -> 01: 12: 07.710
que tal agora?

1524
01: 12: 07,710 -> 01: 12: 09.840
Toque miau de som até terminar.

1525
01: 12: 09,840 -> 01: 12: 11.370
Agora, este é um programa simples.

1526
01: 12: 11,370 -> 01: 12: 14.550
Quando a bandeira verde é clicada,
toque miau de som até terminar.

1527
01: 12: 14.550 -> 01: 12: 15.130
Aqui vamos nós.

1528
01: 12: 15,130 -> 01: 12: 16.588
Vou prosseguir e clicar em Play.

1529
01: 12: 16.588 -> 01: 12: 17.900
[MIAU]

1530
01: 12: 17.900 -> 01: 12: 19.160
Tudo bem, é isso.

1531
01: 12: 19,160 -> 01: 12: 21.677
Se eu quiser ouvir o gato miando
de novo, tenho que fazer de novo.

1532
01: 12: 21.677 -> 01: 12: 22.840
[MIAU]

1533
01: 12: 22.840 -> 01: 12: 23.637
OK, isso é ótimo.

1534
01: 12: 23.637 -> 01: 12: 26.095
Eu poderia meio que me divertir
por um tempo, apenas clicando -

1535
01: 12: 26,095 -> 01: 12: 26.595
[MIAU]

1536
01: 12: 26.595 -> 01: 12: 27.170
- jogue, mas--

1537
01: 12: 27,170 -> 01: 12: 27.670
[MIAU]

1538
01: 12: 27.670 -> 01: 12: 29.170
- com certeza podemos fazer melhor do que isso.

1539
01: 12: 29,170 -> 01: 12: 30.360
Você pode imaginar isso -

1540
01: 12: 30.360 -> 01: 12: 31.120
[MIAU]

1541
01: 12: 31,120 -> 01: 12: 32.540
- ficando tedioso rapidamente.

1542
01: 12: 32.540 -> 01: 12: 35.397
Então, como posso pegar o gato
fazer isso de novo e de novo?

1543
01: 12: 35,397 -> 01: 12: 36.230
Bem, quer saber?

1544
01: 12: 36,230 -> 01: 12: 39.400
Deixe-me ir em frente e deixe-me apenas
tipo de pegar alguns desses.

1545
01: 12: 39.400 -> 01: 12: 41.878
Miau, miau, miau, três vezes.

1546
01: 12: 41.878 -> 01: 12: 44.170
Então agora são duas vezes a menos
Eu tenho que apertar o botão.

1547
01: 12: 44,170 -> 01: 12: 46.250
[MEOWING TRÊS VEZES RAPIDAMENTE]

1548
01: 12: 46,250 -> 01: 12: 46.750
Tudo bem.

1549
01: 12: 46,750 -> 01: 12: 48.400
Não parece o gato mais feliz.

1550
01: 12: 48.400 -> 01: 12: 53.110
Então, deixe-me ir para o controle e deixar
me dar uma segunda pausa no meio.

1551
01: 12: 53,110 -> 01: 12: 55.210
Espere um segundo aqui.

1552
01: 12: 55,210 -> 01: 12: 56.260
Agora deixe-me fazer de novo.

1553
01: 12: 56,260 -> 01: 12: 59.560
[MEOWING TRÊS VEZES]

1554
01: 12: 59.560 -> 01: 13: 01.960
OK, gato um pouco mais feliz.

1555
01: 13: 01,960 -> 01: 13: 03.900
Mas isso parece um pouco confuso agora.

1556
01: 13: 03,900 -> 01: 13: 05.080
Isto está correto.

1557
01: 13: 05,080 -> 01: 13: 06.280
Está miando três vezes.

1558
01: 13: 06,280 -> 01: 13: 07.770
Mas deixe-me ir para a audiência.

1559
01: 13: 07,770 -> 01: 13: 09.080
Vamos agora considerar o design.

1560
01: 13: 09,080 -> 01: 13: 11.830
Lembre-se de que consideramos o design
no contexto da lista telefônica.

1561
01: 13: 11.830 -> 01: 13: 15.820
O terceiro algoritmo era melhor
projetado para ser mais rápido,

1562
01: 13: 15,820 -> 01: 13: 18.940
era mais eficiente, mas
há outro elemento

1563
01: 13: 18.940 -> 01: 13: 23.140
para projetar, que é você
não deve se repetir, se possível.

1564
01: 13: 23,140 -> 01: 13: 25.668
Então, aqueles de vocês que
ter programado antes

1565
01: 13: 25,668 -> 01: 13: 27.460
pode saber o que
solução aqui pode ser.

1566
01: 13: 27.460 -> 01: 13: 31.840
Bem, acontece que voltar
para a linha três, chamamos um loop.

1567
01: 13: 31.840 -> 01: 13: 34.060
Acontece que o Scratch suporta
essas coisas são chamadas de loops.

1568
01: 13: 34,060 -> 01: 13: 36.185
E, de fato, há um
olhando para mim bem aqui.

1569
01: 13: 36,185 -> 01: 13: 39.100
Se eu aumentar o zoom à esquerda, observe
que sob os blocos de controle,

1570
01: 13: 39,100 -> 01: 13: 41.053
esses blocos laranja
há um bloco de repetição.

1571
01: 13: 41,053 -> 01: 13: 43.720
E mesmo que diga 10 por
padrão, aposto que podemos mudar isso.

1572
01: 13: 43,720 -> 01: 13: 45.430
Então, deixe-me arrastar isso até aqui.

1573
01: 13: 45,430 -> 01: 13: 49.210
Deixe-me jogar fora muito disso
redundância, esta cópia e pasta.

1574
01: 13: 49,210 -> 01: 13: 52.480
Deixe-me mover essas peças do quebra-cabeça
dentro do bloco de repetição,

1575
01: 13: 52.480 -> 01: 13: 54.070
e também crescerá para se adequar a eles.

1576
01: 13: 54.070 -> 01: 13: 55.090
Não é um problema.

1577
01: 13: 55.090 -> 01: 13: 56.980
Deixe-me mudar a repetição para três.

1578
01: 13: 56.980 -> 01: 13: 59.080
E agora deixe-me reconectar tudo.

1579
01: 13: 59.080 -> 01: 14: 01.090
E agora o programa está mais restrito.

1580
01: 14: 01,090 -> 01: 14: 04.690
Está usando menos quebra-cabeças
pedaços, ou menos linhas de código,

1581
01: 14: 04.690 -> 01: 14: 07.610
menos etapas, se você quiser,
para alcançar o mesmo resultado.

1582
01: 14: 07,610 -> 01: 14: 09.478
Então, agora, se eu clicar na bandeira verde -

1583
01: 14: 09.478 -> 01: 14: 13.230
[MEOWING TRÊS VEZES]

1584
01: 14: 13,230 -> 01: 14: 14.123
- ainda está funcionando.

1585
01: 14: 14,123 -> 01: 14: 16.540
Então você pode imaginar mudando
isso para qualquer número que você quiser.

1586
01: 14: 16.540 -> 01: 14: 19.020
Há até um bloco para sempre,
onde poderíamos fazer isso para sempre,

1587
01: 14: 19.020 -> 01: 14: 21.000
se o gato vai
faça isso para sempre.

1588
01: 14: 21.000 -> 01: 14: 22.590
Mas agora é um programa melhor.

1589
01: 14: 22.590 -> 01: 14: 26.280
Agora está melhor desenhado, porque se
Eu quero mudar a quantidade de tempo

1590
01: 14: 26,280 -> 01: 14: 28.620
o gato está esperando ou
se eu quiser mudar

1591
01: 14: 28.620 -> 01: 14: 30.780
o número total de
vezes que o gato mia, eu

1592
01: 14: 30,780 -> 01: 14: 34.890
pode mudar esses detalhes em um
lugar, não em um ou dois ou três,

1593
01: 14: 34.890 -> 01: 14: 37.950
como copiando e colando
essas mesmas peças do quebra-cabeça.

1594
01: 14: 37.950 -> 01: 14: 39.487
Bem, que tal aquele loop para sempre?

1595
01: 14: 39.487 -> 01: 14: 41.320
E se você quiser
fazer algo para sempre?

1596
01: 14: 41,320 -> 01: 14: 42.330
O que posso querer fazer?

1597
01: 14: 42,330 -> 01: 14: 44.010
Bem, vamos levantar o gato e se mexer.

1598
01: 14: 44,010 -> 01: 14: 46.410
Deixe-me ir na categoria de movimento agora.

1599
01: 14: 46.410 -> 01: 14: 49.800
Deixe-me ir ao ponto
em direção ao ponteiro do mouse.

1600
01: 14: 49.800 -> 01: 14: 51.240
Então deixe-me dar um zoom nisso.

1601
01: 14: 51.240 -> 01: 14: 54.510
E toda vez que o gato aponta
em direção ao ponteiro do mouse,

1602
01: 14: 54.510 -> 01: 14: 56.260
vamos fazer com que ele dê um passo.

1603
01: 14: 56,260 -> 01: 14: 58.540
Então eu vou pegar o
mova alguns passos,

1604
01: 14: 58.540 -> 01: 15: 00.270
e vou mudar o 10 para um.

1605
01: 15: 00,270 -> 01: 15: 01.860
E agora vou clicar em Play.

1606
01: 15: 01,860 -> 01: 15: 04.350
E agora temos nosso primeiro
programa onde o gato está

1607
01: 15: 04,350 -> 01: 15: 07.075
meio que respondendo ao cursor do meu Mac.

1608
01: 15: 07,075 -> 01: 15: 09.700
E eu posso movê-lo, e eu
pode ficar um pouco bobo,

1609
01: 15: 09,700 -> 01: 15: 11.340
mas está me levando literalmente.

1610
01: 15: 11.340 -> 01: 15: 15.068
Está apontando para o cursor do mouse
e está dando um passo.

1611
01: 15: 15.068 -> 01: 15: 16.360
Agora, posso fazer com que ele se mova mais rápido.

1612
01: 15: 16,360 -> 01: 15: 17.700
Deixe-me parar com isso por um segundo.

1613
01: 15: 17,700 -> 01: 15: 21.480
E se eu não der um passo em
uma vez, mas duas etapas de cada vez?

1614
01: 15: 21.480 -> 01: 15: 24.330
E veremos que agora o
o gato está se movendo um pouco mais rápido.

1615
01: 15: 24,330 -> 01: 15: 25.560
Não muito rápido.

1616
01: 15: 25.560 -> 01: 15: 28.420
Vamos dar 20 passos em um
tempo e ver o que acontece.

1617
01: 15: 28.420 -> 01: 15: 30.450
E este é realmente o
essência da animação.

1618
01: 15: 30.450 -> 01: 15: 33.750
Quanto mais você ajusta o número de etapas
ou o número de mudanças acontecendo

1619
01: 15: 33.750 -> 01: 15: 36.150
para aqueles pixels por segundo
ou por unidade de tempo,

1620
01: 15: 36,150 -> 01: 15: 38.580
mais isso vai
acontecer visualmente na tela.

1621
01: 15: 38.580 -> 01: 15: 41.947
Bem, o que mais nós podemos
fazer apenas seguindo?

1622
01: 15: 41,947 -> 01: 15: 42.780
Bem, quer saber?

1623
01: 15: 42.780 -> 01: 15: 45.540
Se eu tiver a habilidade agora
ter o gato me seguindo,

1624
01: 15: 45.540 -> 01: 15: 47.450
deixe-me tentar algo totalmente diferente.

16: 25h
01: 15: 47.450 -> 01: 15: 49.568
Deixe-me ir em frente e abrir
até outra extensão.

1626
01: 15: 49,568 -> 01: 15: 51.360
Deixe-me entrar na caneta
ferramenta, que vai

1627
01: 15: 51,360 -> 01: 15: 55.620
para me permitir desenhar com, tipo,
um lápis ou caneta na tela.

1628
01: 15: 55.620 -> 01: 16: 00.320
E deixe-me ir em frente e ainda
faça o gato me seguir, eu acho -

1629
01: 16: 00,320 -> 01: 16: 01.320
na verdade, quer saber?

1630
01: 16: 01,320 -> 01: 16: 02.280
Vamos mudar isso.

1631
01: 16: 02.280 -> 01: 16: 04.230
Vamos apenas fazer com que ele vá para onde estou.

1632
01: 16: 04,230 -> 01: 16: 06.960
Portanto, há outro bloco que
diz ir para a posição aleatória.

1633
01: 16: 06,960 -> 01: 16: 07.930
Eu não quero isso.

1634
01: 16: 07,930 -> 01: 16: 10.200
Então eu vou mudar isso
pelo pequeno menu triangular

1635
01: 16: 10,200 -> 01: 16: 11.820
aqui, para ir para o ponteiro do mouse.

1636
01: 16: 11.820 -> 01: 16: 15.270
Então agora, para sempre, o gato está apenas indo
para ir para onde está o ponteiro do mouse.

1637
01: 16: 15,270 -> 01: 16: 18.210
Não vai planar ou
faça isso devagar ou rapidamente.

1638
01: 16: 18,210 -> 01: 16: 20.550
Isso vai apenas para
onde quer que o cursor esteja.

1639
01: 16: 20.550 -> 01: 16: 23.970
E deixe-me ir agora para este
nova categoria Caneta abaixo.

1640
01: 16: 23.970 -> 01: 16: 25.565
E como posso fazer isso?

1641
01: 16: 25,565 -> 01: 16: 26.440
Você sabe o que eu quero?

1642
01: 16: 26.440 -> 01: 16: 28.470
Eu quero que esse gato seja
capaz de desenhar para mim.

1643
01: 16: 28.470 -> 01: 16: 31.080
Quando eu movo o cursor
cima, baixo, esquerda, direita, eu

1644
01: 16: 31,080 -> 01: 16: 33.780
quero realmente desenhar algo
com tinta na tela.

1645
01: 16: 33,780 -> 01: 16: 37.590
Mas eu só quero desenhar
algo quando a caneta está abaixada.

1646
01: 16: 37.590 -> 01: 16: 41.520
Observe à esquerda que dois dos dois
peças do quebra-cabeça que acabei de apresentar

1647
01: 16: 41.520 -> 01: 16: 45.240
aqui à esquerda estão a caneta para baixo e a caneta para cima.

1648
01: 16: 45,240 -> 01: 16: 48.090
Mas tem um pedaço
de falta de lógica aqui.

1649
01: 16: 48.090 -> 01: 16: 53.550
Deixe-me perguntar ao público como pode
vamos melhorar este programa

1650
01: 16: 53.550 -> 01: 16: 58.500
então não só o gato segue meu
cursor, mas também desenho na tela?

1651
01: 16: 58.500 -> 01: 17: 02.880
Nicholas, que tipo de
soluções que você proporia?

1652
01: 17: 02,880 -> 01: 17: 07.257
PÚBLICO: Então, o que você poderia
fazer é pegar uma instrução if -

1653
01: 17: 07,257 -> 01: 17: 09.840
então você pode controlar quando a caneta
está para cima ou quando a caneta está para baixo,

1654
01: 17: 09,840 -> 01: 17: 12.630
dependendo de alguns
condição que você tem.

1655
01: 17: 12.630 -> 01: 17: 15.420
Tipo, eu sei muitas coisas,
você desenha com o clique do mouse,

1656
01: 17: 15,420 -> 01: 17: 18.850
se o mouse estiver ligado, então
você pode dizer que a caneta está abaixada.

1657
01: 17: 18.850 -> 01: 17: 21.720
E quando o clique do mouse
não está ligada, sua caneta está levantada.

1658
01: 17: 21,720 -> 01: 17: 24.330
E então, enquanto segue
para sempre também

1659
01: 17: 24,330 -> 01: 17: 26.700
sentidos para ver se o seu
clique do mouse está ligado ou desligado.

1660
01: 17: 26,700 -> 01: 17: 27.697
Eu realmente não sei.

1661
01: 17: 27.697 -> 01: 17: 29.280
DAVID J MALAN: Não, você realmente sabe.

1662
01: 17: 29.280 -> 01: 17: 30.450
Isso foi, tipo, perfeito.

1663
01: 17: 30.450 -> 01: 17: 32.820
Porque você pegou isso
princípio de ter o para sempre

1664
01: 17: 32.820 -> 01: 17: 35.580
bloquear não vá apenas para o mouse
ponteiro, mas você propôs

1665
01: 17: 35.580 -> 01: 17: 37.590
fazer uma pergunta por uma condição.

1666
01: 17: 37.590 -> 01: 17: 39.450
Então, deixe-me realmente ir
sob controle, onde

1667
01: 17: 39,450 -> 01: 17: 44.070
Acontece que eu sei que esta peça do quebra-cabeça é,
e observe semelhante à nossa lista telefônica

1668
01: 17: 44,070 -> 01: 17: 48.420
pseudocódigo, onde eu disse se
mais, se mais, se mais, bem,

1669
01: 17: 48,420 -> 01: 17: 52.340
aqui há apenas duas perguntas,
Eu acho, como você está propondo.

1670
01: 17: 52,340 -> 01: 17: 55.210
O botão do mouse está para baixo ou para cima?

1671
01: 17: 55,210 -> 01: 17: 57.700
Então, acho que podemos obter
afastado com apenas um if else.

1672
01: 17: 57.700 -> 01: 18: 01.200
Então, deixe-me ir em frente e arrastar isso
abaixo do ponteiro do mouse para ir para.

1673
01: 18: 01,200 -> 01: 18: 04.300
E então observe este pequeno
forma trapezoidal no meio

1674
01: 18: 04,300 -> 01: 18: 04.800
aqui.

1675
01: 18: 04,800 -> 01: 18: 07.570
Deixe-me ir para Sensing aqui.

1676
01: 18: 07.570 -> 01: 18: 09.990
E observe se eu rolar
para baixo - sim, aí está.

1677
01: 18: 09,990 -> 01: 18: 11.520
À esquerda, reparou neste?

1678
01: 18: 11,520 -> 01: 18: 13.200
Mouse para baixo, ponto de interrogação?

1679
01: 18: 13,200 -> 01: 18: 15.090
Estas são nossas expressões booleanas.

1680
01: 18: 15.090 -> 01: 18: 18.052
Deixe-me arrastar aquele booleano
expressão em uma forma semelhante.

1681
01: 18: 18,052 -> 01: 18: 19.260
Vai crescer para caber nele.

1682
01: 18: 19,260 -> 01: 18: 20.510
E então o que eu quero fazer?

1683
01: 18: 20.510 -> 01: 18: 24.020
Se o mouse estiver abaixado, eu acho
Eu quero largar a caneta.

1684
01: 18: 24,020 -> 01: 18: 28.950
Caso contrário, se o mouse estiver implicitamente para cima,
deixe-me ir em frente e colocar a caneta para cima

1685
01: 18: 28,950 -> 01: 18: 29.820
como isso.

1686
01: 18: 29,820 -> 01: 18: 31.290
Bem, deixe-me ir em frente e
tela cheia isso, apenas

1687
01: 18: 31,290 -> 01: 18: 32.540
para que possamos ver um pouco melhor.

1688
01: 18: 32.540 -> 01: 18: 33.450
Deixe-me clicar em Play.

1689
01: 18: 33.450 -> 01: 18: 35.820
E agora o gato é
me seguindo, como prometido.

1690
01: 18: 35.820 -> 01: 18: 37.230
Mas agora este é um gato que desenha.

1691
01: 18: 37,230 -> 01: 18: 44.470
Se eu clicar no botão do mouse, posso dizer
algo como, muito mal em cursiva,

1692
01: 18: 44,470 -> 01: 18: 45.580
Olá.

1693
01: 18: 45,580 -> 01: 18: 46.150
Tipo de.

1694
01: 18: 46,150 -> 01: 18: 47.920
Muito tempo desde
Eu fiz cursiva.

1695
01: 18: 47,920 -> 01: 18: 50.050
Então agora temos o gato
realmente desenhando algo.

1696
01: 18: 50,050 -> 01: 18: 52.270
E honestamente, é um pouco
ridículo que seja um desenho de gato.

1697
01: 18: 52,270 -> 01: 18: 53.050
Mas você sabe o que?

1698
01: 18: 53,050 -> 01: 18: 54.520
Scratch tem essas fantasias.

1699
01: 18: 54,520 -> 01: 18: 57.880
Poderíamos ir no canto superior esquerdo aqui, e
mesmo que Scratch venha com dois gatos

1700
01: 18: 57.880 -> 01: 19: 01.060
fantasias, poderíamos mudar para um
caneta ou marcador ou, realmente, qualquer coisa

1701
01: 19: 01,060 -> 01: 19: 01.710
nós queremos.

1702
01: 19: 01,710 -> 01: 19: 03.460
Porque no final de
o dia, essa fada

1703
01: 19: 03,460 -> 01: 19: 05.920
é realmente apenas um personagem
na tela que

1704
01: 19: 05,920 -> 01: 19: 08.662
pode assumir qualquer forma que desejarmos.

1705
01: 19: 08.662 -> 01: 19: 10.120
Bem, como podemos levar isso adiante?

1706
01: 19: 10,120 -> 01: 19: 13.060
Eu gosto desta introdução
de condições e loops,

1707
01: 19: 13,060 -> 01: 19: 15.620
mas há algum outro
princípios que podemos apresentar aqui.

1708
01: 19: 15,620 -> 01: 19: 19.330
Deixe-me ir em frente e começar um
novo programa aqui.

1709
01: 19: 19,330 -> 01: 19: 21.700
E vamos ver se nós
não consigo começar a contar

1710
01: 19: 21,700 -> 01: 19: 23.630
e comece a controlar as informações.

1711
01: 19: 23.630 -> 01: 19: 25.390
Então, por enquanto, vamos fazer isso.

1712
01: 19: 25,390 -> 01: 19: 29.033
Quando a bandeira verde é clicada,
desta vez, vamos nas variáveis

1713
01: 19: 29,033 -> 01: 19: 30.700
e vamos nos dar uma nova variável.

1714
01: 19: 30,700 -> 01: 19: 33.820
O Scratch permite que você crie quebra-cabeças
peças, sendo esta uma variável,

1715
01: 19: 33.820 -> 01: 19: 35.830
e vou chamar isso de contador.

1716
01: 19: 35.830 -> 01: 19: 38.650
Apenas algo que está acontecendo
para manter a contagem de um em diante.

1717
01: 19: 38,650 -> 01: 19: 42.160
Agora, isso me deu algum
peças de quebra-cabeça personalizadas aqui

1718
01: 19: 42,160 -> 01: 19: 45.280
chamado de contador, e então o padrão
minha variável, que já estava lá.

1719
01: 19: 45,280 -> 01: 19: 46.863
E vou prosseguir e fazer isso.

1720
01: 19: 46,863 -> 01: 19: 49.960
Vou acertar o contador
inicialmente igual a um.

1721
01: 19: 49,960 -> 01: 19: 51.790
E então eu vou
faça algo para sempre.

1722
01: 19: 51,790 -> 01: 19: 53.560
Deixe-me pegar um daqueles blocos eternos.

1723
01: 19: 53.560 -> 01: 19: 55.820
E eu quero o gato agora
para fazer isso para sempre.

1724
01: 19: 55,820 -> 01: 20: 00.160
Eu quero apenas dizer
qualquer que seja a contagem atual.

1725
01: 20: 00,160 -> 01: 20: 02.200
Então eu não quero dizer
olá por dois segundos.

1726
01: 20: 02.200 -> 01: 20: 05.620
Eu quero dizer algo
por um segundo, digamos.

1727
01: 20: 05,620 -> 01: 20: 07.880
Vou voltar às variáveis.

1728
01: 20: 07,880 -> 01: 20: 11.980
E eu vou pegar este novo
forma circular, contador, que eu criei

1729
01: 20: 11.980 -> 01: 20: 13.365
e arraste-o para lá.

1730
01: 20: 13,365 -> 01: 20: 15.240
Então você pode ler isso
literalmente de cima para baixo.

1731
01: 20: 15,240 -> 01: 20: 18.890
Tão contrário a um, então para sempre
diga o contador por um segundo.

1732
01: 20: 18.890 -> 01: 20: 22.990
Mas se não quisermos que o gato diga o
o mesmo número de novo e de novo e de novo,

1733
01: 20: 22,990 -> 01: 20: 26.260
vamos em frente e mudar
o contador por um.

1734
01: 20: 26,260 -> 01: 20: 29.080
E isso está implicitamente indo
para adicionar um ao balcão.

1735
01: 20: 29.080 -> 01: 20: 31.990
Agora se eu for em frente e
aperte o play, vemos um gato

1736
01: 20: 31,990 -> 01: 20: 34.338
isso está contando de
um a dois a três,

1737
01: 20: 34,338 -> 01: 20: 36.880
e vai aumentar,
idealmente, até o infinito.

1738
01: 20: 36.880 -> 01: 20: 39.010
A diferença é
agora, temos esse recurso

1739
01: 20: 39,010 -> 01: 20: 41.800
de realmente usar uma variável,
uma variável que está mantendo

1740
01: 20: 41,800 -> 01: 20: 44.290
controle de alguma quantidade de informação.

1741
01: 20: 44.290 -> 01: 20: 47.080
Neste caso, o número que é
sendo constantemente atualizado,

1742
01: 20: 47.080 -> 01: 20: 49.490
e a tela está sendo
redesenhado novamente e novamente.

1743
01: 20: 49.490 -> 01: 20: 51.490
Bem, agora deixe-me ir em frente
e comece a abrir

1744
01: 20: 51.490 -> 01: 20: 53.680
alguns programas que eu
escreveu com antecedência, apenas

1745
01: 20: 53.680 -> 01: 20: 55.480
para que possamos obter um
tour por alguns deles.

1746
01: 20: 55.480 -> 01: 20: 58.997
Eu tenho um programa chamado Bounce
que funciona um pouco mais ou menos assim.

1747
01: 20: 58,997 -> 01: 21: 00.580
E isso também faz parte da programação.

1748
01: 21: 00,580 -> 01: 21: 03.417
Não apenas escrevendo seu próprio código,
mas lendo seu próprio código.

1749
01: 21: 03,417 -> 01: 21: 06.250
E deixe-me ir em frente e ampliar
isso, que eu já criei,

1750
01: 21: 06,250 -> 01: 21: 08.170
e considere o que diz.

1751
01: 21: 08,170 -> 01: 21: 09.965
Primeiro conjunto, estilo de rotação, esquerda, direita.

1752
01: 21: 09,965 -> 01: 21: 13.090
Esta é apenas uma solução para o que seria de outra forma
ser um inseto onde o gato acidentalmente

1753
01: 21: 13.090 -> 01: 21: 14.110
acaba de cabeça para baixo.

1754
01: 21: 14,110 -> 01: 21: 15.662
Mas deixe-me acenar com a mão.

1755
01: 21: 15.662 -> 01: 21: 16.870
Essa é a parte interessante.

1756
01: 21: 16,870 -> 01: 21: 19.670
Faça com que o gato dê dez passos para sempre.

1757
01: 21: 19.670 -> 01: 21: 25.490
E então, se estiver tocando o
borda e, em seguida, gire 180 graus.

1758
01: 21: 25.490 -> 01: 21: 27.940
Agora podemos reintroduzir
a ideia de animação.

1759
01: 21: 27.940 -> 01: 21: 30.670
Mas não é impulsionado por mim,
o humano, com meu cursor.

1760
01: 21: 30.670 -> 01: 21: 35.890
Agora posso fazer um jogo, e
peça de arte interativa ou qualquer coisa

1761
01: 21: 35.890 -> 01: 21: 37.540
agora onde o gato é autodidata.

1762
01: 21: 37.540 -> 01: 21: 40.390
Porque quando eu clico em Play
agora, observe que é

1763
01: 21: 40,390 -> 01: 21: 42.620
movendo para frente e para trás, para frente e para trás.

1764
01: 21: 42.620 -> 01: 21: 45.250
E se for tocante
a borda e a resposta

1765
01: 21: 45,250 -> 01: 21: 50.740
a essa pergunta booleana é,
na verdade, sim ou verdadeiro ou um,

1766
01: 21: 50,740 -> 01: 21: 53.780
então ele vai girar 180 graus.

1767
01: 21: 53.780 -> 01: 21: 56.037
Mas isso parece gentil
de estúpido, é certo.

1768
01: 21: 56,037 -> 01: 21: 58.370
Você sabe, um, o gato, sim,
está saltando para fora da tela,

1769
01: 21: 58,370 -> 01: 21: 59.530
o que talvez seja um pouco irreal.

1770
01: 21: 59.530 -> 01: 22: 01.030
Mas ele não está realmente andando.

1771
01: 22: 01,030 -> 01: 22: 02.360
Ele está planando.

1772
01: 22: 02,360 -> 01: 22: 04.150
Mas essa é a coisa da animação.

1773
01: 22: 04,150 -> 01: 22: 07.120
Assim como observamos antes
vídeos, no final do dia,

1774
01: 22: 07,120 -> 01: 22: 10.857
são realmente apenas imagens
voando pela tela -

1775
01: 22: 10.857 -> 01: 22: 11.440
Você sabe o que?

1776
01: 22: 11,440 -> 01: 22: 15.220
Aposto que podemos criar nossa própria ilusão
de movimento, assim como em um vídeo real,

1777
01: 22: 15,220 -> 01: 22: 18.850
levando não apenas uma fantasia,
o gato com os pés assim.

1778
01: 22: 18,850 -> 01: 22: 22.630
E se nos dermos um segundo
traje, onde é quase o mesmo

1779
01: 22: 22,630 -> 01: 22: 24.760
mas seus pés são ligeiramente
posicionado de forma diferente?

1780
01: 22: 24,760 -> 01: 22: 27.970
Assim como o flipbook em papel
que vimos anteriormente.

1781
01: 22: 27,970 -> 01: 22: 28.720
E sabe de uma coisa?

1782
01: 22: 28,720 -> 01: 22: 32.440
Aposto que se alternar entre
essas duas fantasias,

1783
01: 22: 32.440 -> 01: 22: 34.930
mudando a condição de
o gato de novo e de novo,

1784
01: 22: 34,930 -> 01: 22: 38.360
Aposto que podemos criar o
ilusão de movimento real.

1785
01: 22: 38,360 -> 01: 22: 41.080
E é isso que temos aqui
neste outro exemplo de salto.

1786
01: 22: 41,080 -> 01: 22: 44.530
Neste outro exemplo de salto,
nós temos o gato agora se movendo

1787
01: 22: 44.530 -> 01: 22: 48.010
não apenas para frente e para trás, mas
observe esta peça roxa do quebra-cabeça.

1788
01: 22: 48,010 -> 01: 22: 52.210
Depois que ele bate na borda, ou
considera pular na borda,

1789
01: 22: 52,210 -> 01: 22: 55.630
ele muda constantemente de roupa
para o próximo, para o próximo,

1790
01: 22: 55.630 -> 01: 22: 58.670
para o próximo, essencialmente
alternando entre os dois.

1791
01: 22: 58.670 -> 01: 23: 01.000
Portanto, agora não é totalmente perfeito.

1792
01: 23: 01.000 -> 01: 23: 02.920
Tipo, tem o que nós
chamada de taxa de quadros muito baixa.

1793
01: 23: 02,920 -> 01: 23: 05.530
É como assistir a um
GIF animado muito ruim online

1794
01: 23: 05.530 -> 01: 23: 08.680
que só tem dois
quadros diferentes nele.

1795
01: 23: 08,680 -> 01: 23: 11.230
Mas parece mais com
ele está caminhando e muito menos

1796
01: 23: 11,230 -> 01: 23: 14.470
como se ele estivesse planando de volta
e adiante na tela.

1797
01: 23: 14,470 -> 01: 23: 16.510
Então, podemos realmente ter
um pouco de diversão com isso também.

1798
01: 23: 16.510 -> 01: 23: 18.112
Sons de suporte do Scratch.

1799
01: 23: 18,112 -> 01: 23: 20.320
Então, por exemplo, aqui está
o miado que ouvimos antes.

1800
01: 23: 20,320 -> 01: 23: 21.160
[MIAU]

1801
01: 23: 21,160 -> 01: 23: 24.910
Posso gravar o meu próprio, no entanto, se eu
clique neste pequeno ícone de mais aqui.

1802
01: 23: 24,910 -> 01: 23: 28.060
Clique em Gravar e permita o Scratch
para acessar meu microfone.

1803
01: 23: 28,060 -> 01: 23: 29.690
Clique em OK algumas vezes.

1804
01: 23: 29.690 -> 01: 23: 30.190
Aqui vamos nós.

1805
01: 23: 30,190 -> 01: 23: 32.140
Deixe-me gravar minha própria voz.

1806
01: 23: 32,140 -> 01: 23: 33.140
Ai.

1807
01: 23: 33,140 -> 01: 23: 33.640
Tudo bem.

1808
01: 23: 33.640 -> 01: 23: 36.432
Isso é o que a palavra Ouch parece
tipo, pelo menos quando eu pronuncio.

1809
01: 23: 36,432 -> 01: 23: 38.620
Posso cortar o início aqui.

1810
01: 23: 38,620 -> 01: 23: 39.760
Deixe-me salvar isso.

1811
01: 23: 39,760 -> 01: 23: 42.000
Eu vou dar isso
gravando um nome, Ouch,

1812
01: 23: 42.000 -> 01: 23: 43.952
e agora deixe-me voltar ao meu código.

1813
01: 23: 43.952 -> 01: 23: 45.660
E sob o som
bloco sabe o que mais?

1814
01: 23: 45,660 -> 01: 23: 48.540
Deixe-me ir em frente e dizer isso.

1815
01: 23: 48.540 -> 01: 23: 52.330
Se estou tocando a borda, não só
eu quero virar 180 graus.

1816
01: 23: 52,330 -> 01: 23: 56.470
Agora posso meio que fazer
isso um pouco mais lúdico.

1817
01: 23: 56.470 -> 01: 23: 57.790
COMPUTADOR: Ouch.

1818
01: 23: 57.790 -> 01: 23: 59.080
Ai.

1819
01: 23: 59,080 -> 01: 23: 59.590
Ai.

1820
01: 23: 59.590 -> 01: 23: 59.860
DAVID J MALAN: Tudo bem.

1821
01: 23: 59,860 -> 01: 24: 02.693
Ainda não é muito felino, mas, novamente,
estamos apenas camadas e camadas.

1822
01: 24: 02,693 -> 01: 24: 05.655
E a lição aqui
realmente é, pois esses programas

1823
01: 24: 05,655 -> 01: 24: 08.780
fica cada vez mais complicado, o objetivo
nunca deve ser, ao escrever o código,

1824
01: 24: 08,780 -> 01: 24: 10.540
seja no Scratch
ou C ou eventualmente

1825
01: 24: 10.540 -> 01: 24: 13.210
Python nesta classe ou
outros, para apenas começar e tentar

1826
01: 24: 13,210 -> 01: 24: 14.920
para implementar toda a sua visão.

1827
01: 24: 14,920 -> 01: 24: 17.920
Observe com cada um destes
programas que escrevi do zero,

1828
01: 24: 17,920 -> 01: 24: 22.180
sem trocadilhos, comecei pequeno
e adicione um ou dois ou três quebra-cabeças

1829
01: 24: 22,180 -> 01: 24: 25.810
peças, construindo a partir de algo
simples para algo mais complexo.

1830
01: 24: 25,810 -> 01: 24: 26.560
E sabe de uma coisa?

1831
01: 24: 26.560 -> 01: 24: 30.130
Aposto que se sintetizarmos alguns desses
ideias, podemos fazer ainda outras coisas.

1832
01: 24: 30,130 -> 01: 24: 33.370
Aqui está outro exemplo que
envolve, talvez, acariciar um gato.

1833
01: 24: 33.370 -> 01: 24: 35.380
Deixe-me ir em frente e ver
dentro deste programa.

1834
01: 24: 35,380 -> 01: 24: 40.090
Este é relativamente simples, mas
ainda não está fazendo nada.

1835
01: 24: 40.090 -> 01: 24: 41.710
Já acertei a bandeira verde.

1836
01: 24: 41.710 -> 01: 24: 45.190
Deixe-me ampliar o código e você
pode, talvez, agora ler meu próprio código

1837
01: 24: 45,190 -> 01: 24: 46.660
que escrevi com antecedência.

1838
01: 24: 46.660 -> 01: 24: 50.650
O gato está sempre fazendo a pergunta,
se tocar o ponteiro do mouse,

1839
01: 24: 50.650 -> 01: 24: 52.650
toque aquele som miau até terminar.

1840
01: 24: 52.650 -> 01: 24: 55.150
Bem, parece que mesmo
embora o programa esteja em execução,

1841
01: 24: 55,150 -> 01: 24: 56.350
não está fazendo nada.

1842
01: 24: 56,350 -> 01: 24: 56.980
Mas isso é.

1843
01: 24: 56.980 -> 01: 24: 59.060
Está esperando que algo aconteça.

1844
01: 24: 59.060 -> 01: 25: 01.780
Então, deixe-me mover meu cursor
sobre o gato como -

1845
01: 25: 01,780 -> 01: 25: 03.160
[MIAU]

1846
01: 25: 03,160 -> 01: 25: 04.080
--esta.

1847
01: 25: 04,080 -> 01: 25: 05.920
[MIAU]

1848
01: 25: 05,920 -> 01: 25: 08.890
Assim parece, e se eu sair
aí, ele vai continuar miando.

1849
01: 25: 08.890 -> 01: 25: 11.590
E é como um
programa que está acariciando um gato.

1850
01: 25: 11.590 -> 01: 25: 13.660
E então você pode imaginar
agora tendo condições

1851
01: 25: 13.660 -> 01: 25: 16.270
dentro de loops que estão usando
Expressões booleanas para decidir

1852
01: 25: 16,270 -> 01: 25: 18.550
exatamente o que você quer que algo faça.

1853
01: 25: 18.550 -> 01: 25: 22.460
E ainda mais poderoso, mesmo em um
linguagem como Scratch podemos fazer isso.

1854
01: 25: 22.460 -> 01: 25: 26.530
Deixe-me abrir o leão-marinho aqui,
que tem uma casca bem distinta.

1855
01: 25: 26.530 -> 01: 25: 30.280
Mas ele é demonstrativo agora de um
programa que possui vários scripts.

1856
01: 25: 30.280 -> 01: 25: 33.730
Então, dentro deste projeto Scratch agora,
não somos apenas um programa, mas dois.

1857
01: 25: 33.730 -> 01: 25: 36.682
Observe que ambos começam
quando uma bandeira verde é clicada.

1858
01: 25: 36.682 -> 01: 25: 38.390
E deixe-me colocá-los
ambos na tela.

1859
01: 25: 38,390 -> 01: 25: 39.290
E parece mais longo.

1860
01: 25: 39,290 -> 01: 25: 41.930
Mas isso é só porque o quebra-cabeça
as peças estão crescendo para se encaixar umas nas outras.

1861
01: 25: 41,930 -> 01: 25: 43.360
Vamos prosseguir e clicar em Play.

1862
01: 25: 43.360 -> 01: 25: 43.860
Toque

1863
01: 25: 43,860 -> 01: 25: 47.040
[CASCA DE LEÃO DO MAR]

1864
01: 25: 47,040 -> 01: 25: 51.420
Observe que a cada segundo ou
então, o leão-marinho está latindo.

1865
01: 25: 51.420 -> 01: 25: 53.490
E, francamente, isso fica irritante rapidamente.

1866
01: 25: 53.490 -> 01: 25: 54.840
Mas como posso impedir isso?

1867
01: 25: 54.840 -> 01: 25: 58.230
Bem, deixe-me ir em frente e olhar aqui
à esquerda enquanto ainda está latindo.

1868
01: 25: 58,230 -> 01: 26: 01.830
Observe que o leão-marinho é
sempre fazendo uma pergunta.

1869
01: 26: 01,830 -> 01: 26: 07.090
Se mudo é igual a falso, começa soa mar
leão, pense oi, oi, oi por dois segundos.

1870
01: 26: 07.090 -> 01: 26: 07.980
Então, o que está mudo?

1871
01: 26: 07,980 -> 01: 26: 09.780
Bem, a forma de
isso, lembre-se, representa

1872
01: 26: 09,780 -> 01: 26: 13.870
uma variável, como x ou y ou z, que é
apenas uma forma de reter informações.

1873
01: 26: 13.870 -> 01: 26: 17.880
Então, isso é como dizer, é o
valor da variável silenciada falso?

1874
01: 26: 17,880 -> 01: 26: 22.590
Se sim, você deve latir, porque se
é falso silenciado, se não for silenciado,

1875
01: 26: 22.590 -> 01: 26: 24.480
vá em frente e toque o som do leão-marinho.

1876
01: 26: 24.480 -> 01: 26: 27.900
Mas meu Deus, vamos - à direita
aqui, observe que há outro programa.

1877
01: 26: 27,900 -> 01: 26: 31.050
Quando a bandeira verde é clicada,
sempre faça a pergunta.

1878
01: 26: 31,050 -> 01: 26: 34.980
Se a barra de espaço for pressionada,
então se mudo for verdadeiro,

1879
01: 26: 34,980 -> 01: 26: 38.560
definir mudo para falso,
senão definido mudo como verdadeiro.

1880
01: 26: 38,560 -> 01: 26: 42.240
Então, o programa à direita é
vai mudar o valor de mudo

1881
01: 26: 42,240 -> 01: 26: 44.270
de falso para verdadeiro ou verdadeiro para falso.

1882
01: 26: 44.270 -> 01: 26: 45.780
Porque, meu deus.

1883
01: 26: 45,780 -> 01: 26: 47.325
Eu apertei a barra de espaço -

1884
01: 26: 47,325 -> 01: 26: 48.540
[CASCA DE LEÃO DO MAR]

1885
01: 26: 48.540 -> 01: 26: 52.160
E agora acabou.

1886
01: 26: 52,160 -> 01: 26: 54.380
O programa ainda é
correndo, mas não é mais

1887
01: 26: 54,380 -> 01: 26: 58.397
jogando porque mudo é
agora verdadeiro e não falso.

1888
01: 26: 58,397 -> 01: 26: 59.480
Bem, o que mais podemos fazer?

1889
01: 26: 59.480 -> 01: 27: 01.640
As coisas podem ficar bonitas
extravagante muito rapidamente.

1890
01: 27: 01,640 -> 01: 27: 04.220
Deixe-me ir em frente e criar
um outro programa aqui.

1891
01: 27: 04,220 -> 01: 27: 06.770
E eu irei em frente e farei
um com apenas dois blocos.

1892
01: 27: 06,770 -> 01: 27: 10.820
Este - deixe-me ir para as extensões
novamente, com detecção de vídeo desta vez,

1893
01: 27: 10.820 -> 01: 27: 13.940
e observe que há diferentes
tipos de maneiras de iniciar programas.

1894
01: 27: 13.940 -> 01: 27: 17.060
Nem todo programa precisa começar
quando você clica na bandeira verde.

1895
01: 27: 17,060 -> 01: 27: 19.490
Há uma forma semelhante aqui,
mas este em verde, aquele

1896
01: 27: 19.490 -> 01: 27: 21.290
diz quando o movimento do vídeo
é maior que 10.

1897
01: 27: 21,290 -> 01: 27: 23.030
Como se 10% da tela estivesse se movendo.

1898
01: 27: 23.030 -> 01: 27: 25.010
Deixe-me aumentar isso para 50%.

1899
01: 27: 25,010 -> 01: 27: 26.810
E deixe-me ir em frente e fazer isso.

1900
01: 27: 26.810 -> 01: 27: 30.050
Deixe-me ir em frente e encontrar
a peça do quebra-cabeça de som.

1901
01: 27: 30.050 -> 01: 27: 31.850
Toque miau de som até terminar.

1902
01: 27: 31.850 -> 01: 27: 34.520
Portanto, agora tenho um programa de dois blocos.

1903
01: 27: 34,520 -> 01: 27: 38.780
Quando o movimento do vídeo é mais do que
50, toque miau de som até terminar.

1904
01: 27: 38,780 -> 01: 27: 39.488
Deixe-me diminuir o zoom.

1905
01: 27: 39.488 -> 01: 27: 41.780
E você notará que estou
realmente na tela aqui.

1906
01: 27: 41,780 -> 01: 27: 43.640
Deixe-me sair do palco.

1907
01: 27: 43,640 -> 01: 27: 47.040
E agora nada está acontecendo.

1908
01: 27: 47.040 -> 01: 27: 49.055
Deixe-me ir acariciar o gato, no entanto.

1909
01: 27: 49,055 -> 01: 27: 51.180
[MIAU]

1910
01: 27: 51,180 -> 01: 27: 52.385
Deixe-me fazer de novo.

1911
01: 27: 52,385 -> 01: 27: 53.570
[MIAU]

1912
01: 27: 53.570 -> 01: 27: 54.300
E de novo.

1913
01: 27: 54,300 -> 01: 27: 55.970
Então, ele está usando a câmera do meu computador -

1914
01: 27: 55.970 -> 01: 27: 56.510
[MIAU]

1915
01: 27: 56.510 -> 01: 28: 00.408
- detectando movimento, e então
executando aquele programa específico.

1916
01: 28: 00,408 -> 01: 28: 02.450
Então, novamente, apenas com estes
blocos de construção simples,

1917
01: 28: 02.450 -> 01: 28: 04.880
podemos obter mais e mais
coisas interessantes para acontecer.

1918
01: 28: 04,880 -> 01: 28: 05.630
E sabe de uma coisa?

1919
01: 28: 05,630 -> 01: 28: 07.310
Podemos até ter vários sprites.

1920
01: 28: 07,310 -> 01: 28: 09.410
Deixe-me ir em frente e abrir
um jogo da velha escola

1921
01: 28: 09.410 -> 01: 28: 11.270
que você pode ter jogado,
tipo, uma piscina, talvez,

1922
01: 28: 11.270 -> 01: 28: 14.330
crescendo, onde uma pessoa grita
fora Marco e as outras pessoas

1923
01: 28: 14.330 -> 01: 28: 16.100
deveriam gritar Polo.

1924
01: 28: 16,100 -> 01: 28: 19.010
Observe aqui que temos um
programa com dois sprites.

1925
01: 28: 19,010 -> 01: 28: 21.680
Então, dois bonecos, uma laranja
fantoche e um fantoche azul.

1926
01: 28: 21,680 -> 01: 28: 24.390
E aqui embaixo,
pela primeira vez,

1927
01: 28: 24,390 -> 01: 28: 27.440
Temos dois sprites diferentes '
habilidades para escrever programas.

1928
01: 28: 27,440 -> 01: 28: 29.610
Então agora a laranja
fantoche é selecionado,

1929
01: 28: 29.610 -> 01: 28: 31.670
o que significa o programa
no canto superior esquerdo aqui,

1930
01: 28: 31.670 -> 01: 28: 34.072
aqui em cima, pertence ao fantoche laranja.

1931
01: 28: 34,072 -> 01: 28: 35.780
E a marionete laranja
foi programado

1932
01: 28: 35,780 -> 01: 28: 39.440
para dizer para sempre, se o
a tecla de espaço do teclado é pressionada,

1933
01: 28: 39,440 -> 01: 28: 41.240
então diga Marco por dois segundos.

1934
01: 28: 41,240 -> 01: 28: 42.650
E então aqui está o novo recurso.

1935
01: 28: 42.650 -> 01: 28: 46.040
Existe uma maneira de programar
ter, tipo, uma palestra de programa

1936
01: 28: 46,040 -> 01: 28: 49.070
para outro, ou neste caso,
um sprite fala com outro.

1937
01: 28: 49,070 -> 01: 28: 52.440
Meio que passando uma mensagem secreta
que você não vê na tela.

1938
01: 28: 52.440 -> 01: 28: 54.410
Mas um programa pode ouvir de outro.

1939
01: 28: 54.410 -> 01: 28: 56.540
E isso é chamado de transmissão de um evento.

1940
01: 28: 56.540 -> 01: 28: 58.430
E é isso que
boneco laranja está fazendo.

1941
01: 28: 58,430 -> 01: 29: 00.627
Se eu clicar no azul
ícone do fantoche aqui,

1942
01: 29: 00,627 -> 01: 29: 02.210
ele não vai fazer muita coisa.

1943
01: 29: 02,210 -> 01: 29: 05.010
Mas ao invés de fazer qualquer coisa
quando a bandeira verde é clicada,

1944
01: 29: 05,010 -> 01: 29: 07.700
ao invés de fazer algo
quando a câmera vê movimento,

1945
01: 29: 07,700 -> 01: 29: 14.090
em vez disso, ele vai, quando receber
o evento, diga Polo por dois segundos.

1946
01: 29: 14.090 -> 01: 29: 17.690
E então, neste caso, se eu acertar
Jogue agora, nada acontece ainda.

1947
01: 29: 17.690 -> 01: 29: 23.300
Mas quando eu pressiono a barra de espaço,
laranja diz Marco, azul diz Polo.

1948
01: 29: 23,300 -> 01: 29: 25.550
Mas eles são escritos de forma independente.

1949
01: 29: 25.550 -> 01: 29: 28.250
Eu escrevi um programa para
laranja, um programa para azul,

1950
01: 29: 28,250 -> 01: 29: 30.440
e eles estão se comunicando de alguma forma.

1951
01: 29: 30.440 -> 01: 29: 32.540
E por falar em
comunicando, há até

1952
01: 29: 32.540 -> 01: 29: 36.230
mais coisas que você pode fazer hoje em dia
graças à internet e à nuvem.

1953
01: 29: 36,230 -> 01: 29: 40.130
Deixe-me ir em frente e abrir
uma outra nova tela aqui.

1954
01: 29: 40,130 -> 01: 29: 42.710
Muito rapidamente me entrego
a quando a bandeira verde foi clicada.

1955
01: 29: 42,710 -> 01: 29: 45.950
Deixe-me ir em frente e perguntar o mesmo
pergunta antes, pergunte qual é o seu nome

1956
01: 29: 45,950 -> 01: 29: 46.490
e espere.

1957
01: 29: 46.490 -> 01: 29: 48.710
Mas agora deixe-me entrar
essas extensões e deixe

1958
01: 29: 48,710 -> 01: 29: 50.990
eu encontre o tradutor
extensão, que é, novamente,

1959
01: 29: 50,990 -> 01: 29: 54.620
vou usar a nuvem para enviar
tudo o que eu digito na internet

1960
01: 29: 54,620 -> 01: 29: 57.840
e receba uma resposta, e
em seguida, diga na tela aqui.

1961
01: 29: 57.840 -> 01: 30: 01.680
Então deixe-me ir em frente e dizer algo
na tela, como dizer olá.

1962
01: 30: 01,680 -> 01: 30: 02.930
Mas não quero dizer olá.

1963
01: 30: 02,930 -> 01: 30: 05.360
Eu quero voltar para
a categoria Traduzir,

1964
01: 30: 05,360 -> 01: 30: 07.357
e eu quero ir em frente e traduzir -

1965
01: 30: 07.357 -> 01: 30: 07.940
Você sabe o que?

1966
01: 30: 07.940 -> 01: 30: 08.780
Gosto deste bloco.

1967
01: 30: 08,780 -> 01: 30: 11.250
Traduza algo para outro idioma.

1968
01: 30: 11.250 -> 01: 30: 14.390
Mas deixe-me pegar um desses
bloqueia novamente, e deixe-me ir em frente

1969
01: 30: 14.390 -> 01: 30: 19.200
e junte a palavra olá e depois o
nome que a pessoa digitou.

1970
01: 30: 19.200 -> 01: 30: 21.690
Então, para conseguir isso, eu preciso
o bloco de resposta novamente.

1971
01: 30: 21.690 -> 01: 30: 24.480
Então, estou apenas recriando alguns
de nossos blocos de antes.

1972
01: 30: 24.480 -> 01: 30: 26.780
E observe, antes de eu fazer isso.

1973
01: 30: 26.780 -> 01: 30: 31.400
Eu disse o resultado de me juntar oi e
responder, embora com uma vírgula da última vez.

1974
01: 30: 31.400 -> 01: 30: 32.880
Mas agora vamos fazer isso.

1975
01: 30: 32.880 -> 01: 30: 37.370
Deixe-me pegar a saída de junção,
torná-lo a entrada a ser traduzida.

1976
01: 30: 37.370 -> 01: 30: 39.590
Deixe-me traduzir, digamos, para o árabe aqui.

1977
01: 30: 39.590 -> 01: 30: 41.700
Deixe-me arrastar e soltar no bloco de palavras.

1978
01: 30: 41.700 -> 01: 30: 46.100
Portanto, agora temos duas entradas indo
em join, saída de join indo

1979
01: 30: 46,100 -> 01: 30: 50.570
na entrada de traduzir, e o
saída de traduzir indo para dizer.

1980
01: 30: 50.570 -> 01: 30: 55.400
Mas o resultado líquido será
digite meu nome David e pressione Enter.

1981
01: 30: 55.400 -> 01: 30: 57.560
Olá, David, agora em árabe.

1982
01: 30: 57.560 -> 01: 31: 00.920
Tudo graças a estes princípios de
funções, condições e loops,

1983
01: 31: 00,920 -> 01: 31: 03.770
e agora até adicionando na internet.

1984
01: 31: 03,770 -> 01: 31: 07.190
Agora vamos considerar finalmente, antes
jogamos alguns jogos finais.

1985
01: 31: 07,190 -> 01: 31: 10.340
Em conclusão, há
uma maneira de melhorar ainda

1986
01: 31: 10,340 -> 01: 31: 12.270
o design de muito do que fizemos.

1987
01: 31: 12,270 -> 01: 31: 16.610
Na verdade, deixe-me voltar apenas um momento
para onde paramos com aquele miado.

1988
01: 31: 16.610 -> 01: 31: 19.370
E em um de nossos
exemplos miando, nós tivemos

1989
01: 31: 19,370 -> 01: 31: 22.490
código parecido com este,
onde eu repeti três vezes,

1990
01: 31: 22.490 -> 01: 31: 26.720
lembre-se, e toquei o som
miau de novo e de novo e de novo.

1991
01: 31: 26,720 -> 01: 31: 29.070
E eu argumentei na época que
isso foi melhor projetado.

1992
01: 31: 29.070 -> 01: 31: 29.570
Porque?

1993
01: 31: 29.570 -> 01: 31: 32.370
Porque eu não apenas arrastei e
solte a mesma peça do quebra-cabeça novamente

1994
01: 31: 32,370 -> 01: 31: 33.260
e novamente e novamente.

1995
01: 31: 33,260 -> 01: 31: 36.560
Usei um bloco de repetição, joguei
afastando toda a redundância,

1996
01: 31: 36.560 -> 01: 31: 38.150
e, sem dúvida, mantive-o simples.

1997
01: 31: 38,150 -> 01: 31: 40.790
Estou usando algumas ideias mais extravagantes,
mas o código é mais simples

1998
01: 31: 40,790 -> 01: 31: 42.860
e agora tem menos peças do quebra-cabeça.

1999
01: 31: 42,860 -> 01: 31: 45.140
Mas acontece que
há uma oportunidade perdida

2000
01: 31: 45,140 -> 01: 31: 47.840
aqui para aplicar outro
princípio da ciência da computação,

2001
01: 31: 47,840 -> 01: 31: 50.750
e isso é o que nós
geralmente descrito como abstração.

2002
01: 31: 50,750 -> 01: 31: 53.300
Abstração é isso
incrível resolução de problemas

2003
01: 31: 53,300 -> 01: 31: 55.460
técnica que é realmente
apenas uma maneira elegante de dizer

2004
01: 31: 55.460 -> 01: 31: 59.150
vamos pegar uma ideia muito complicada,
ou uma ideia um pouco complicada

2005
01: 31: 59,150 -> 01: 32: 04.670
e simplificá-lo de tal forma que nós
todos concordam que você pode implementá-lo

2006
01: 32: 04,670 -> 01: 32: 10.040
o jeito complicado, mas
vamos agora apenas estipular

2007
01: 32: 10,040 -> 01: 32: 14.430
que vamos pensar sobre
como em um nível mais simples.

2008
01: 32: 14,430 -> 01: 32: 17.510
Então, deixe-me passar para o mesmo programa.

2009
01: 32: 17.510 -> 01: 32: 18.260
E sabe de uma coisa?

2010
01: 32: 18,260 -> 01: 32: 22.250
Scratch, curiosamente, não
antecipar ter um bloqueio de miau.

2011
01: 32: 22,250 -> 01: 32: 27.350
Tipo, há um bloco de dizer e há um
pense bloco, mas não há bloqueio de miau.

2012
01: 32: 27,350 -> 01: 32: 31.100
E isso parece apropriado para um programa
onde vem com um gato embutido.

2013
01: 32: 31,100 -> 01: 32: 32.030
Então, podemos fazer isso.

2014
01: 32: 32,030 -> 01: 32: 35.340
Assim como você pode criar o seu próprio
variáveis, observe no canto inferior esquerdo aqui,

2015
01: 32: 35,340 -> 01: 32: 38.610
você pode criar seus próprios blocos
com esta categoria rosa.

2016
01: 32: 38.610 -> 01: 32: 40.430
E se eu for aqui, eu estou
vai fazer um bloco

2017
01: 32: 40.430 -> 01: 32: 42.440
e vou chamar isso de miau de bloqueio.

2018
01: 32: 42,440 -> 01: 32: 45.840
E simplesmente clicarei em OK.

2019
01: 32: 45,840 -> 01: 32: 49.160
Agora observe que recebo este novo quebra-cabeça
peça que diz definir miau.

2020
01: 32: 49,160 -> 01: 32: 51.590
E está pronto para ter outro
peças conectadas a ele.

2021
01: 32: 51.590 -> 01: 32: 53.130
Como vou definir meow?

2022
01: 32: 53,130 -> 01: 32: 56.005
Vou apenas prosseguir e arrastar
isso aqui, porque eu já

2023
01: 32: 56,005 -> 01: 32: 57.200
implementado miau antes.

2024
01: 32: 57,200 -> 01: 32: 59.960
E agora, observe o que eu
tem no lado esquerdo.

2025
01: 32: 59,960 -> 01: 33: 03.230
Porque eu acabei de fazer isso
bloco personalizado ou peça do quebra-cabeça,

2026
01: 33: 03,230 -> 01: 33: 07.370
Agora tenho uma peça rosa chamada miau,
como se tivesse vindo com o Scratch.

2027
01: 33: 07,370 -> 01: 33: 10.640
E agora o que é atraente sobre
isso é que eu posso meio que pensar

2028
01: 33: 10.640 -> 01: 33: 12.350
disso, fora da vista, longe da mente.

2029
01: 33: 12,350 -> 01: 33: 14.190
Quem se importa como o miau é implementado?

2030
01: 33: 14,190 -> 01: 33: 16.040
Sabemos que o implementamos antes.

2031
01: 33: 16,040 -> 01: 33: 19.380
Vamos agora apenas estipular que nós
pode assumir que existe.

2032
01: 33: 19,380 -> 01: 33: 23.210
E se eu ampliar agora no novo programa,
agora é mais legível em certo sentido.

2033
01: 33: 23,210 -> 01: 33: 24.290
É um pouco mais curto.

2034
01: 33: 24,290 -> 01: 33: 26.060
Tem menos peças do puzzle.

2035
01: 33: 26,060 -> 01: 33: 29.210
Mas também é mais autodescritivo.

2036
01: 33: 29,210 -> 01: 33: 30.202
Eu posso ler meu código.

2037
01: 33: 30,202 -> 01: 33: 31.910
Eu posso olhar isso
código e diga, OK, é

2038
01: 33: 31,910 -> 01: 33: 34.850
obviamente vou repetir
três vezes um bloco de miau.

2039
01: 33: 34,850 -> 01: 33: 36.310
Mas vamos jogar isso.

2040
01: 33: 36,310 -> 01: 33: 36.810
[MIAU]

2041
01: 33: 36.810 -> 01: 33: 38.460
Não é diferente.

2042
01: 33: 38,460 -> 01: 33: 38.960
[MIAU]

2043
01: 33: 38,960 -> 01: 33: 40.384
Dois.

2044
01: 33: 40,384 -> 01: 33: 41.330
[MIAU]

2045
01: 33: 41,330 -> 01: 33: 44.240
Mas aposto que podemos simplificar
este um passo adiante e faça

2046
01: 33: 44,240 -> 01: 33: 45.650
é um pouco mais flexível.

2047
01: 33: 45,650 -> 01: 33: 49.520
Deixe-me ir em frente e clicar com o botão direito ou
clique de controle no bloco personalizado miau.

2048
01: 33: 49,520 -> 01: 33: 53.270
E deixe-me adicionar um
entrada aqui que chamaremos de n.

2049
01: 33: 53,270 -> 01: 33: 55.850
E deixe-me adicionar um
etiqueta que diz vezes.

2050
01: 33: 55,850 -> 01: 33: 57.510
E deixe-me prosseguir e clicar em OK.

2051
01: 33: 57.510 -> 01: 33: 59.677
E note que meu quebra-cabeça
peça agora parece diferente.

2052
01: 33: 59,677 -> 01: 34: 02.060
Parece mais com algum de
Blocos do MIT que recebem entrada

2053
01: 34: 02,060 -> 01: 34: 03.390
com essas pequenas ovais brancas.

2054
01: 34: 03,390 -> 01: 34: 06.350
E, de fato, agora observe o que posso fazer.

2055
01: 34: 06,350 -> 01: 34: 11.330
Eu posso mudar a definição de
miau, como o Scratch já fez para mim,

2056
01: 34: 11,330 -> 01: 34: 13.560
de modo que agora posso fazer mais por dentro.

2057
01: 34: 13,560 -> 01: 34: 15.930
Deixe-me realmente desconectar
todas essas coisas.

2058
01: 34: 15.930 -> 01: 34: 20.040
Deixe-me mover o bloco de repetição para
a definição de miau em si.

2059
01: 34: 20,040 -> 01: 34: 23.450
Deixe-me ir em frente e tocar o som
e espere dentro desse bloco de repetição,

2060
01: 34: 23.450 -> 01: 34: 26.120
mas note isso pouco
círculo em torno do final.

2061
01: 34: 26,120 -> 01: 34: 29.270
Deixe-me repetir um
número arbitrário de vezes agora.

2062
01: 34: 29.270 -> 01: 34: 32.430
Eu não tenho que me preocupar muito
codificação de três ou 10 ou qualquer outra coisa.

2063
01: 34: 32,430 -> 01: 34: 36.500
E agora, longe da vista, longe da mente,
não precisa mais se preocupar com isso.

2064
01: 34: 36,500 -> 01: 34: 40.550
Vamos agora apenas reduzir isso
programa cada vez mais complicado

2065
01: 34: 40,550 -> 01: 34: 43.730
que escrevemos anteriormente,
na verdade, apenas duas peças do quebra-cabeça.

2066
01: 34: 43.730 -> 01: 34: 47.520
Quando a bandeira verde é clicada,
miau, claro, três vezes.

2067
01: 34: 47,520 -> 01: 34: 50.720
Eu não tenho que saber ou me importar com nada
mais como o miau é implementado.

2068
01: 34: 50,720 -> 01: 34: 54.590
Eu só preciso saber que alguém
fez por mim, seja no MIT ou talvez

2069
01: 34: 54,590 -> 01: 34: 56.360
eu mesmo, minutos atrás.

2070
01: 34: 56,360 -> 01: 34: 57.835
Vou clicar em play novamente.

2071
01: 34: 57.835 -> 01: 34: 59.655
[MEOWING TRÊS VEZES]

2072
01: 34: 59,655 -> 01: 35: 03.040
Dois e três.

2073
01: 35: 03,040 -> 01: 35: 05.920
E agora temos um
implementação de abstração.

2074
01: 35: 05,920 -> 01: 35: 09.190
Tomando um pouco complicado
ideia, como fazer um gato miar,

2075
01: 35: 09,190 -> 01: 35: 11.680
não se preocupando com o assim chamado
detalhes de implementação,

2076
01: 35: 11.680 -> 01: 35: 15.160
e apenas definindo um quebra-cabeça
peça ou função chamada miau.

2077
01: 35: 15,160 -> 01: 35: 17.380
Bem, agora vamos pegar
tudo isso junto

2078
01: 35: 17.380 -> 01: 35: 21.910
e ver algumas das criações de alguns
de seus predecessores em termos anteriores.

2079
01: 35: 21,910 -> 01: 35: 26.230
Aqui, por exemplo, é uma espécie de história
aquele de seus colegas de classe anos atrás

2080
01: 35: 26,230 -> 01: 35: 28.713
feito envolvendo um conto de pão de mel.

2081
01: 35: 28,713 -> 01: 35: 30.880
Deixe-me ir em frente e completo
selecione isso e clique em Executar.

2082
01: 35: 30.880 -> 01: 35: 31.505
[MÚSICA, TOCANDO]

2083
01: 35: 31,505 -> 01: 35: 35.200
E você verá agora que temos
vários sprites já, cada um dos quais

2084
01: 35: 35,200 -> 01: 35: 37.830
tem fantasias diferentes, e
Estou sendo questionado.

2085
01: 35: 37.830 -> 01: 35: 38.830
Você quer uma maçã?

2086
01: 35: 38.830 -> 01: 35: 39.400
Sim ou não.

2087
01: 35: 39,400 -> 01: 35: 40.780
Então, meu nome não está mais sendo perguntado.

2088
01: 35: 40,780 -> 01: 35: 42.100
Estou sendo questionado sobre questões arbitrárias.

2089
01: 35: 42,100 -> 01: 35: 42.470
Certo.

2090
01: 35: 42.470 -> 01: 35: 43.887
Deixe-me ir em frente e comer uma maçã.

2091
01: 35: 43,887 -> 01: 35: 45.460
Eu digito sim e pressiono Enter.

2092
01: 35: 45.460 -> 01: 35: 46.450
Observe o movimento.

2093
01: 35: 46.450 -> 01: 35: 48.430
Já vimos movimento antes.

2094
01: 35: 48.430 -> 01: 35: 50.170
[SONS DE CHOMPING]

2095
01: 35: 50,170 -> 01: 35: 50.950
[MÚSICA, TOCANDO]

2096
01: 35: 50,950 -> 01: 35: 54.100
OK, infelizmente, esse foi o
decisão errada para fazer nesta história.

2097
01: 35: 54,100 -> 01: 35: 55.090
Então está tudo bem.

2098
01: 35: 55.090 -> 01: 35: 56.290
Vamos começar de novo.

2099
01: 35: 56,290 -> 01: 35: 57.280
Sinal de pare vermelho.

2100
01: 35: 57,280 -> 01: 35: 57.970
[MÚSICA, TOCANDO]

2101
01: 35: 57.970 -> 01: 35: 58.757
Bandeira verde.

2102
01: 35: 58.757 -> 01: 36: 00.340
Olá querida quer uma maçã?

2103
01: 36: 00,340 -> 01: 36: 02.440
Não, vamos aprender com essa lição.

2104
01: 36: 02.440 -> 01: 36: 04.270
Cupcake soa muito melhor.

2105
01: 36: 04,270 -> 01: 36: 05.680
Vou digitar sim desta vez.

2106
01: 36: 05,680 -> 01: 36: 07.270
Observe, novamente, a moção.

2107
01: 36: 07,270 -> 01: 36: 09.370
Portanto, há alguma animação aí.

2108
01: 36: 09,370 -> 01: 36: 11.410
Ele está tocando o outro sprite.

2109
01: 36: 11.410 -> 01: 36: 12.910
Isso também foi lamentável.

2110
01: 36: 12,910 -> 01: 36: 16.600
Vamos tentar uma última vez com esta arte.

2111
01: 36: 16.600 -> 01: 36: 18.470
E agora temos uma maçã, não.

2112
01: 36: 18.470 -> 01: 36: 19.210
Aprendi uma lição.

2113
01: 36: 19,210 -> 01: 36: 19.960
Cupcake, não.

2114
01: 36: 19,960 -> 01: 36: 21.040
Aprendi uma lição.

2115
01: 36: 21,040 -> 01: 36: 24.288
OK, agora vamos ver o que
acontece com esse loop.

2116
01: 36: 24,288 -> 01: 36: 25.752
[Cacarejando]

2117
01: 36: 25.752 -> 01: 36: 29.170
[GRITANDO]

2118
01: 36: 29,170 -> 01: 36: 31.270
[SONS DE CHOMPING]

2119
01: 36: 31,270 -> 01: 36: 32.650
OK, final surpresa.

2120
01: 36: 32.650 -> 01: 36: 35.680
Mas isso é tudo para dizer que tomando
esses blocos de construção de loops,

2121
01: 36: 35.680 -> 01: 36: 37.420
condições e funções,
você pode começar a fazer coisas

2122
01: 36: 37,420 -> 01: 36: 38.770
que são um pouco mais interativos.

2123
01: 36: 38,770 -> 01: 36: 41.380
Na verdade, eu mesmo fiz algo
anos atrás - a primeira coisa

2124
01: 36: 41,380 -> 01: 36: 44.213
Eu mesmo escrevi no Scratch foi
na verdade, quando eu estava na pós-graduação

2125
01: 36: 44,213 -> 01: 36: 47.630
e com registro cruzado para uma classe
no MIT, o professor para o qual

2126
01: 36: 47.630 -> 01: 36: 50.830
foi o autor de e o
originador do próprio Scratch.

2127
01: 36: 50,830 -> 01: 36: 53.470
E deixe-me ir em frente e
tela cheia isso e propor

2128
01: 36: 53.470 -> 01: 36: 58.030
como eu pensei em resolver, agora, um
problema bastante grande naquela época.

2129
01: 36: 58,030 -> 01: 37: 00.670
Arraste o máximo de lixo que cair
na lata como você pode.

2130
01: 37: 00,670 -> 01: 37: 01.840
Então, o que está acontecendo agora?

2131
01: 37: 01,840 -> 01: 37: 03.958
Um pedaço de lixo é
caindo na tela.

2132
01: 37: 03,958 -> 01: 37: 06.250
Você verá que está se movendo
de cima para baixo,

2133
01: 37: 06,250 -> 01: 37: 08.040
e vimos animações assim.

2134
01: 37: 08,040 -> 01: 37: 08.680
Mas observe isso.

2135
01: 37: 08,680 -> 01: 37: 11.800
Aposto usando uma condição
e um loop eterno,

2136
01: 37: 11.800 -> 01: 37: 14.600
podemos tornar possível pegar isso.

2137
01: 37: 14.600 -> 01: 37: 18.010
Observe agora que o lixo está seguindo
meu cursor, assim como o gato estava.

2138
01: 37: 18,010 -> 01: 37: 21.550
E observe se tocar neste
outro lixo pode sprite,

2139
01: 37: 21.550 -> 01: 37: 24.760
talvez possamos até conseguir o Oscar
para sair da lata.

2140
01: 37: 24,760 -> 01: 37: 27.700
E ele, então, começa a contar
minha pontuação, usando assim uma variável,

2141
01: 37: 27,700 -> 01: 37: 30.400
e de fato, como mais sprites
ou mais lixo cai,

2142
01: 37: 30.400 -> 01: 37: 32.613
Eu posso continuar a jogar
um jogo desta forma.

2143
01: 37: 32.613 -> 01: 37: 35.530
Mas aqui também, embora as coisas
estão começando a acontecer mais rapidamente,

2144
01: 37: 35.530 -> 01: 37: 38.280
há mais na tela, o
a música está tocando ao fundo,

2145
01: 37: 38,280 -> 01: 37: 40.720
tudo se reduz a blocos de construção básicos.

2146
01: 37: 40,720 -> 01: 37: 42.040
E não consigo enfatizar o suficiente.

2147
01: 37: 42,040 -> 01: 37: 44.380
Quando eu escrevi isso primeiro
programa anos atrás,

2148
01: 37: 44,380 -> 01: 37: 46.390
Eu não implementei o que você acabou de ver.

2149
01: 37: 46,390 -> 01: 37: 49.240
Eu acho que a primeira coisa
Eu fiz foi pesquisei por aí

2150
01: 37: 49,240 -> 01: 37: 52.515
e encontrei a rua da Vila Sésamo
lâmpada e eu coloco isso na tela.

2151
01: 37: 52.515 -> 01: 37: 53.890
E essa era uma espécie de versão um.

2152
01: 37: 53.890 -> 01: 37: 56.170
Não fez nada, mas
parecia o que eu queria.

2153
01: 37: 56,170 -> 01: 37: 57.880
Então eu adicionei a lata de lixo.

2154
01: 37: 57.880 -> 01: 38: 02.200
Então eu acho que programei uma peça
de lixo ou um sprite cair.

2155
01: 38: 02,200 -> 01: 38: 04.570
Então mudei o gato para
um pedaço de lixo e então

2156
01: 38: 04,570 -> 01: 38: 07.010
Eu fiz a animação de cima para baixo.

2157
01: 38: 07,010 -> 01: 38: 10.420
Então, a versão quatro ou cinco,
Eu então adicionei um loop eterno

2158
01: 38: 10,420 -> 01: 38: 13.330
e uma condição que verifica
se o botão do mouse estiver pressionado,

2159
01: 38: 13,330 -> 01: 38: 16.180
e se sim, eu tenho
siga o ponteiro do mouse.

2160
01: 38: 16,180 -> 01: 38: 19.330
Então peguei um grande problema e
quebrou pouco a pouco

2161
01: 38: 19,330 -> 01: 38: 21.140
em etapas muito menores.

2162
01: 38: 21,140 -> 01: 38: 25.363
E esta era a mesma abordagem que
Andrew Berry do próprio CS50 levou anos atrás,

2163
01: 38: 25,363 -> 01: 38: 26.530
um de nossos companheiros de ensino.

2164
01: 38: 26.530 -> 01: 38: 30.040
No primeiro ano em que ensinei CS50,
criou seu primeiro Scratch

2165
01: 38: 30,040 -> 01: 38: 33.400
projeto que eu pensei que iria
deixe-nos aqui hoje.

2166
01: 38: 33.400 -> 01: 38: 36.100
Este é um programa que
ele chamou Raining Men.

2167
01: 38: 36,100 -> 01: 38: 38.200
Pode ter um familiar
sintonize, e eu iria

2168
01: 38: 38,200 -> 01: 38: 41.530
propor que você considere,
ao assistir isso,

2169
01: 38: 41,530 -> 01: 38: 46.780
nosso programa Scratch final hoje, como
é que Andrew começou a programar

2170
01: 38: 46,780 -> 01: 38: 48.370
tudo o que você vê.

2171
01: 38: 48,370 -> 01: 38: 51.530
Agora Andrew foi para o mundo real
e não estudou ciência da computação,

2172
01: 38: 51.530 -> 01: 38: 52.030
per se.

2173
01: 38: 52,030 -> 01: 38: 55.420
Na verdade ele é agora o general
gerente do Cleveland Browns,

2174
01: 38: 55.420 -> 01: 38: 57.010
que é um time de futebol americano.

2175
01: 38: 57,010 -> 01: 39: 00.760
Mas isso também fala apenas
que tipo de fundação você

2176
01: 39: 00,760 -> 01: 39: 03.862
pode formar, independentemente do seu
principal pretendido, seu possível principal,

2177
01: 39: 03,862 -> 01: 39: 06.820
considerando, afinal, que muito
das ideias nas quais vamos nos concentrar

2178
01: 39: 06,820 -> 01: 39: 09.160
nesta classe são, no final das contas
sobre resolução de problemas,

2179
01: 39: 09,160 -> 01: 39: 11.710
programação sendo apenas
uma ferramenta para o comércio.

2180
01: 39: 11,710 -> 01: 39: 13.870
E, de fato, mesmo dentro
o mundo dos esportes,

2181
01: 39: 13.870 -> 01: 39: 17.350
existem tantas oportunidades
hoje em dia para algoritmos, para análise,

2182
01: 39: 17.350 -> 01: 39: 21.190
para simulações de vídeo disso,
e tantos mundos de Andrew

2183
01: 39: 21,190 -> 01: 39: 24.430
e seus mundos vão
invariavelmente começa a colidir

2184
01: 39: 24,430 -> 01: 39: 26.410
quando você começa a construir
crie seu próprio kit de ferramentas

2185
01: 39: 26,410 -> 01: 39: 28.370
e sua própria compreensão disso.

2186
01: 39: 28,370 -> 01: 39: 31.540
Então, para concluir, vamos dar um
olhe para isso, programa Andrews.

2187
01: 39: 31,540 -> 01: 39: 37.364
Nesse ínterim, este foi
CS50, e agora está chovendo homens.

2188
01: 39: 37,364 -> 01: 39: 40.346
[MÚSICA - "ESTÁ CHOVENDO HOMENS]

2189
01: 39: 40,346 -> 01: 40: 05.196


2190
01: 40: 05,196 -> 01: 40: 06.187
COMPUTADOR: Olá.

2191
01: 40: 06,187 -> 01: 40: 06.687
Oi.

2192
01: 40: 06.687 -> 01: 40: 08.178
Nós somos suas garotas do tempo.

2193
01: 40: 08,178 -> 01: 40: 09.172
Uh huh.

2194
01: 40: 09,172 -> 01: 40: 11.657
E temos novidades para você.

2195
01: 40: 11.657 -> 01: 40: 12.651
É melhor você ouvir.

2196
01: 40: 12.651 -> 01: 40: 18.118
Prepare-se, todas as meninas solitárias,
e deixe esses guarda-chuvas em casa.

2197
01: 40: 18.,118 -> 01: 40: 19.112
Tudo bem.

2198
01: 40: 19,112 -> 01: 40: 24.576
(Cantando) A umidade está aumentando,
barômetro está ficando baixo.

2199
01: 40: 24.576 -> 01: 40: 25.076
Oh.

2200
01: 40: 25.076 -> 01: 40: 26.070
Uh oh.

2201
01: 40: 26.070 -> 01: 40: 28.280
De acordo com todas as fontes -

2202
01: 40: 28,280 -> 01: 40: 29.750
Quais fontes agora?

2203
01: 40: 29.750 -> 01: 40: 32.690
A rua é o lugar certo.

2204
01: 40: 32.690 -> 01: 40: 40.040
Porque esta noite pela primeira
hora, por volta das 10h30,

2205
01: 40: 40.040 -> 01: 40: 47.880
pela primeira vez na história
vai começar a chover homens!

2206
01: 40: 47,880 -> 01: 40: 54.340
Está chovendo homens, aleluia,
está chovendo homens--

2207
01: 40: 54.340 -> 01: 40: 58.890
[MÚSICA, TOCANDO]

2208
01: 40: 58,890 -> 01: 41: 53.000